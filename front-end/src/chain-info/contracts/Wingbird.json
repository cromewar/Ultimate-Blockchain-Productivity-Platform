{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "honorSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_ipfs_cid",
          "type": "string"
        }
      ],
      "name": "missionOneCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_ipfs_cid",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_consensus",
          "type": "bool"
        }
      ],
      "name": "missionTwoConsensusCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "userCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "userFunded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "birdSeeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ipfs_cid_mission",
          "type": "string"
        }
      ],
      "name": "buildFences",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorIdToEgg",
      "outputs": [
        {
          "internalType": "enum Wingbird.EggColors",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_nickname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_imgURL",
          "type": "string"
        }
      ],
      "name": "createNewUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bird",
          "type": "address"
        }
      ],
      "name": "getFinalHonors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "OwlPoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "EaglePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "PeacockPoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "HummingbirdPoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "PenguinPoints",
              "type": "uint256"
            }
          ],
          "internalType": "struct Wingbird.BirdHonors",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        }
      ],
      "name": "getIpfsObject",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "ipfs_cid",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_birds",
              "type": "address[]"
            }
          ],
          "internalType": "struct Wingbird.IpfsInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalBirds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bird",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "nickName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imgURL",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "randomNumber",
              "type": "uint256"
            }
          ],
          "internalType": "struct Wingbird.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bird",
          "type": "address"
        }
      ],
      "name": "getUserBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "giveHonors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomResult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_consensusReached",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_ipfs_cid_mission2",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_birds",
          "type": "address[]"
        }
      ],
      "name": "reachConsensus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_owl",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_eagle",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_peacock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_penguin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hummingbird",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_bird",
          "type": "address"
        }
      ],
      "name": "setFinalHonors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ipfs_cid_mission1",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_birds",
          "type": "address[]"
        }
      ],
      "name": "syncSenses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/cromewar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
    "1": "/home/cromewar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "2": "/home/cromewar/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.3.1/contracts/src/v0.8/VRFConsumerBase.sol",
    "3": "/home/cromewar/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.3.1/contracts/src/v0.8/VRFRequestIDBase.sol",
    "5": "contracts/Wingbird.sol"
  },
  "ast": {
    "absolutePath": "contracts/Wingbird.sol",
    "exportedSymbols": {
      "Context": [
        1011
      ],
      "LinkTokenInterface": [
        989
      ],
      "Ownable": [
        773
      ],
      "VRFConsumerBase": [
        894
      ],
      "VRFRequestIDBase": [
        1061
      ],
      "Wingbird": [
        549
      ]
    },
    "id": 550,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "/home/cromewar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 774,
        "src": "57:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/cromewar/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.3.1/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 895,
        "src": "110:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 773,
              "src": "241:7:5"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "241:7:5"
          },
          {
            "baseName": {
              "id": 6,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 894,
              "src": "250:15:5"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "250:15:5"
          }
        ],
        "canonicalName": "Wingbird",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 549,
        "linearizedBaseContracts": [
          549,
          894,
          1061,
          773,
          1011
        ],
        "name": "Wingbird",
        "nameLocation": "229:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "keyHash",
            "nameLocation": "331:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "314:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "361:3:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "344:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "42619f66",
            "id": 13,
            "mutability": "mutable",
            "name": "randomResult",
            "nameLocation": "385:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "370:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "370:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "566:87:5",
              "statements": [
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "576:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "586:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "576:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "576:18:5"
                },
                {
                  "expression": {
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "604:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "610:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "604:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "604:10:5"
                }
              ]
            },
            "id": 37,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "542:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 25,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "559:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 26,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 894,
                  "src": "526:15:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "526:39:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "433:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "425:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "466:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "458:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "489:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "481:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "511:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "503:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:110:5"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:5"
            },
            "scope": 549,
            "src": "404:249:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "693:249:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 45,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "747:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wingbird_$549",
                                    "typeString": "contract Wingbird"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Wingbird_$549",
                                    "typeString": "contract Wingbird"
                                  }
                                ],
                                "id": 44,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "739:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 43,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "739:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "739:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 41,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "724:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$989",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 42,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 921,
                            "src": "724:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "724:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 48,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "757:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "724:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e7472616374207769746820666175636574",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "774:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                        },
                        "value": "Not enough LINK - fill contract with faucet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "703:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:126:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "703:126:5"
                },
                {
                  "assignments": [
                    54
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "847:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 64,
                      "src": "839:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 53,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "839:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "877:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 57,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "886:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "859:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "839:51:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "925:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 60,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "905:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "EmitStatement",
                  "src": "900:35:5"
                }
              ]
            },
            "functionSelector": "dbdff2c1",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nameLocation": "668:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:5"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:5"
            },
            "scope": 549,
            "src": "659:283:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              788
            ],
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1054:97:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1072:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1086:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1072:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72616e646f6d206e6f7420666f756e64",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1089:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2622a17f6945d7498ef324c9f4db2ab1966b79df47f51bdfa86624e78e47f28",
                          "typeString": "literal_string \"random not found\""
                        },
                        "value": "random not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2622a17f6945d7498ef324c9f4db2ab1966b79df47f51bdfa86624e78e47f28",
                          "typeString": "literal_string \"random not found\""
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1064:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:44:5"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "randomResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1118:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 81,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1133:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1118:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:26:5"
                }
              ]
            },
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "957:17:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 71,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1041:8:5"
            },
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "983:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "975:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "1003:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "995:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:41:5"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1054:0:5"
            },
            "scope": 549,
            "src": "948:203:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "Wingbird.User",
            "id": 92,
            "members": [
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "nickName",
                "nameLocation": "1278:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "1271:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 86,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1271:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "imgURL",
                "nameLocation": "1303:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "1296:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 88,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1296:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91,
                "mutability": "mutable",
                "name": "randomNumber",
                "nameLocation": "1327:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "1319:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 90,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1319:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1256:4:5",
            "nodeType": "StructDefinition",
            "scope": 549,
            "src": "1249:97:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Wingbird.EggColors",
            "id": 96,
            "members": [
              {
                "id": 93,
                "name": "RED",
                "nameLocation": "1377:3:5",
                "nodeType": "EnumValue",
                "src": "1377:3:5"
              },
              {
                "id": 94,
                "name": "GREE",
                "nameLocation": "1390:4:5",
                "nodeType": "EnumValue",
                "src": "1390:4:5"
              },
              {
                "id": 95,
                "name": "PURPLE",
                "nameLocation": "1404:6:5",
                "nodeType": "EnumValue",
                "src": "1404:6:5"
              }
            ],
            "name": "EggColors",
            "nameLocation": "1357:9:5",
            "nodeType": "EnumDefinition",
            "src": "1352:64:5"
          },
          {
            "canonicalName": "Wingbird.BirdHonors",
            "id": 107,
            "members": [
              {
                "constant": false,
                "id": 98,
                "mutability": "mutable",
                "name": "OwlPoints",
                "nameLocation": "1458:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1450:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 97,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 100,
                "mutability": "mutable",
                "name": "EaglePoints",
                "nameLocation": "1485:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1477:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 99,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1477:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 102,
                "mutability": "mutable",
                "name": "PeacockPoints",
                "nameLocation": "1514:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1506:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 101,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1506:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 104,
                "mutability": "mutable",
                "name": "HummingbirdPoints",
                "nameLocation": "1545:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1537:25:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 103,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1537:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 106,
                "mutability": "mutable",
                "name": "PenguinPoints",
                "nameLocation": "1580:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1572:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 105,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1572:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BirdHonors",
            "nameLocation": "1429:10:5",
            "nodeType": "StructDefinition",
            "scope": 549,
            "src": "1422:178:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Wingbird.BirdRoles",
            "id": 113,
            "members": [
              {
                "id": 108,
                "name": "EAGLE",
                "nameLocation": "1631:5:5",
                "nodeType": "EnumValue",
                "src": "1631:5:5"
              },
              {
                "id": 109,
                "name": "OWL",
                "nameLocation": "1646:3:5",
                "nodeType": "EnumValue",
                "src": "1646:3:5"
              },
              {
                "id": 110,
                "name": "PEACOCK",
                "nameLocation": "1659:7:5",
                "nodeType": "EnumValue",
                "src": "1659:7:5"
              },
              {
                "id": 111,
                "name": "PENGUIN",
                "nameLocation": "1676:7:5",
                "nodeType": "EnumValue",
                "src": "1676:7:5"
              },
              {
                "id": 112,
                "name": "HUMMINGBIRD",
                "nameLocation": "1693:11:5",
                "nodeType": "EnumValue",
                "src": "1693:11:5"
              }
            ],
            "name": "BirdRoles",
            "nameLocation": "1611:9:5",
            "nodeType": "EnumDefinition",
            "src": "1606:104:5"
          },
          {
            "canonicalName": "Wingbird.IpfsInfo",
            "id": 119,
            "members": [
              {
                "constant": false,
                "id": 115,
                "mutability": "mutable",
                "name": "ipfs_cid",
                "nameLocation": "1749:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 119,
                "src": "1742:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1742:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 118,
                "mutability": "mutable",
                "name": "_birds",
                "nameLocation": "1777:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 119,
                "src": "1767:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 117,
                  "nodeType": "ArrayTypeName",
                  "src": "1767:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "IpfsInfo",
            "nameLocation": "1723:8:5",
            "nodeType": "StructDefinition",
            "scope": 549,
            "src": "1716:74:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 122,
            "mutability": "mutable",
            "name": "birds",
            "nameLocation": "1806:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "1796:15:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_BirdRoles_$113",
              "typeString": "enum Wingbird.BirdRoles"
            },
            "typeName": {
              "id": 121,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 120,
                "name": "BirdRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 113,
                "src": "1796:9:5"
              },
              "referencedDeclaration": 113,
              "src": "1796:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_BirdRoles_$113",
                "typeString": "enum Wingbird.BirdRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 125,
            "mutability": "mutable",
            "name": "totalBirdsOnPlatform",
            "nameLocation": "1828:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "1818:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 123,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1818:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 124,
              "nodeType": "ArrayTypeName",
              "src": "1818:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 130,
            "mutability": "mutable",
            "name": "birdsOnThePlatform",
            "nameLocation": "1920:18:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "1895:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$92_storage_$",
              "typeString": "mapping(address => struct Wingbird.User)"
            },
            "typeName": {
              "id": 129,
              "keyType": {
                "id": 126,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1903:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1895:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$92_storage_$",
                "typeString": "mapping(address => struct Wingbird.User)"
              },
              "valueType": {
                "id": 128,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 127,
                  "name": "User",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "1914:4:5"
                },
                "referencedDeclaration": 92,
                "src": "1914:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$92_storage_ptr",
                  "typeString": "struct Wingbird.User"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "d97b4048",
            "id": 135,
            "mutability": "mutable",
            "name": "colorIdToEgg",
            "nameLocation": "1981:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "1944:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_EggColors_$96_$",
              "typeString": "mapping(uint256 => enum Wingbird.EggColors)"
            },
            "typeName": {
              "id": 134,
              "keyType": {
                "id": 131,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1952:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1944:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_EggColors_$96_$",
                "typeString": "mapping(uint256 => enum Wingbird.EggColors)"
              },
              "valueType": {
                "id": 133,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 132,
                  "name": "EggColors",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "1963:9:5"
                },
                "referencedDeclaration": 96,
                "src": "1963:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_EggColors_$96",
                  "typeString": "enum Wingbird.EggColors"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd00cc59",
            "id": 139,
            "mutability": "mutable",
            "name": "birdSeeds",
            "nameLocation": "2034:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "1999:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 138,
              "keyType": {
                "id": 136,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2007:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1999:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 137,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2018:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 144,
            "mutability": "mutable",
            "name": "birdHonor",
            "nameLocation": "2080:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "2049:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
              "typeString": "mapping(address => struct Wingbird.BirdHonors)"
            },
            "typeName": {
              "id": 143,
              "keyType": {
                "id": 140,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2057:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2049:30:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                "typeString": "mapping(address => struct Wingbird.BirdHonors)"
              },
              "valueType": {
                "id": 142,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 141,
                  "name": "BirdHonors",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "2068:10:5"
                },
                "referencedDeclaration": 107,
                "src": "2068:10:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BirdHonors_$107_storage_ptr",
                  "typeString": "struct Wingbird.BirdHonors"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 149,
            "mutability": "mutable",
            "name": "ipfsCids",
            "nameLocation": "2123:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "2095:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_IpfsInfo_$119_storage_$",
              "typeString": "mapping(string => struct Wingbird.IpfsInfo)"
            },
            "typeName": {
              "id": 148,
              "keyType": {
                "id": 145,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2103:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2095:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_IpfsInfo_$119_storage_$",
                "typeString": "mapping(string => struct Wingbird.IpfsInfo)"
              },
              "valueType": {
                "id": 147,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 146,
                  "name": "IpfsInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119,
                  "src": "2113:8:5"
                },
                "referencedDeclaration": 119,
                "src": "2113:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_IpfsInfo_$119_storage_ptr",
                  "typeString": "struct Wingbird.IpfsInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 153,
            "name": "RequestedRandomness",
            "nameLocation": "2178:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2206:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2198:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:19:5"
            },
            "src": "2172:45:5"
          },
          {
            "anonymous": false,
            "id": 157,
            "name": "userCreated",
            "nameLocation": "2243:11:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "2263:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2255:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2254:22:5"
            },
            "src": "2237:40:5"
          },
          {
            "anonymous": false,
            "id": 163,
            "name": "userFunded",
            "nameLocation": "2288:10:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "2307:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2299:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2329:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2321:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2298:39:5"
            },
            "src": "2282:56:5"
          },
          {
            "anonymous": false,
            "id": 167,
            "name": "honorSent",
            "nameLocation": "2349:9:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2367:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2359:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2358:17:5"
            },
            "src": "2343:33:5"
          },
          {
            "anonymous": false,
            "id": 171,
            "name": "missionOneCompleted",
            "nameLocation": "2460:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_ipfs_cid",
                  "nameLocation": "2487:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2480:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2479:18:5"
            },
            "src": "2454:44:5"
          },
          {
            "anonymous": false,
            "id": 177,
            "name": "missionTwoConsensusCompleted",
            "nameLocation": "2509:28:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_ipfs_cid",
                  "nameLocation": "2545:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2538:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_consensus",
                  "nameLocation": "2561:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2556:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:35:5"
            },
            "src": "2503:70:5"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "2885:540:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 186,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2975:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2975:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 185,
                            "name": "getUserBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "2960:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2960:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2990:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2960:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c72656164792065786973747321",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2993:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c3b8b605047efaafd348d2c7a1430ed7e96ee02460da94259fea55534f721ed",
                          "typeString": "literal_string \"User already exists!\""
                        },
                        "value": "User already exists!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c3b8b605047efaafd348d2c7a1430ed7e96ee02460da94259fea55534f721ed",
                          "typeString": "literal_string \"User already exists!\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2952:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2952:64:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 194,
                      "name": "getRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "3026:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3026:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3026:17:5"
                },
                {
                  "assignments": [
                    199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 199,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "3065:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "3053:16:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$92_memory_ptr",
                        "typeString": "struct Wingbird.User"
                      },
                      "typeName": {
                        "id": 198,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 197,
                          "name": "User",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 92,
                          "src": "3053:4:5"
                        },
                        "referencedDeclaration": 92,
                        "src": "3053:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$92_storage_ptr",
                          "typeString": "struct Wingbird.User"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 205,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 201,
                        "name": "_nickname",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "3077:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 202,
                        "name": "_imgURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3088:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 203,
                        "name": "randomResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3097:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 200,
                      "name": "User",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "3072:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_User_$92_storage_ptr_$",
                        "typeString": "type(struct Wingbird.User storage pointer)"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3072:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$92_memory_ptr",
                      "typeString": "struct Wingbird.User memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3053:57:5"
                },
                {
                  "expression": {
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 206,
                        "name": "birdsOnThePlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "3120:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$92_storage_$",
                          "typeString": "mapping(address => struct Wingbird.User storage ref)"
                        }
                      },
                      "id": 209,
                      "indexExpression": {
                        "expression": {
                          "id": 207,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3139:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3139:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3120:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$92_storage",
                        "typeString": "struct Wingbird.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 210,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "3153:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$92_memory_ptr",
                        "typeString": "struct Wingbird.User memory"
                      }
                    },
                    "src": "3120:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$92_storage",
                      "typeString": "struct Wingbird.User storage ref"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:37:5"
                },
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "birdHonors",
                      "nameLocation": "3185:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "3167:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BirdHonors_$107_memory_ptr",
                        "typeString": "struct Wingbird.BirdHonors"
                      },
                      "typeName": {
                        "id": 214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 213,
                          "name": "BirdHonors",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 107,
                          "src": "3167:10:5"
                        },
                        "referencedDeclaration": 107,
                        "src": "3167:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BirdHonors_$107_storage_ptr",
                          "typeString": "struct Wingbird.BirdHonors"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3209:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3212:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3215:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3218:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3221:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 216,
                      "name": "BirdHonors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3198:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_BirdHonors_$107_storage_ptr_$",
                        "typeString": "type(struct Wingbird.BirdHonors storage pointer)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BirdHonors_$107_memory_ptr",
                      "typeString": "struct Wingbird.BirdHonors memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3167:56:5"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 224,
                        "name": "birdHonor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3233:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                          "typeString": "mapping(address => struct Wingbird.BirdHonors storage ref)"
                        }
                      },
                      "id": 227,
                      "indexExpression": {
                        "expression": {
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3243:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3243:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3233:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                        "typeString": "struct Wingbird.BirdHonors storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 228,
                      "name": "birdHonors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3257:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BirdHonors_$107_memory_ptr",
                        "typeString": "struct Wingbird.BirdHonors memory"
                      }
                    },
                    "src": "3233:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                      "typeString": "struct Wingbird.BirdHonors storage ref"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "3233:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3303:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3303:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 231,
                        "name": "totalBirdsOnPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3277:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3277:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:37:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3341:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3341:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3353:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 238,
                      "name": "giveInitialSeeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "3324:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:33:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3407:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3407:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 244,
                      "name": "userCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3395:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "EmitStatement",
                  "src": "3390:28:5"
                }
              ]
            },
            "functionSelector": "4dfa3f18",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewUser",
            "nameLocation": "2804:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_nickname",
                  "nameLocation": "2832:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2818:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_imgURL",
                  "nameLocation": "2857:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2843:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2817:48:5"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2885:0:5"
            },
            "scope": 549,
            "src": "2795:630:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3661:153:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "3679:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3690:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3679:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865204d696e696d756d20616d6f756e742073686f756c6420626520313030",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3695:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e2d006a7ebebef512f31eccd5a2a59e338a5f94f1aa4144b42a30d254e77693",
                          "typeString": "literal_string \"The Minimum amount should be 100\""
                        },
                        "value": "The Minimum amount should be 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e2d006a7ebebef512f31eccd5a2a59e338a5f94f1aa4144b42a30d254e77693",
                          "typeString": "literal_string \"The Minimum amount should be 100\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3671:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3671:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3671:59:5"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 264,
                        "name": "birdSeeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "3740:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 266,
                      "indexExpression": {
                        "id": 265,
                        "name": "_bird",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3750:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3740:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 267,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "3759:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3740:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3740:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 271,
                        "name": "_bird",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3792:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3799:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 270,
                      "name": "userFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "3781:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3781:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "EmitStatement",
                  "src": "3776:31:5"
                }
              ]
            },
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveInitialSeeds",
            "nameLocation": "3603:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "_bird",
                  "nameLocation": "3628:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3620:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3620:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3643:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3635:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3619:32:5"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3661:0:5"
            },
            "scope": 549,
            "src": "3594:220:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3886:49:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 284,
                      "name": "birdsOnThePlatform",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "3903:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$92_storage_$",
                        "typeString": "mapping(address => struct Wingbird.User storage ref)"
                      }
                    },
                    "id": 286,
                    "indexExpression": {
                      "id": 285,
                      "name": "_bird",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "3922:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3903:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$92_storage",
                      "typeString": "struct Wingbird.User storage ref"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "3896:32:5"
                }
              ]
            },
            "functionSelector": "6f77926b",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUser",
            "nameLocation": "3829:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_bird",
                  "nameLocation": "3845:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3837:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3836:15:5"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3873:11:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$92_memory_ptr",
                    "typeString": "struct Wingbird.User"
                  },
                  "typeName": {
                    "id": 281,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 280,
                      "name": "User",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 92,
                      "src": "3873:4:5"
                    },
                    "referencedDeclaration": 92,
                    "src": "3873:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$92_storage_ptr",
                      "typeString": "struct Wingbird.User"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3872:13:5"
            },
            "scope": 549,
            "src": "3820:115:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "4010:40:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 296,
                      "name": "birdSeeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "4027:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 298,
                    "indexExpression": {
                      "id": 297,
                      "name": "_bird",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "4037:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4027:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 295,
                  "id": 299,
                  "nodeType": "Return",
                  "src": "4020:23:5"
                }
              ]
            },
            "functionSelector": "47734892",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBalance",
            "nameLocation": "3950:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "_bird",
                  "nameLocation": "3973:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "3965:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3965:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3964:15:5"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "4001:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:9:5"
            },
            "scope": 549,
            "src": "3941:109:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "4111:51:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 306,
                      "name": "totalBirdsOnPlatform",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "4128:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4128:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 305,
                  "id": 308,
                  "nodeType": "Return",
                  "src": "4121:34:5"
                }
              ]
            },
            "functionSelector": "64f63b1e",
            "id": 310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalBirds",
            "nameLocation": "4065:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4078:2:5"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "4102:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4102:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4101:9:5"
            },
            "scope": 549,
            "src": "4056:106:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "4392:309:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 320,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4436:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4436:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 322,
                              "name": "_birds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "4448:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "id": 319,
                            "name": "checkAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "4423:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,address[] memory) pure returns (bool)"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4423:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4459:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4423:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220646f6573206e6f7420657869737473206f6e207468652067726f7570",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4477:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ea25e23a77e672a2b8c6d183daddc4f7dff47cd595831e664fcb748af15a72d",
                          "typeString": "literal_string \"User does not exists on the group\""
                        },
                        "value": "User does not exists on the group"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ea25e23a77e672a2b8c6d183daddc4f7dff47cd595831e664fcb748af15a72d",
                          "typeString": "literal_string \"User does not exists on the group\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4402:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4402:120:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "4402:120:5"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "newCid",
                      "nameLocation": "4548:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "4532:22:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsInfo_$119_memory_ptr",
                        "typeString": "struct Wingbird.IpfsInfo"
                      },
                      "typeName": {
                        "id": 330,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 329,
                          "name": "IpfsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 119,
                          "src": "4532:8:5"
                        },
                        "referencedDeclaration": 119,
                        "src": "4532:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IpfsInfo_$119_storage_ptr",
                          "typeString": "struct Wingbird.IpfsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 336,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 333,
                        "name": "_ipfs_cid_mission1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4566:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 334,
                        "name": "_birds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "4586:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 332,
                      "name": "IpfsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "4557:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_IpfsInfo_$119_storage_ptr_$",
                        "typeString": "type(struct Wingbird.IpfsInfo storage pointer)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4557:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsInfo_$119_memory_ptr",
                      "typeString": "struct Wingbird.IpfsInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4532:61:5"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 337,
                        "name": "ipfsCids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "4603:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_IpfsInfo_$119_storage_$",
                          "typeString": "mapping(string memory => struct Wingbird.IpfsInfo storage ref)"
                        }
                      },
                      "id": 339,
                      "indexExpression": {
                        "id": 338,
                        "name": "_ipfs_cid_mission1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4612:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4603:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsInfo_$119_storage",
                        "typeString": "struct Wingbird.IpfsInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 340,
                      "name": "newCid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "4634:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsInfo_$119_memory_ptr",
                        "typeString": "struct Wingbird.IpfsInfo memory"
                      }
                    },
                    "src": "4603:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsInfo_$119_storage",
                      "typeString": "struct Wingbird.IpfsInfo storage ref"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4603:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "_ipfs_cid_mission1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4675:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 343,
                      "name": "missionOneCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "4655:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "EmitStatement",
                  "src": "4650:44:5"
                }
              ]
            },
            "functionSelector": "963b7349",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "syncSenses",
            "nameLocation": "4293:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "_ipfs_cid_mission1",
                  "nameLocation": "4327:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "4313:32:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_birds",
                  "nameLocation": "4372:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "4355:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 313,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4355:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 314,
                    "nodeType": "ArrayTypeName",
                    "src": "4355:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4303:81:5"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4392:0:5"
            },
            "scope": 549,
            "src": "4284:417:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 395,
              "nodeType": "Block",
              "src": "4851:440:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 360,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4895:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4895:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 362,
                              "name": "_birds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "4907:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "id": 359,
                            "name": "checkAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "4882:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,address[] memory) pure returns (bool)"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4882:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4918:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4882:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220646f6573206e6f7420657869737473206f6e207468652067726f7570",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4936:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ea25e23a77e672a2b8c6d183daddc4f7dff47cd595831e664fcb748af15a72d",
                          "typeString": "literal_string \"User does not exists on the group\""
                        },
                        "value": "User does not exists on the group"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ea25e23a77e672a2b8c6d183daddc4f7dff47cd595831e664fcb748af15a72d",
                          "typeString": "literal_string \"User does not exists on the group\""
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4861:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4861:120:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "4861:120:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 370,
                          "name": "_consensusReached",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "4999:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5020:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4999:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e73656e737573206e6f742072656163686564",
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5026:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5eefc7093a4538c22e31028f4431f864bdb9155d8868ec4a1bafce312f509ee9",
                          "typeString": "literal_string \"Consensus not reached\""
                        },
                        "value": "Consensus not reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5eefc7093a4538c22e31028f4431f864bdb9155d8868ec4a1bafce312f509ee9",
                          "typeString": "literal_string \"Consensus not reached\""
                        }
                      ],
                      "id": 369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4991:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:59:5"
                },
                {
                  "assignments": [
                    378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 378,
                      "mutability": "mutable",
                      "name": "newCid",
                      "nameLocation": "5076:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 395,
                      "src": "5060:22:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsInfo_$119_memory_ptr",
                        "typeString": "struct Wingbird.IpfsInfo"
                      },
                      "typeName": {
                        "id": 377,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 376,
                          "name": "IpfsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 119,
                          "src": "5060:8:5"
                        },
                        "referencedDeclaration": 119,
                        "src": "5060:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IpfsInfo_$119_storage_ptr",
                          "typeString": "struct Wingbird.IpfsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 380,
                        "name": "_ipfs_cid_mission2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "5094:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 381,
                        "name": "_birds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "5114:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 379,
                      "name": "IpfsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "5085:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_IpfsInfo_$119_storage_ptr_$",
                        "typeString": "type(struct Wingbird.IpfsInfo storage pointer)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5085:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsInfo_$119_memory_ptr",
                      "typeString": "struct Wingbird.IpfsInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5060:61:5"
                },
                {
                  "expression": {
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 384,
                        "name": "ipfsCids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "5131:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_IpfsInfo_$119_storage_$",
                          "typeString": "mapping(string memory => struct Wingbird.IpfsInfo storage ref)"
                        }
                      },
                      "id": 386,
                      "indexExpression": {
                        "id": 385,
                        "name": "_ipfs_cid_mission2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "5140:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5131:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsInfo_$119_storage",
                        "typeString": "struct Wingbird.IpfsInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 387,
                      "name": "newCid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "5162:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsInfo_$119_memory_ptr",
                        "typeString": "struct Wingbird.IpfsInfo memory"
                      }
                    },
                    "src": "5131:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsInfo_$119_storage",
                      "typeString": "struct Wingbird.IpfsInfo storage ref"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "5131:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 391,
                        "name": "_ipfs_cid_mission2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "5225:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 392,
                        "name": "_consensusReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "5257:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 390,
                      "name": "missionTwoConsensusCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "5183:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,bool)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5183:101:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "EmitStatement",
                  "src": "5178:106:5"
                }
              ]
            },
            "functionSelector": "5fd5d70b",
            "id": 396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reachConsensus",
            "nameLocation": "4716:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "_consensusReached",
                  "nameLocation": "4745:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "4740:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "_ipfs_cid_mission2",
                  "nameLocation": "4786:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "4772:32:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4772:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_birds",
                  "nameLocation": "4831:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "4814:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 353,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4814:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 354,
                    "nodeType": "ArrayTypeName",
                    "src": "4814:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4730:113:5"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4851:0:5"
            },
            "scope": 549,
            "src": "4707:584:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "5406:38:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 404,
                      "name": "ipfsCids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "5423:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_IpfsInfo_$119_storage_$",
                        "typeString": "mapping(string memory => struct Wingbird.IpfsInfo storage ref)"
                      }
                    },
                    "id": 406,
                    "indexExpression": {
                      "id": 405,
                      "name": "_cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "5432:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5423:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsInfo_$119_storage",
                      "typeString": "struct Wingbird.IpfsInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 407,
                  "nodeType": "Return",
                  "src": "5416:21:5"
                }
              ]
            },
            "functionSelector": "2eb0e1e6",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIpfsObject",
            "nameLocation": "5306:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "_cid",
                  "nameLocation": "5334:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "5320:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5320:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5319:20:5"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "5385:15:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IpfsInfo_$119_memory_ptr",
                    "typeString": "struct Wingbird.IpfsInfo"
                  },
                  "typeName": {
                    "id": 401,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 400,
                      "name": "IpfsInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119,
                      "src": "5385:8:5"
                    },
                    "referencedDeclaration": 119,
                    "src": "5385:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsInfo_$119_storage_ptr",
                      "typeString": "struct Wingbird.IpfsInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5384:17:5"
            },
            "scope": 549,
            "src": "5297:147:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "5621:210:5",
              "statements": [
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "exist",
                      "nameLocation": "5636:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "5631:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5631:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 422,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5644:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5631:18:5"
                },
                {
                  "body": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "5703:100:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 434,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "5721:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 436,
                            "indexExpression": {
                              "id": 435,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "5728:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5721:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 437,
                            "name": "_userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "5734:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5721:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 444,
                        "nodeType": "IfStatement",
                        "src": "5717:76:5",
                        "trueBody": {
                          "id": 443,
                          "nodeType": "Block",
                          "src": "5748:45:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 439,
                                  "name": "exist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 420,
                                  "src": "5766:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 440,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5774:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5766:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 442,
                              "nodeType": "ExpressionStatement",
                              "src": "5766:12:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 427,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "5679:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 428,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "5683:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5683:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5679:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 446,
                  "initializationExpression": {
                    "assignments": [
                      424
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5672:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "5664:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5664:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 426,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5676:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5664:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5698:3:5",
                      "subExpression": {
                        "id": 431,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "5698:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 433,
                    "nodeType": "ExpressionStatement",
                    "src": "5698:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5659:144:5"
                },
                {
                  "expression": {
                    "id": 447,
                    "name": "exist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "5819:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 418,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "5812:12:5"
                }
              ]
            },
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAddress",
            "nameLocation": "5504:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "5525:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5517:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5517:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "5556:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5539:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 412,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5539:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 413,
                    "nodeType": "ArrayTypeName",
                    "src": "5539:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5516:47:5"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5611:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5611:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5610:6:5"
            },
            "scope": 549,
            "src": "5495:336:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "5976:132:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 456,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "5994:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6005:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "5994:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5986:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "5986:22:5"
                },
                {
                  "expression": {
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 461,
                        "name": "birdSeeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "6018:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 464,
                      "indexExpression": {
                        "expression": {
                          "id": 462,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6028:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6028:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6018:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 465,
                          "name": "birdSeeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "6042:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 468,
                        "indexExpression": {
                          "expression": {
                            "id": 466,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6052:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6052:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6042:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6066:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "6042:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6018:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:50:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 474,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "6093:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 473,
                      "name": "honorSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "6083:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6083:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "EmitStatement",
                  "src": "6078:23:5"
                }
              ]
            },
            "functionSelector": "f08abe9b",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveHonors",
            "nameLocation": "5941:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5960:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5952:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5952:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5951:17:5"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5976:0:5"
            },
            "scope": 549,
            "src": "5932:176:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "6221:2:5",
              "statements": []
            },
            "functionSelector": "bc1586d1",
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buildFences",
            "nameLocation": "6169:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "_ipfs_cid_mission",
                  "nameLocation": "6195:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "6181:31:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6181:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6180:33:5"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6221:0:5"
            },
            "scope": 549,
            "src": "6160:63:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "6487:258:5",
              "statements": [
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 499,
                          "name": "birdHonor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "6497:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                            "typeString": "mapping(address => struct Wingbird.BirdHonors storage ref)"
                          }
                        },
                        "id": 501,
                        "indexExpression": {
                          "id": 500,
                          "name": "_bird",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "6507:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6497:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                          "typeString": "struct Wingbird.BirdHonors storage ref"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "EaglePoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100,
                      "src": "6497:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 503,
                      "name": "_eagle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "6528:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6497:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "6497:37:5"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 506,
                          "name": "birdHonor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "6544:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                            "typeString": "mapping(address => struct Wingbird.BirdHonors storage ref)"
                          }
                        },
                        "id": 508,
                        "indexExpression": {
                          "id": 507,
                          "name": "_bird",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "6554:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6544:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                          "typeString": "struct Wingbird.BirdHonors storage ref"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "OwlPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "6544:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 510,
                      "name": "_owl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "6573:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6544:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "6544:33:5"
                },
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 513,
                          "name": "birdHonor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "6587:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                            "typeString": "mapping(address => struct Wingbird.BirdHonors storage ref)"
                          }
                        },
                        "id": 515,
                        "indexExpression": {
                          "id": 514,
                          "name": "_bird",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "6597:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6587:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                          "typeString": "struct Wingbird.BirdHonors storage ref"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "PenguinPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106,
                      "src": "6587:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 517,
                      "name": "_penguin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "6620:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6587:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "6587:41:5"
                },
                {
                  "expression": {
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 520,
                          "name": "birdHonor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "6638:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                            "typeString": "mapping(address => struct Wingbird.BirdHonors storage ref)"
                          }
                        },
                        "id": 522,
                        "indexExpression": {
                          "id": 521,
                          "name": "_bird",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "6648:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6638:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                          "typeString": "struct Wingbird.BirdHonors storage ref"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "HummingbirdPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104,
                      "src": "6638:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 524,
                      "name": "_hummingbird",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "6675:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6638:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 526,
                  "nodeType": "ExpressionStatement",
                  "src": "6638:49:5"
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 527,
                          "name": "birdHonor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "6697:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                            "typeString": "mapping(address => struct Wingbird.BirdHonors storage ref)"
                          }
                        },
                        "id": 529,
                        "indexExpression": {
                          "id": 528,
                          "name": "_bird",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "6707:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6697:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                          "typeString": "struct Wingbird.BirdHonors storage ref"
                        }
                      },
                      "id": 530,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "PeacockPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "6697:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 531,
                      "name": "_peacock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "6730:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6697:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "6697:41:5"
                }
              ]
            },
            "functionSelector": "3e521cc0",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFinalHonors",
            "nameLocation": "6308:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "_owl",
                  "nameLocation": "6340:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "6332:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6332:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_eagle",
                  "nameLocation": "6362:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "6354:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6354:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "_peacock",
                  "nameLocation": "6386:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "6378:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "_penguin",
                  "nameLocation": "6412:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "6404:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6404:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "_hummingbird",
                  "nameLocation": "6438:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "6430:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6430:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "_bird",
                  "nameLocation": "6468:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "6460:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6460:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6322:157:5"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6487:0:5"
            },
            "scope": 549,
            "src": "6299:446:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "6858:40:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 543,
                      "name": "birdHonor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "6875:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BirdHonors_$107_storage_$",
                        "typeString": "mapping(address => struct Wingbird.BirdHonors storage ref)"
                      }
                    },
                    "id": 545,
                    "indexExpression": {
                      "id": 544,
                      "name": "_bird",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "6885:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6875:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BirdHonors_$107_storage",
                      "typeString": "struct Wingbird.BirdHonors storage ref"
                    }
                  },
                  "functionReturnParameters": 542,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "6868:23:5"
                }
              ]
            },
            "functionSelector": "1b79da8c",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFinalHonors",
            "nameLocation": "6760:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "_bird",
                  "nameLocation": "6783:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "6775:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6775:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6774:15:5"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "6835:17:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BirdHonors_$107_memory_ptr",
                    "typeString": "struct Wingbird.BirdHonors"
                  },
                  "typeName": {
                    "id": 540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 539,
                      "name": "BirdHonors",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 107,
                      "src": "6835:10:5"
                    },
                    "referencedDeclaration": 107,
                    "src": "6835:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BirdHonors_$107_storage_ptr",
                      "typeString": "struct Wingbird.BirdHonors"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6834:19:5"
            },
            "scope": 549,
            "src": "6751:147:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 550,
        "src": "220:6680:5",
        "usedErrors": []
      }
    ],
    "src": "32:6869:5"
  },
  "bytecode": "60c06040523480156200001157600080fd5b5060405162001979380380620019798339810160408190526200003491620000cf565b8383620000413362000062565b6001600160a01b0391821660a0521660805260025560035550620001179050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ca57600080fd5b919050565b60008060008060808587031215620000e657600080fd5b620000f185620000b2565b93506200010160208601620000b2565b6040860151606090960151949790965092505050565b60805160a05161182e6200014b600039600081816109b90152610f4b015260008181610b1f0152610f1c015261182e6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063d97b404811610071578063d97b4048146102d1578063dbdff2c114610301578063f08abe9b14610309578063f2fde38b1461031c578063fd00cc591461032f57600080fd5b8063715018a6146102775780638da5cb5b1461027f57806394985ddd1461029a578063963b7349146102ad578063bc1586d1146102c057600080fd5b806347734892116100f457806347734892146102005780634dfa3f18146102295780635fd5d70b1461023c57806364f63b1e1461024f5780636f77926b1461025757600080fd5b80631b79da8c146101265780632eb0e1e6146101845780633e521cc0146101a457806342619f66146101e9575b600080fd5b6101396101343660046111a5565b61034f565b60405161017b9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b60405180910390f35b61019761019236600461127e565b6103d9565b60405161017b919061130f565b6101e76101b2366004611380565b6001600160a01b03166000908152600a6020526040902060018101949094559383556004830155600382019290925560020155565b005b6101f260045481565b60405190815260200161017b565b6101f261020e3660046111a5565b6001600160a01b031660009081526009602052604090205490565b6101e76102373660046113d1565b610511565b6101e761024a3660046114ca565b6106bb565b6006546101f2565b61026a6102653660046111a5565b6107cd565b60405161017b9190611540565b6101e7610948565b6000546040516001600160a01b03909116815260200161017b565b6101e76102a8366004611590565b6109ae565b6101e76102bb3660046115b2565b610a34565b6101e76102ce36600461127e565b50565b6102f46102df36600461160c565b60086020526000908152604090205460ff1681565b60405161017b9190611625565b6101e7610b07565b6101e761031736600461160c565b610c42565b6101e761032a3660046111a5565b610cae565b6101f261033d3660046111a5565b60096020526000908152604090205481565b6103816040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b03166000908152600a6020908152604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082015290565b6040805180820190915260608082526020820152600b826040516103fd919061164d565b908152602001604051809103902060405180604001604052908160008201805461042690611669565b80601f016020809104026020016040519081016040528092919081815260200182805461045290611669565b801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561050157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104e3575b5050505050815250509050919050565b336000908152600960205260409020541561056a5760405162461bcd60e51b81526020600482015260146024820152735573657220616c7265616479206578697374732160601b60448201526064015b60405180910390fd5b610572610b07565b60408051606081018252838152602080820184905260045482840152336000908152600782529290922081518051929384936105b1928492019061109b565b5060208281015180516105ca926001850192019061109b565b50604091820151600291820155815160a08101835260008082526020808301828152838601838152606085018481526080860185815233808752600a90955297852086518155925160018085019190915591519683019690965594516003820155945160049095019490945560068054938401815590527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0319168317905590610681906064610d76565b6040513381527fa22187ec83aa1b90e4efbaa4f24ce6b70a007f97923b5878c0fb8026c2febe79906020015b60405180910390a150505050565b6106c53382610e1f565b15156001146106e65760405162461bcd60e51b8152600401610561906116a4565b6001831515146107305760405162461bcd60e51b815260206004820152601560248201527410dbdb9cd95b9cdd5cc81b9bdd081c995858da1959605a1b6044820152606401610561565b6040805180820182528381526020810183905290518190600b9061075590869061164d565b9081526020016040518091039020600082015181600001908051906020019061077f92919061109b565b506020828101518051610798926001850192019061111f565b509050507f9c5c2780a8755dfa42a837fa1d2f3272cb07b4eff3717c9f0bbc1618f9f3061783856040516106ad9291906116e5565b6107f160405180606001604052806060815260200160608152602001600081525090565b6001600160a01b0382166000908152600760205260409081902081516060810190925280548290829061082390611669565b80601f016020809104026020016040519081016040528092919081815260200182805461084f90611669565b801561089c5780601f106108715761010080835404028352916020019161089c565b820191906000526020600020905b81548152906001019060200180831161087f57829003601f168201915b505050505081526020016001820180546108b590611669565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190611669565b801561092e5780601f106109035761010080835404028352916020019161092e565b820191906000526020600020905b81548152906001019060200180831161091157829003601f168201915b505050505081526020016002820154815250509050919050565b6000546001600160a01b031633146109a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6109ac6000610e7f565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a265760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610561565b610a308282610ecf565b5050565b610a3e3382610e1f565b1515600114610a5f5760405162461bcd60e51b8152600401610561906116a4565b6040805180820182528381526020810183905290518190600b90610a8490869061164d565b90815260200160405180910390206000820151816000019080519060200190610aae92919061109b565b506020828101518051610ac7926001850192019061111f565b509050507f54b13326dce0f4cdd781a4f93a66e725cbdb6247cd4e6c00064c18b39d07bb3583604051610afa9190611709565b60405180910390a1505050565b6003546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b92919061171c565b1015610bf45760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060448201526a1dda5d1a0819985d58d95d60aa1b6064820152608401610561565b6000610c04600254600354610f18565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610c3791815260200190565b60405180910390a150565b80600a14610c4f57600080fd5b33600090815260096020526040902054610c6b90600a9061174b565b3360009081526009602090815260409182902092909255518281527f89e69b6fa2d69c7eb45b6af3918dbaa99e08cc13755f03ead1be356d699558d29101610c37565b6000546001600160a01b03163314610d085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6001600160a01b038116610d6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610561565b6102ce81610e7f565b6064811015610dc75760405162461bcd60e51b815260206004820181905260248201527f546865204d696e696d756d20616d6f756e742073686f756c64206265203130306044820152606401610561565b6001600160a01b038216600081815260096020908152604091829020849055815192835282018390527f02d570fba1492852e40bfa341311a0467b1ebf0d0755e4e405f2f3bac9c8a23e910160405180910390a15050565b600080805b8351811015610e7757846001600160a01b0316848281518110610e4957610e49611762565b60200260200101516001600160a01b03161415610e6557600191505b80610e6f81611778565b915050610e24565b509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008111610f125760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb481b9bdd08199bdd5b9960821b6044820152606401610561565b60045550565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610f88929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610fb593929190611793565b6020604051808303816000875af1158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff891906117c3565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a09091019092528151918301919091209387905290829052611053916117e0565b6000858152600160205260409020556110938482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b8280546110a790611669565b90600052602060002090601f0160209004810192826110c9576000855561110f565b82601f106110e257805160ff191683800117855561110f565b8280016001018555821561110f579182015b8281111561110f5782518255916020019190600101906110f4565b5061111b929150611174565b5090565b82805482825590600052602060002090810192821561110f579160200282015b8281111561110f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061113f565b5b8082111561111b5760008155600101611175565b80356001600160a01b03811681146111a057600080fd5b919050565b6000602082840312156111b757600080fd5b6111c082611189565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611206576112066111c7565b604052919050565b600082601f83011261121f57600080fd5b813567ffffffffffffffff811115611239576112396111c7565b61124c601f8201601f19166020016111dd565b81815284602083860101111561126157600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561129057600080fd5b813567ffffffffffffffff8111156112a757600080fd5b6110938482850161120e565b60005b838110156112ce5781810151838201526020016112b6565b838111156112dd576000848401525b50505050565b600081518084526112fb8160208601602086016112b3565b601f01601f19169290920160200192915050565b60006020808352835160408285015261132b60608501826112e3565b85830151858203601f19016040870152805180835290840192506000918401905b808310156113755783516001600160a01b0316825292840192600192909201919084019061134c565b509695505050505050565b60008060008060008060c0878903121561139957600080fd5b86359550602087013594506040870135935060608701359250608087013591506113c560a08801611189565b90509295509295509295565b600080604083850312156113e457600080fd5b823567ffffffffffffffff808211156113fc57600080fd5b6114088683870161120e565b9350602085013591508082111561141e57600080fd5b5061142b8582860161120e565b9150509250929050565b80151581146102ce57600080fd5b600082601f83011261145457600080fd5b8135602067ffffffffffffffff821115611470576114706111c7565b8160051b61147f8282016111dd565b928352848101820192828101908785111561149957600080fd5b83870192505b848310156114bf576114b083611189565b8252918301919083019061149f565b979650505050505050565b6000806000606084860312156114df57600080fd5b83356114ea81611435565b9250602084013567ffffffffffffffff8082111561150757600080fd5b6115138783880161120e565b9350604086013591508082111561152957600080fd5b5061153686828701611443565b9150509250925092565b60208152600082516060602084015261155c60808401826112e3565b90506020840151601f1984830301604085015261157982826112e3565b915050604084015160608401528091505092915050565b600080604083850312156115a357600080fd5b50508035926020909101359150565b600080604083850312156115c557600080fd5b823567ffffffffffffffff808211156115dd57600080fd5b6115e98683870161120e565b935060208501359150808211156115ff57600080fd5b5061142b85828601611443565b60006020828403121561161e57600080fd5b5035919050565b602081016003831061164757634e487b7160e01b600052602160045260246000fd5b91905290565b6000825161165f8184602087016112b3565b9190910192915050565b600181811c9082168061167d57607f821691505b6020821081141561169e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f5573657220646f6573206e6f7420657869737473206f6e207468652067726f756040820152600760fc1b606082015260800190565b6040815260006116f860408301856112e3565b905082151560208301529392505050565b6020815260006111c060208301846112e3565b60006020828403121561172e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561175d5761175d611735565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561178c5761178c611735565b5060010190565b60018060a01b03841681528260208201526060604082015260006117ba60608301846112e3565b95945050505050565b6000602082840312156117d557600080fd5b81516111c081611435565b600082198211156117f3576117f3611735565b50019056fea264697066735822122039235f749807fb4d2859ccb044579b5bc5f2601e754f8d9228bf5a033e1b3a1e64736f6c634300080b0033",
  "bytecodeSha1": "2b346b267fcc83458cc331c2df9779f2cdfbd2d6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Wingbird",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "60": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "61": [
            9667,
            9695,
            true
          ]
        }
      },
      "3": {},
      "5": {
        "Wingbird.checkAddress": {
          "58": [
            5721,
            5746,
            false
          ]
        },
        "Wingbird.createNewUser": {
          "51": [
            2960,
            2991,
            true
          ]
        },
        "Wingbird.fulfillRandomness": {
          "59": [
            1072,
            1087,
            true
          ]
        },
        "Wingbird.getRandomNumber": {
          "55": [
            724,
            760,
            true
          ]
        },
        "Wingbird.giveHonors": {
          "56": [
            5994,
            6007,
            true
          ]
        },
        "Wingbird.giveInitialSeeds": {
          "57": [
            3679,
            3693,
            true
          ]
        },
        "Wingbird.reachConsensus": {
          "52": [
            4882,
            4922,
            true
          ],
          "53": [
            4999,
            5024,
            true
          ]
        },
        "Wingbird.syncSenses": {
          "54": [
            4423,
            4463,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "42": [
            2378,
            2395
          ],
          "43": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "7": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "23": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "34": [
            1998,
            2071
          ],
          "35": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "22": [
            712,
            729
          ]
        }
      },
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "24": [
            9659,
            9731
          ],
          "25": [
            9737,
            9777
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "46": [
            7833,
            7920
          ],
          "48": [
            8662,
            8701
          ],
          "49": [
            8707,
            8746
          ]
        }
      },
      "3": {
        "VRFRequestIDBase.makeRequestId": {
          "50": [
            1518,
            1577
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "47": [
            953,
            1031
          ]
        }
      },
      "5": {
        "Wingbird.checkAddress": {
          "39": [
            5766,
            5778
          ],
          "40": [
            5698,
            5701
          ],
          "41": [
            5812,
            5824
          ]
        },
        "Wingbird.createNewUser": {
          "10": [
            2952,
            3016
          ],
          "11": [
            3026,
            3043
          ],
          "12": [
            3120,
            3157
          ],
          "13": [
            3233,
            3267
          ],
          "14": [
            3277,
            3314
          ],
          "15": [
            3324,
            3357
          ],
          "16": [
            3390,
            3418
          ]
        },
        "Wingbird.fulfillRandomness": {
          "44": [
            1064,
            1108
          ],
          "45": [
            1118,
            1144
          ]
        },
        "Wingbird.getFinalHonors": {
          "8": [
            6868,
            6891
          ]
        },
        "Wingbird.getIpfsObject": {
          "9": [
            5416,
            5437
          ]
        },
        "Wingbird.getRandomNumber": {
          "29": [
            703,
            829
          ],
          "30": [
            900,
            935
          ]
        },
        "Wingbird.getTotalBirds": {
          "6": [
            4121,
            4155
          ]
        },
        "Wingbird.getUser": {
          "21": [
            3896,
            3928
          ]
        },
        "Wingbird.getUserBalance": {
          "5": [
            4020,
            4043
          ]
        },
        "Wingbird.giveHonors": {
          "31": [
            5986,
            6008
          ],
          "32": [
            6018,
            6068
          ],
          "33": [
            6078,
            6101
          ]
        },
        "Wingbird.giveInitialSeeds": {
          "36": [
            3671,
            3730
          ],
          "37": [
            3740,
            3766
          ],
          "38": [
            3776,
            3807
          ]
        },
        "Wingbird.reachConsensus": {
          "17": [
            4861,
            4981
          ],
          "18": [
            4991,
            5050
          ],
          "19": [
            5131,
            5168
          ],
          "20": [
            5178,
            5284
          ]
        },
        "Wingbird.setFinalHonors": {
          "0": [
            6497,
            6534
          ],
          "1": [
            6544,
            6577
          ],
          "2": [
            6587,
            6628
          ],
          "3": [
            6638,
            6687
          ],
          "4": [
            6697,
            6738
          ]
        },
        "Wingbird.syncSenses": {
          "26": [
            4402,
            4522
          ],
          "27": [
            4603,
            4640
          ],
          "28": [
            4650,
            4694
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.3.1/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.3.1/VRFRequestIDBase"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063d97b404811610071578063d97b4048146102d1578063dbdff2c114610301578063f08abe9b14610309578063f2fde38b1461031c578063fd00cc591461032f57600080fd5b8063715018a6146102775780638da5cb5b1461027f57806394985ddd1461029a578063963b7349146102ad578063bc1586d1146102c057600080fd5b806347734892116100f457806347734892146102005780634dfa3f18146102295780635fd5d70b1461023c57806364f63b1e1461024f5780636f77926b1461025757600080fd5b80631b79da8c146101265780632eb0e1e6146101845780633e521cc0146101a457806342619f66146101e9575b600080fd5b6101396101343660046111a5565b61034f565b60405161017b9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b60405180910390f35b61019761019236600461127e565b6103d9565b60405161017b919061130f565b6101e76101b2366004611380565b6001600160a01b03166000908152600a6020526040902060018101949094559383556004830155600382019290925560020155565b005b6101f260045481565b60405190815260200161017b565b6101f261020e3660046111a5565b6001600160a01b031660009081526009602052604090205490565b6101e76102373660046113d1565b610511565b6101e761024a3660046114ca565b6106bb565b6006546101f2565b61026a6102653660046111a5565b6107cd565b60405161017b9190611540565b6101e7610948565b6000546040516001600160a01b03909116815260200161017b565b6101e76102a8366004611590565b6109ae565b6101e76102bb3660046115b2565b610a34565b6101e76102ce36600461127e565b50565b6102f46102df36600461160c565b60086020526000908152604090205460ff1681565b60405161017b9190611625565b6101e7610b07565b6101e761031736600461160c565b610c42565b6101e761032a3660046111a5565b610cae565b6101f261033d3660046111a5565b60096020526000908152604090205481565b6103816040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b03166000908152600a6020908152604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082015290565b6040805180820190915260608082526020820152600b826040516103fd919061164d565b908152602001604051809103902060405180604001604052908160008201805461042690611669565b80601f016020809104026020016040519081016040528092919081815260200182805461045290611669565b801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561050157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104e3575b5050505050815250509050919050565b336000908152600960205260409020541561056a5760405162461bcd60e51b81526020600482015260146024820152735573657220616c7265616479206578697374732160601b60448201526064015b60405180910390fd5b610572610b07565b60408051606081018252838152602080820184905260045482840152336000908152600782529290922081518051929384936105b1928492019061109b565b5060208281015180516105ca926001850192019061109b565b50604091820151600291820155815160a08101835260008082526020808301828152838601838152606085018481526080860185815233808752600a90955297852086518155925160018085019190915591519683019690965594516003820155945160049095019490945560068054938401815590527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0319168317905590610681906064610d76565b6040513381527fa22187ec83aa1b90e4efbaa4f24ce6b70a007f97923b5878c0fb8026c2febe79906020015b60405180910390a150505050565b6106c53382610e1f565b15156001146106e65760405162461bcd60e51b8152600401610561906116a4565b6001831515146107305760405162461bcd60e51b815260206004820152601560248201527410dbdb9cd95b9cdd5cc81b9bdd081c995858da1959605a1b6044820152606401610561565b6040805180820182528381526020810183905290518190600b9061075590869061164d565b9081526020016040518091039020600082015181600001908051906020019061077f92919061109b565b506020828101518051610798926001850192019061111f565b509050507f9c5c2780a8755dfa42a837fa1d2f3272cb07b4eff3717c9f0bbc1618f9f3061783856040516106ad9291906116e5565b6107f160405180606001604052806060815260200160608152602001600081525090565b6001600160a01b0382166000908152600760205260409081902081516060810190925280548290829061082390611669565b80601f016020809104026020016040519081016040528092919081815260200182805461084f90611669565b801561089c5780601f106108715761010080835404028352916020019161089c565b820191906000526020600020905b81548152906001019060200180831161087f57829003601f168201915b505050505081526020016001820180546108b590611669565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190611669565b801561092e5780601f106109035761010080835404028352916020019161092e565b820191906000526020600020905b81548152906001019060200180831161091157829003601f168201915b505050505081526020016002820154815250509050919050565b6000546001600160a01b031633146109a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6109ac6000610e7f565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a265760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610561565b610a308282610ecf565b5050565b610a3e3382610e1f565b1515600114610a5f5760405162461bcd60e51b8152600401610561906116a4565b6040805180820182528381526020810183905290518190600b90610a8490869061164d565b90815260200160405180910390206000820151816000019080519060200190610aae92919061109b565b506020828101518051610ac7926001850192019061111f565b509050507f54b13326dce0f4cdd781a4f93a66e725cbdb6247cd4e6c00064c18b39d07bb3583604051610afa9190611709565b60405180910390a1505050565b6003546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b92919061171c565b1015610bf45760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060448201526a1dda5d1a0819985d58d95d60aa1b6064820152608401610561565b6000610c04600254600354610f18565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610c3791815260200190565b60405180910390a150565b80600a14610c4f57600080fd5b33600090815260096020526040902054610c6b90600a9061174b565b3360009081526009602090815260409182902092909255518281527f89e69b6fa2d69c7eb45b6af3918dbaa99e08cc13755f03ead1be356d699558d29101610c37565b6000546001600160a01b03163314610d085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6001600160a01b038116610d6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610561565b6102ce81610e7f565b6064811015610dc75760405162461bcd60e51b815260206004820181905260248201527f546865204d696e696d756d20616d6f756e742073686f756c64206265203130306044820152606401610561565b6001600160a01b038216600081815260096020908152604091829020849055815192835282018390527f02d570fba1492852e40bfa341311a0467b1ebf0d0755e4e405f2f3bac9c8a23e910160405180910390a15050565b600080805b8351811015610e7757846001600160a01b0316848281518110610e4957610e49611762565b60200260200101516001600160a01b03161415610e6557600191505b80610e6f81611778565b915050610e24565b509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008111610f125760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb481b9bdd08199bdd5b9960821b6044820152606401610561565b60045550565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610f88929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610fb593929190611793565b6020604051808303816000875af1158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff891906117c3565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a09091019092528151918301919091209387905290829052611053916117e0565b6000858152600160205260409020556110938482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b8280546110a790611669565b90600052602060002090601f0160209004810192826110c9576000855561110f565b82601f106110e257805160ff191683800117855561110f565b8280016001018555821561110f579182015b8281111561110f5782518255916020019190600101906110f4565b5061111b929150611174565b5090565b82805482825590600052602060002090810192821561110f579160200282015b8281111561110f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061113f565b5b8082111561111b5760008155600101611175565b80356001600160a01b03811681146111a057600080fd5b919050565b6000602082840312156111b757600080fd5b6111c082611189565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611206576112066111c7565b604052919050565b600082601f83011261121f57600080fd5b813567ffffffffffffffff811115611239576112396111c7565b61124c601f8201601f19166020016111dd565b81815284602083860101111561126157600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561129057600080fd5b813567ffffffffffffffff8111156112a757600080fd5b6110938482850161120e565b60005b838110156112ce5781810151838201526020016112b6565b838111156112dd576000848401525b50505050565b600081518084526112fb8160208601602086016112b3565b601f01601f19169290920160200192915050565b60006020808352835160408285015261132b60608501826112e3565b85830151858203601f19016040870152805180835290840192506000918401905b808310156113755783516001600160a01b0316825292840192600192909201919084019061134c565b509695505050505050565b60008060008060008060c0878903121561139957600080fd5b86359550602087013594506040870135935060608701359250608087013591506113c560a08801611189565b90509295509295509295565b600080604083850312156113e457600080fd5b823567ffffffffffffffff808211156113fc57600080fd5b6114088683870161120e565b9350602085013591508082111561141e57600080fd5b5061142b8582860161120e565b9150509250929050565b80151581146102ce57600080fd5b600082601f83011261145457600080fd5b8135602067ffffffffffffffff821115611470576114706111c7565b8160051b61147f8282016111dd565b928352848101820192828101908785111561149957600080fd5b83870192505b848310156114bf576114b083611189565b8252918301919083019061149f565b979650505050505050565b6000806000606084860312156114df57600080fd5b83356114ea81611435565b9250602084013567ffffffffffffffff8082111561150757600080fd5b6115138783880161120e565b9350604086013591508082111561152957600080fd5b5061153686828701611443565b9150509250925092565b60208152600082516060602084015261155c60808401826112e3565b90506020840151601f1984830301604085015261157982826112e3565b915050604084015160608401528091505092915050565b600080604083850312156115a357600080fd5b50508035926020909101359150565b600080604083850312156115c557600080fd5b823567ffffffffffffffff808211156115dd57600080fd5b6115e98683870161120e565b935060208501359150808211156115ff57600080fd5b5061142b85828601611443565b60006020828403121561161e57600080fd5b5035919050565b602081016003831061164757634e487b7160e01b600052602160045260246000fd5b91905290565b6000825161165f8184602087016112b3565b9190910192915050565b600181811c9082168061167d57607f821691505b6020821081141561169e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f5573657220646f6573206e6f7420657869737473206f6e207468652067726f756040820152600760fc1b606082015260800190565b6040815260006116f860408301856112e3565b905082151560208301529392505050565b6020815260006111c060208301846112e3565b60006020828403121561172e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561175d5761175d611735565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561178c5761178c611735565b5060010190565b60018060a01b03841681528260208201526060604082015260006117ba60608301846112e3565b95945050505050565b6000602082840312156117d557600080fd5b81516111c081611435565b600082198211156117f3576117f3611735565b50019056fea264697066735822122039235f749807fb4d2859ccb044579b5bc5f2601e754f8d9228bf5a033e1b3a1e64736f6c634300080b0033",
  "deployedSourceMap": "220:6680:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6751:147;;;;;;:::i;:::-;;:::i;:::-;;;;;;529:4:7;571:3;560:9;556:19;548:27;;608:6;602:13;591:9;584:32;672:4;664:6;660:17;654:24;647:4;636:9;632:20;625:54;735:4;727:6;723:17;717:24;710:4;699:9;695:20;688:54;798:4;790:6;786:17;780:24;773:4;762:9;758:20;751:54;861:4;853:6;849:17;843:24;836:4;825:9;821:20;814:54;383:491;;;;;6751:147:5;;;;;;;;5297;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6299:446::-;;;;;;:::i;:::-;-1:-1:-1;;;;;6497:16:5;;;;;:9;:16;;;;;:28;;;:37;;;;6544:33;;;6587:30;;;:41;6638:34;;;:49;;;;6697:30;;:41;6299:446;;;370:27;;;;;;;;;4280:25:7;;;4268:2;4253:18;370:27:5;4134:177:7;3941:109:5;;;;;;:::i;:::-;-1:-1:-1;;;;;4027:16:5;4001:7;4027:16;;;:9;:16;;;;;;;3941:109;2795:630;;;;;;:::i;:::-;;:::i;4707:584::-;;;;;;:::i;:::-;;:::i;4056:106::-;4128:20;:27;4056:106;;3820:115;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1668:101:0:-;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;7174:51:7;;7162:2;7147:18;1036:85:0;7028:203:7;9575:207:2;;;;;;:::i;:::-;;:::i;4284:417:5:-;;;;;;:::i;:::-;;:::i;6160:63::-;;;;;;:::i;:::-;;;1944:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;659:283::-;;;:::i;5932:176::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;1999:44:5:-;;;;;;:::i;:::-;;;;;;;;;;;;;;6751:147;6835:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6835:17:5;-1:-1:-1;;;;;;6875:16:5;;;;;:9;:16;;;;;;;;;6868:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6751:147::o;5297:::-;-1:-1:-1;;;;;;;;;;;;;;;;;5423:8:5;5432:4;5423:14;;;;;;:::i;:::-;;;;;;;;;;;;;5416:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5416:21:5;;;;;;;;;;;;;;;;;;;;;;;;;;;5297:147;;;:::o;2795:630::-;2975:10;4001:7;4027:16;;;:9;:16;;;;;;2960:31;2952:64;;;;-1:-1:-1;;;2952:64:5;;9461:2:7;2952:64:5;;;9443:21:7;9500:2;9480:18;;;9473:30;-1:-1:-1;;;9519:18:7;;;9512:50;9579:18;;2952:64:5;;;;;;;;;3026:17;:15;:17::i;:::-;3072:38;;;;;;;;;;;;;;;;;;3097:12;;3072:38;;;;3139:10;3053:16;3120:30;;;:18;:30;;;;;;:37;;;;3072:38;;;;3120:37;;:30;;:37;;;:::i;:::-;-1:-1:-1;3120:37:5;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3120:37:5;;;;;;;;;;3198:25;;;;;;;3167:28;3198:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;3243:10;3233:21;;;:9;:21;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3277:20;:37;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3277:37:5;;;;;3198:25;3324:33;;3353:3;3324:16;:33::i;:::-;3395:23;;3407:10;7174:51:7;;3395:23:5;;7162:2:7;7147:18;3395:23:5;;;;;;;;2885:540;;2795:630;;:::o;4707:584::-;4882:32;4895:10;4907:6;4882:12;:32::i;:::-;:40;;4918:4;4882:40;4861:120;;;;-1:-1:-1;;;4861:120:5;;;;;;;:::i;:::-;5020:4;4999:25;;;;4991:59;;;;-1:-1:-1;;;4991:59:5;;10212:2:7;4991:59:5;;;10194:21:7;10251:2;10231:18;;;10224:30;-1:-1:-1;;;10270:18:7;;;10263:51;10331:18;;4991:59:5;10010:345:7;4991:59:5;5085:36;;;;;;;;;;;;;;;;;5131:28;;5085:36;;5131:8;;:28;;5094:18;;5131:28;:::i;:::-;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5131:37:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;5183:101;5225:18;5257:17;5183:101;;;;;;;:::i;3820:115::-;3873:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3873:11:5;-1:-1:-1;;;;;3903:25:5;;;;;;:18;:25;;;;;;;3896:32;;;;;;;;;;;;3903:25;;3896:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:115;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;10868:2:7;1240:68:0;;;10850:21:7;;;10887:18;;;10880:30;10946:34;10926:18;;;10919:62;10998:18;;1240:68:0;10666:356:7;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;9575:207:2:-;9667:10;-1:-1:-1;;;;;9681:14:2;9667:28;;9659:72;;;;-1:-1:-1;;;9659:72:2;;11229:2:7;9659:72:2;;;11211:21:7;11268:2;11248:18;;;11241:30;11307:33;11287:18;;;11280:61;11358:18;;9659:72:2;11027:355:7;9659:72:2;9737:40;9755:9;9766:10;9737:17;:40::i;:::-;9575:207;;:::o;4284:417:5:-;4423:32;4436:10;4448:6;4423:12;:32::i;:::-;:40;;4459:4;4423:40;4402:120;;;;-1:-1:-1;;;4402:120:5;;;;;;;:::i;:::-;4557:36;;;;;;;;;;;;;;;;;4603:28;;4557:36;;4603:8;;:28;;4566:18;;4603:28;:::i;:::-;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4603:37:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;4655:39;4675:18;4655:39;;;;;;:::i;:::-;;;;;;;;4392:309;4284:417;;:::o;659:283::-;757:3;;724:29;;-1:-1:-1;;;724:29:5;;747:4;724:29;;;7174:51:7;724:4:5;-1:-1:-1;;;;;724:14:5;;;;7147:18:7;;724:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;703:126;;;;-1:-1:-1;;;703:126:5;;12003:2:7;703:126:5;;;11985:21:7;12042:2;12022:18;;;12015:30;12081:34;12061:18;;;12054:62;-1:-1:-1;;;12132:18:7;;;12125:41;12183:19;;703:126:5;11801:407:7;703:126:5;839:17;859:31;877:7;;886:3;;859:17;:31::i;:::-;839:51;;905:30;925:9;905:30;;;;4280:25:7;;4268:2;4253:18;;4134:177;905:30:5;;;;;;;;693:249;659:283::o;5932:176::-;5994:7;6005:2;5994:13;5986:22;;;;;;6052:10;6042:21;;;;:9;:21;;;;;;:26;;6066:2;;6042:26;:::i;:::-;6028:10;6018:21;;;;:9;:21;;;;;;;;;:50;;;;6083:18;4280:25:7;;;6083:18:5;;4253::7;6083::5;4134:177:7;1918:198:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;10868:2:7;1240:68:0;;;10850:21:7;;;10887:18;;;10880:30;10946:34;10926:18;;;10919:62;10998:18;;1240:68:0;10666:356:7;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;12859:2:7;1998:73:0::1;::::0;::::1;12841:21:7::0;12898:2;12878:18;;;12871:30;12937:34;12917:18;;;12910:62;-1:-1:-1;;;12988:18:7;;;12981:36;13034:19;;1998:73:0::1;12657:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;3594:220:5:-:0;3690:3;3679:7;:14;;3671:59;;;;-1:-1:-1;;;3671:59:5;;13266:2:7;3671:59:5;;;13248:21:7;;;13285:18;;;13278:30;13344:34;13324:18;;;13317:62;13396:18;;3671:59:5;13064:356:7;3671:59:5;-1:-1:-1;;;;;3740:16:5;;;;;;:9;:16;;;;;;;;;:26;;;3781;;13599:51:7;;;13666:18;;13659:34;;;3781:26:5;;13572:18:7;3781:26:5;;;;;;;3594:220;;:::o;5495:336::-;5611:4;;;5659:144;5683:6;:13;5679:1;:17;5659:144;;;5734:12;-1:-1:-1;;;;;5721:25:5;:6;5728:1;5721:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5721:25:5;;5717:76;;;5774:4;5766:12;;5717:76;5698:3;;;;:::i;:::-;;;;5659:144;;;-1:-1:-1;5819:5:5;5495:336;-1:-1:-1;;;5495:336:5:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;948:203:5:-;1086:1;1072:11;:15;1064:44;;;;-1:-1:-1;;;1064:44:5;;14178:2:7;1064:44:5;;;14160:21:7;14217:2;14197:18;;;14190:30;-1:-1:-1;;;14236:18:7;;;14229:46;14292:18;;1064:44:5;13976:340:7;1064:44:5;1118:12;:26;-1:-1:-1;948:203:5:o;7731:1020:2:-;7808:17;7833:4;-1:-1:-1;;;;;7833:20:2;;7854:14;7870:4;7887:8;6588:1;7876:43;;;;;;;;14495:25:7;;;14551:2;14536:18;;14529:34;14483:2;14468:18;;14321:248;7876:43:2;;;;;;;;;;;;;7833:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8151:15:2;8234:16;;;:6;:16;;;;;;;;;978:51:3;;;;;15579:25:7;;;15620:18;;;15613:34;;;8227:4:2;15663:18:7;;;15656:60;15732:18;;;;15725:34;;;978:51:3;;;;;;;;;;15551:19:7;;;;978:51:3;;;968:62;;;;;;;;;8681:16:2;;;;;;;;:20;;;:::i;:::-;8662:16;;;;:6;:16;;;;;:39;8714:32;8669:8;8738:7;1535:41:3;;;;;;;15927:19:7;;;;15962:12;;;15955:28;;;;1535:41:3;;;;;;;;;15999:12:7;;;;1535:41:3;;1525:52;;;;;;1416:166;8714:32:2;8707:39;7731:1020;-1:-1:-1;;;;7731:1020:2:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:7;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:7:o;879:127::-;940:10;935:3;931:20;928:1;921:31;971:4;968:1;961:15;995:4;992:1;985:15;1011:275;1082:2;1076:9;1147:2;1128:13;;-1:-1:-1;;1124:27:7;1112:40;;1182:18;1167:34;;1203:22;;;1164:62;1161:88;;;1229:18;;:::i;:::-;1265:2;1258:22;1011:275;;-1:-1:-1;1011:275:7:o;1291:531::-;1334:5;1387:3;1380:4;1372:6;1368:17;1364:27;1354:55;;1405:1;1402;1395:12;1354:55;1441:6;1428:20;1467:18;1463:2;1460:26;1457:52;;;1489:18;;:::i;:::-;1533:55;1576:2;1557:13;;-1:-1:-1;;1553:27:7;1582:4;1549:38;1533:55;:::i;:::-;1613:2;1604:7;1597:19;1659:3;1652:4;1647:2;1639:6;1635:15;1631:26;1628:35;1625:55;;;1676:1;1673;1666:12;1625:55;1741:2;1734:4;1726:6;1722:17;1715:4;1706:7;1702:18;1689:55;1789:1;1764:16;;;1782:4;1760:27;1753:38;;;;1768:7;1291:531;-1:-1:-1;;;1291:531:7:o;1827:322::-;1896:6;1949:2;1937:9;1928:7;1924:23;1920:32;1917:52;;;1965:1;1962;1955:12;1917:52;2005:9;1992:23;2038:18;2030:6;2027:30;2024:50;;;2070:1;2067;2060:12;2024:50;2093;2135:7;2126:6;2115:9;2111:22;2093:50;:::i;2154:258::-;2226:1;2236:113;2250:6;2247:1;2244:13;2236:113;;;2326:11;;;2320:18;2307:11;;;2300:39;2272:2;2265:10;2236:113;;;2367:6;2364:1;2361:13;2358:48;;;2402:1;2393:6;2388:3;2384:16;2377:27;2358:48;;2154:258;;;:::o;2417:::-;2459:3;2497:5;2491:12;2524:6;2519:3;2512:19;2540:63;2596:6;2589:4;2584:3;2580:14;2573:4;2566:5;2562:16;2540:63;:::i;:::-;2657:2;2636:15;-1:-1:-1;;2632:29:7;2623:39;;;;2664:4;2619:50;;2417:258;-1:-1:-1;;2417:258:7:o;2680:915::-;2822:4;2851:2;2880;2869:9;2862:21;2918:6;2912:13;2961:4;2956:2;2945:9;2941:18;2934:32;2989:51;3036:2;3025:9;3021:18;3007:12;2989:51;:::i;:::-;3077:15;;;3071:22;3135;;;-1:-1:-1;;3131:36:7;3124:4;3109:20;;3102:66;3217:21;;3247:22;;;3323:23;;;;-1:-1:-1;3364:1:7;;3285:15;;;3374:195;3388:6;3385:1;3382:13;3374:195;;;3453:13;;-1:-1:-1;;;;;3449:39:7;3437:52;;3544:15;;;;3485:1;3403:9;;;;;3509:12;;;;3374:195;;;-1:-1:-1;3586:3:7;2680:915;-1:-1:-1;;;;;;2680:915:7:o;3600:529::-;3704:6;3712;3720;3728;3736;3744;3797:3;3785:9;3776:7;3772:23;3768:33;3765:53;;;3814:1;3811;3804:12;3765:53;3850:9;3837:23;3827:33;;3907:2;3896:9;3892:18;3879:32;3869:42;;3958:2;3947:9;3943:18;3930:32;3920:42;;4009:2;3998:9;3994:18;3981:32;3971:42;;4060:3;4049:9;4045:19;4032:33;4022:43;;4084:39;4118:3;4107:9;4103:19;4084:39;:::i;:::-;4074:49;;3600:529;;;;;;;;:::o;4316:543::-;4404:6;4412;4465:2;4453:9;4444:7;4440:23;4436:32;4433:52;;;4481:1;4478;4471:12;4433:52;4521:9;4508:23;4550:18;4591:2;4583:6;4580:14;4577:34;;;4607:1;4604;4597:12;4577:34;4630:50;4672:7;4663:6;4652:9;4648:22;4630:50;:::i;:::-;4620:60;;4733:2;4722:9;4718:18;4705:32;4689:48;;4762:2;4752:8;4749:16;4746:36;;;4778:1;4775;4768:12;4746:36;;4801:52;4845:7;4834:8;4823:9;4819:24;4801:52;:::i;:::-;4791:62;;;4316:543;;;;;:::o;4864:118::-;4950:5;4943:13;4936:21;4929:5;4926:32;4916:60;;4972:1;4969;4962:12;4987:718;5041:5;5094:3;5087:4;5079:6;5075:17;5071:27;5061:55;;5112:1;5109;5102:12;5061:55;5148:6;5135:20;5174:4;5197:18;5193:2;5190:26;5187:52;;;5219:18;;:::i;:::-;5265:2;5262:1;5258:10;5288:28;5312:2;5308;5304:11;5288:28;:::i;:::-;5350:15;;;5420;;;5416:24;;;5381:12;;;;5452:15;;;5449:35;;;5480:1;5477;5470:12;5449:35;5516:2;5508:6;5504:15;5493:26;;5528:148;5544:6;5539:3;5536:15;5528:148;;;5610:23;5629:3;5610:23;:::i;:::-;5598:36;;5561:12;;;;5654;;;;5528:148;;;5694:5;4987:718;-1:-1:-1;;;;;;;4987:718:7:o;5710:698::-;5819:6;5827;5835;5888:2;5876:9;5867:7;5863:23;5859:32;5856:52;;;5904:1;5901;5894:12;5856:52;5943:9;5930:23;5962:28;5984:5;5962:28;:::i;:::-;6009:5;-1:-1:-1;6065:2:7;6050:18;;6037:32;6088:18;6118:14;;;6115:34;;;6145:1;6142;6135:12;6115:34;6168:50;6210:7;6201:6;6190:9;6186:22;6168:50;:::i;:::-;6158:60;;6271:2;6260:9;6256:18;6243:32;6227:48;;6300:2;6290:8;6287:16;6284:36;;;6316:1;6313;6306:12;6284:36;;6339:63;6394:7;6383:8;6372:9;6368:24;6339:63;:::i;:::-;6329:73;;;5710:698;;;;;:::o;6413:610::-;6582:2;6571:9;6564:21;6545:4;6620:6;6614:13;6663:4;6658:2;6647:9;6643:18;6636:32;6691:52;6738:3;6727:9;6723:19;6709:12;6691:52;:::i;:::-;6677:66;;6792:2;6784:6;6780:15;6774:22;6864:2;6860:7;6848:9;6840:6;6836:22;6832:36;6827:2;6816:9;6812:18;6805:64;6892:41;6926:6;6910:14;6892:41;:::i;:::-;6878:55;;;6989:2;6981:6;6977:15;6971:22;6964:4;6953:9;6949:20;6942:52;7011:6;7003:14;;;6413:610;;;;:::o;7236:248::-;7304:6;7312;7365:2;7353:9;7344:7;7340:23;7336:32;7333:52;;;7381:1;7378;7371:12;7333:52;-1:-1:-1;;7404:23:7;;;7474:2;7459:18;;;7446:32;;-1:-1:-1;7236:248:7:o;7489:569::-;7592:6;7600;7653:2;7641:9;7632:7;7628:23;7624:32;7621:52;;;7669:1;7666;7659:12;7621:52;7709:9;7696:23;7738:18;7779:2;7771:6;7768:14;7765:34;;;7795:1;7792;7785:12;7765:34;7818:50;7860:7;7851:6;7840:9;7836:22;7818:50;:::i;:::-;7808:60;;7921:2;7910:9;7906:18;7893:32;7877:48;;7950:2;7940:8;7937:16;7934:36;;;7966:1;7963;7956:12;7934:36;;7989:63;8044:7;8033:8;8022:9;8018:24;7989:63;:::i;8063:180::-;8122:6;8175:2;8163:9;8154:7;8150:23;8146:32;8143:52;;;8191:1;8188;8181:12;8143:52;-1:-1:-1;8214:23:7;;8063:180;-1:-1:-1;8063:180:7:o;8248:340::-;8392:2;8377:18;;8425:1;8414:13;;8404:144;;8470:10;8465:3;8461:20;8458:1;8451:31;8505:4;8502:1;8495:15;8533:4;8530:1;8523:15;8404:144;8557:25;;;8248:340;:::o;8593:276::-;8724:3;8762:6;8756:13;8778:53;8824:6;8819:3;8812:4;8804:6;8800:17;8778:53;:::i;:::-;8847:16;;;;;8593:276;-1:-1:-1;;8593:276:7:o;8874:380::-;8953:1;8949:12;;;;8996;;;9017:61;;9071:4;9063:6;9059:17;9049:27;;9017:61;9124:2;9116:6;9113:14;9093:18;9090:38;9087:161;;;9170:10;9165:3;9161:20;9158:1;9151:31;9205:4;9202:1;9195:15;9233:4;9230:1;9223:15;9087:161;;8874:380;;;:::o;9608:397::-;9810:2;9792:21;;;9849:2;9829:18;;;9822:30;9888:34;9883:2;9868:18;;9861:62;-1:-1:-1;;;9954:2:7;9939:18;;9932:31;9995:3;9980:19;;9608:397::o;10360:301::-;10531:2;10520:9;10513:21;10494:4;10551:45;10592:2;10581:9;10577:18;10569:6;10551:45;:::i;:::-;10543:53;;10646:6;10639:14;10632:22;10627:2;10616:9;10612:18;10605:50;10360:301;;;;;:::o;11387:220::-;11536:2;11525:9;11518:21;11499:4;11556:45;11597:2;11586:9;11582:18;11574:6;11556:45;:::i;11612:184::-;11682:6;11735:2;11723:9;11714:7;11710:23;11706:32;11703:52;;;11751:1;11748;11741:12;11703:52;-1:-1:-1;11774:16:7;;11612:184;-1:-1:-1;11612:184:7:o;12395:127::-;12456:10;12451:3;12447:20;12444:1;12437:31;12487:4;12484:1;12477:15;12511:4;12508:1;12501:15;12527:125;12567:4;12595:1;12592;12589:8;12586:34;;;12600:18;;:::i;:::-;-1:-1:-1;12637:9:7;;12527:125::o;13704:127::-;13765:10;13760:3;13756:20;13753:1;13746:31;13796:4;13793:1;13786:15;13820:4;13817:1;13810:15;13836:135;13875:3;-1:-1:-1;;13896:17:7;;13893:43;;;13916:18;;:::i;:::-;-1:-1:-1;13963:1:7;13952:13;;13836:135::o;14574:386::-;14806:1;14802;14797:3;14793:11;14789:19;14781:6;14777:32;14766:9;14759:51;14846:6;14841:2;14830:9;14826:18;14819:34;14889:2;14884;14873:9;14869:18;14862:30;14740:4;14909:45;14950:2;14939:9;14935:18;14927:6;14909:45;:::i;:::-;14901:53;14574:386;-1:-1:-1;;;;;14574:386:7:o;14965:245::-;15032:6;15085:2;15073:9;15064:7;15060:23;15056:32;15053:52;;;15101:1;15098;15091:12;15053:52;15133:9;15127:16;15152:28;15174:5;15152:28;:::i;15215:128::-;15255:3;15286:1;15282:6;15279:1;15276:13;15273:39;;;15292:18;;:::i;:::-;-1:-1:-1;15328:9:7;;15215:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    220,
    6900
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD97B4048 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD97B4048 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xF08ABE9B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xFD00CC59 EQ PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x963B7349 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xBC1586D1 EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47734892 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x47734892 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x4DFA3F18 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x5FD5D70B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x64F63B1E EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1B79DA8C EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x2EB0E1E6 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x3E521CC0 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x42619F66 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x127E JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 DUP4 SSTORE PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x2 ADD SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x127E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x160C JUMP JUMPDEST PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x381 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xB DUP3 PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x426 SWAP1 PUSH2 0x1669 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x452 SWAP1 PUSH2 0x1669 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x474 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x482 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E3 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5573657220616C72656164792065786973747321 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x572 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x4 SLOAD DUP3 DUP5 ADD MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x5B1 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x5CA SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x2 SWAP2 DUP3 ADD SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP7 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP7 ADD DUP6 DUP2 MSTORE CALLER DUP1 DUP8 MSTORE PUSH1 0xA SWAP1 SWAP6 MSTORE SWAP8 DUP6 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP5 MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP5 MLOAD PUSH1 0x4 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE SWAP1 PUSH2 0x681 SWAP1 PUSH1 0x64 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0xA22187EC83AA1B90E4EFBAA4F24CE6B70A007F97923B5878C0FB8026C2FEBE79 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x6C5 CALLER DUP3 PUSH2 0xE1F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x1 DUP4 ISZERO ISZERO EQ PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DBDB9CD95B9CDD5CC81B9BDD081C995858DA1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD DUP2 SWAP1 PUSH1 0xB SWAP1 PUSH2 0x755 SWAP1 DUP7 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x77F SWAP3 SWAP2 SWAP1 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x798 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x111F JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9C5C2780A8755DFA42A837FA1D2F3272CB07B4EFF3717C9F0BBC1618F9F30617 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x6AD SWAP3 SWAP2 SWAP1 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x7F1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x823 SWAP1 PUSH2 0x1669 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x84F SWAP1 PUSH2 0x1669 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x89C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x871 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x89C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x8B5 SWAP1 PUSH2 0x1669 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E1 SWAP1 PUSH2 0x1669 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x903 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x911 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x9AC PUSH1 0x0 PUSH2 0xE7F JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH2 0xA30 DUP3 DUP3 PUSH2 0xECF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA3E CALLER DUP3 PUSH2 0xE1F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD DUP2 SWAP1 PUSH1 0xB SWAP1 PUSH2 0xA84 SWAP1 DUP7 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xAAE SWAP3 SWAP2 SWAP1 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0xAC7 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x111F JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x54B13326DCE0F4CDD781A4F93A66E725CBDB6247CD4E6C00064C18B39D07BB35 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST LT ISZERO PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1DDA5D1A0819985D58D95D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC04 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0xF18 JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0xC37 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST DUP1 PUSH1 0xA EQ PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC6B SWAP1 PUSH1 0xA SWAP1 PUSH2 0x174B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE MLOAD DUP3 DUP2 MSTORE PUSH32 0x89E69B6FA2D69C7EB45B6AF3918DBAA99E08CC13755F03EAD1BE356D699558D2 SWAP2 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204D696E696D756D20616D6F756E742073686F756C6420626520313030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x2D570FBA1492852E40BFA341311A0467B1EBF0D0755E4E405F2F3BAC9C8A23E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xE77 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE49 JUMPI PUSH2 0xE49 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xE65 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xE6F DUP2 PUSH2 0x1778 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE24 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1C985B991BDB481B9BDD08199BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF88 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF8 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1053 SWAP2 PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1093 DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x10A7 SWAP1 PUSH2 0x1669 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x10C9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x110F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x10E2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x110F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x110F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x110F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10F4 JUMP JUMPDEST POP PUSH2 0x111B SWAP3 SWAP2 POP PUSH2 0x1174 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x110F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x110F JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x113F JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x111B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1175 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C0 DUP3 PUSH2 0x1189 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1206 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1239 JUMPI PUSH2 0x1239 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x124C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x11DD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1093 DUP5 DUP3 DUP6 ADD PUSH2 0x120E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12CE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12B6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x12FB DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD PUSH1 0x40 DUP3 DUP6 ADD MSTORE PUSH2 0x132B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x12E3 JUMP JUMPDEST DUP6 DUP4 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x40 DUP8 ADD MSTORE DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 DUP5 ADD SWAP3 POP PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1375 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x134C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x13C5 PUSH1 0xA0 DUP9 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1408 DUP7 DUP4 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1470 JUMPI PUSH2 0x1470 PUSH2 0x11C7 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x147F DUP3 DUP3 ADD PUSH2 0x11DD JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14B0 DUP4 PUSH2 0x1189 JUMP JUMPDEST DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x149F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x14EA DUP2 PUSH2 0x1435 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1513 DUP8 DUP4 DUP9 ADD PUSH2 0x120E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1536 DUP7 DUP3 DUP8 ADD PUSH2 0x1443 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x155C PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1579 DUP3 DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E9 DUP7 DUP4 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1647 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x165F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12B3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x167D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x169E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5573657220646F6573206E6F7420657869737473206F6E207468652067726F75 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0xFC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16F8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x175D JUMPI PUSH2 0x175D PUSH2 0x1735 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x178C JUMPI PUSH2 0x178C PUSH2 0x1735 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x17BA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12E3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11C0 DUP2 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F3 PUSH2 0x1735 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x23 0x5F PUSH21 0x9807FB4D2859CCB044579B5BC5F2601E754F8D9228 0xBF GAS SUB RETURNDATACOPY SHL GASPRICE 0x1E PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121"
    },
    "25": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD97B4048"
    },
    "49": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD97B4048"
    },
    "60": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D1"
    },
    "64": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDBDFF2C1"
    },
    "71": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x301"
    },
    "75": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF08ABE9B"
    },
    "82": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x309"
    },
    "86": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31C"
    },
    "97": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFD00CC59"
    },
    "104": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32F"
    },
    "108": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "REVERT",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x277"
    },
    "124": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27F"
    },
    "135": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x94985DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29A"
    },
    "146": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x963B7349"
    },
    "153": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AD"
    },
    "157": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBC1586D1"
    },
    "164": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "165": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C0"
    },
    "168": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "169": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "REVERT",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x47734892"
    },
    "180": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "GT",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x47734892"
    },
    "191": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x200"
    },
    "195": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4DFA3F18"
    },
    "202": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x229"
    },
    "206": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x5FD5D70B"
    },
    "213": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "214": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23C"
    },
    "217": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "218": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "219": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x64F63B1E"
    },
    "224": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "225": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24F"
    },
    "228": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "229": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6F77926B"
    },
    "235": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "236": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x257"
    },
    "239": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "240": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "REVERT",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "246": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1B79DA8C"
    },
    "251": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "252": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x126"
    },
    "255": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "256": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2EB0E1E6"
    },
    "262": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "263": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "266": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "267": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "268": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3E521CC0"
    },
    "273": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "274": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A4"
    },
    "277": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "278": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "279": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x42619F66"
    },
    "284": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "EQ",
      "path": "5"
    },
    "285": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E9"
    },
    "288": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "289": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "290": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "DUP1",
      "path": "5"
    },
    "293": {
      "first_revert": true,
      "fn": null,
      "offset": [
        220,
        6900
      ],
      "op": "REVERT",
      "path": "5"
    },
    "294": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "295": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x139"
    },
    "298": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x134"
    },
    "301": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "302": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "304": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A5"
    },
    "307": {
      "fn": "Wingbird.getFinalHonors",
      "jump": "i",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMP",
      "path": "5"
    },
    "308": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "309": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34F"
    },
    "312": {
      "fn": "Wingbird.getFinalHonors",
      "jump": "i",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMP",
      "path": "5"
    },
    "313": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "314": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "316": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "317": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17B"
    },
    "320": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "321": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "326": {
      "op": "DUP3"
    },
    "327": {
      "op": "ADD"
    },
    "328": {
      "op": "SWAP1"
    },
    "329": {
      "op": "POP"
    },
    "330": {
      "op": "DUP3"
    },
    "331": {
      "op": "MLOAD"
    },
    "332": {
      "op": "DUP3"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "336": {
      "op": "DUP4"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "op": "MLOAD"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "341": {
      "op": "DUP4"
    },
    "342": {
      "op": "ADD"
    },
    "343": {
      "op": "MSTORE"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "346": {
      "op": "DUP4"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "op": "MLOAD"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "351": {
      "op": "DUP4"
    },
    "352": {
      "op": "ADD"
    },
    "353": {
      "op": "MSTORE"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "356": {
      "op": "DUP4"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "op": "MLOAD"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "361": {
      "op": "DUP4"
    },
    "362": {
      "op": "ADD"
    },
    "363": {
      "op": "MSTORE"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "366": {
      "op": "DUP4"
    },
    "367": {
      "op": "ADD"
    },
    "368": {
      "op": "MLOAD"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "371": {
      "op": "DUP4"
    },
    "372": {
      "op": "ADD"
    },
    "373": {
      "op": "MSTORE"
    },
    "374": {
      "op": "SWAP3"
    },
    "375": {
      "op": "SWAP2"
    },
    "376": {
      "op": "POP"
    },
    "377": {
      "op": "POP"
    },
    "378": {
      "op": "JUMP"
    },
    "379": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "380": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "382": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "383": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "DUP1",
      "path": "5"
    },
    "384": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "385": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "SUB",
      "path": "5"
    },
    "386": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "387": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "RETURN",
      "path": "5"
    },
    "388": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "389": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x197"
    },
    "392": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "395": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "396": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "398": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x127E"
    },
    "401": {
      "fn": "Wingbird.getIpfsObject",
      "jump": "i",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMP",
      "path": "5"
    },
    "402": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "403": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D9"
    },
    "406": {
      "fn": "Wingbird.getIpfsObject",
      "jump": "i",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMP",
      "path": "5"
    },
    "407": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "408": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "410": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "411": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17B"
    },
    "414": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "415": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "416": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x130F"
    },
    "419": {
      "fn": "Wingbird.getIpfsObject",
      "jump": "i",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMP",
      "path": "5"
    },
    "420": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "421": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "424": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "427": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "428": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "430": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1380"
    },
    "433": {
      "fn": "Wingbird.setFinalHonors",
      "jump": "i",
      "offset": [
        6299,
        6745
      ],
      "op": "JUMP",
      "path": "5"
    },
    "434": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "441": {
      "op": "SHL"
    },
    "442": {
      "op": "SUB"
    },
    "443": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "AND",
      "path": "5",
      "statement": 0
    },
    "444": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "446": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "447": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "DUP2",
      "path": "5"
    },
    "448": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "449": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "451": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "453": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "454": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "456": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "457": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6513
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "458": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "460": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "461": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6525
      ],
      "op": "ADD",
      "path": "5"
    },
    "462": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6534
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "463": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6534
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "464": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6534
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "465": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6497,
        6534
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "466": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6544,
        6577
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 1
    },
    "467": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6544,
        6577
      ],
      "op": "DUP4",
      "path": "5"
    },
    "468": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6544,
        6577
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "469": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6587,
        6617
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x4"
    },
    "471": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6587,
        6617
      ],
      "op": "DUP4",
      "path": "5"
    },
    "472": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6587,
        6617
      ],
      "op": "ADD",
      "path": "5"
    },
    "473": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6587,
        6628
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "474": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6638,
        6672
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x3"
    },
    "476": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6638,
        6672
      ],
      "op": "DUP3",
      "path": "5"
    },
    "477": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6638,
        6672
      ],
      "op": "ADD",
      "path": "5"
    },
    "478": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6638,
        6687
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "479": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6638,
        6687
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "480": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6638,
        6687
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "481": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6638,
        6687
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "482": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6697,
        6727
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x2"
    },
    "484": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6697,
        6727
      ],
      "op": "ADD",
      "path": "5"
    },
    "485": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6697,
        6738
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "486": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "JUMP",
      "path": "5"
    },
    "487": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "488": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        6299,
        6745
      ],
      "op": "STOP",
      "path": "5"
    },
    "489": {
      "offset": [
        370,
        397
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "490": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F2"
    },
    "493": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "495": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "496": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "497": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "JUMP",
      "path": "5"
    },
    "498": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "499": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "501": {
      "fn": "Wingbird.setFinalHonors",
      "offset": [
        370,
        397
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "502": {
      "op": "SWAP1"
    },
    "503": {
      "op": "DUP2"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "507": {
      "op": "ADD"
    },
    "508": {
      "offset": [
        370,
        397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17B"
    },
    "511": {
      "op": "JUMP"
    },
    "512": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "513": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F2"
    },
    "516": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20E"
    },
    "519": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "520": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "522": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A5"
    },
    "525": {
      "fn": "Wingbird.getUserBalance",
      "jump": "i",
      "offset": [
        3941,
        4050
      ],
      "op": "JUMP",
      "path": "5"
    },
    "526": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "op": "SUB"
    },
    "535": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "AND",
      "path": "5",
      "statement": 5
    },
    "536": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "538": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "539": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "DUP2",
      "path": "5"
    },
    "540": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "541": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "543": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "545": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "546": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "548": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "549": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "550": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "551": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "552": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        3941,
        4050
      ],
      "op": "JUMP",
      "path": "5"
    },
    "553": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "554": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "557": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237"
    },
    "560": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "561": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "563": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13D1"
    },
    "566": {
      "fn": "Wingbird.createNewUser",
      "jump": "i",
      "offset": [
        2795,
        3425
      ],
      "op": "JUMP",
      "path": "5"
    },
    "567": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "568": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x511"
    },
    "571": {
      "fn": "Wingbird.createNewUser",
      "jump": "i",
      "offset": [
        2795,
        3425
      ],
      "op": "JUMP",
      "path": "5"
    },
    "572": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "573": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "576": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24A"
    },
    "579": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "580": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "582": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CA"
    },
    "585": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        4707,
        5291
      ],
      "op": "JUMP",
      "path": "5"
    },
    "586": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "587": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6BB"
    },
    "590": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        4707,
        5291
      ],
      "op": "JUMP",
      "path": "5"
    },
    "591": {
      "fn": "Wingbird.getTotalBirds",
      "offset": [
        4056,
        4162
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "592": {
      "fn": "Wingbird.getTotalBirds",
      "offset": [
        4128,
        4148
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x6"
    },
    "594": {
      "fn": "Wingbird.getTotalBirds",
      "offset": [
        4128,
        4155
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "595": {
      "fn": "Wingbird.getTotalBirds",
      "offset": [
        4056,
        4162
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F2"
    },
    "598": {
      "fn": "Wingbird.getTotalBirds",
      "offset": [
        4056,
        4162
      ],
      "op": "JUMP",
      "path": "5"
    },
    "599": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "600": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26A"
    },
    "603": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x265"
    },
    "606": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "607": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "609": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A5"
    },
    "612": {
      "fn": "Wingbird.getUser",
      "jump": "i",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMP",
      "path": "5"
    },
    "613": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "614": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CD"
    },
    "617": {
      "fn": "Wingbird.getUser",
      "jump": "i",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMP",
      "path": "5"
    },
    "618": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "619": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "621": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "622": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17B"
    },
    "625": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "626": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "627": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1540"
    },
    "630": {
      "fn": "Wingbird.getUser",
      "jump": "i",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMP",
      "path": "5"
    },
    "631": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x948"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "639": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "642": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 7
    },
    "643": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "645": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "652": {
      "op": "SHL"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "655": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "656": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "665": {
      "op": "JUMP"
    },
    "666": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "667": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7"
    },
    "670": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "673": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "674": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "676": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1590"
    },
    "679": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMP",
      "path": "2"
    },
    "680": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "681": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9AE"
    },
    "684": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMP",
      "path": "2"
    },
    "685": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "686": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "689": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "692": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "693": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "695": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B2"
    },
    "698": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4284,
        4701
      ],
      "op": "JUMP",
      "path": "5"
    },
    "699": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "700": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA34"
    },
    "703": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4284,
        4701
      ],
      "op": "JUMP",
      "path": "5"
    },
    "704": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "705": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "708": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CE"
    },
    "711": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "712": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "714": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x127E"
    },
    "717": {
      "fn": "Wingbird.buildFences",
      "jump": "i",
      "offset": [
        6160,
        6223
      ],
      "op": "JUMP",
      "path": "5"
    },
    "718": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "719": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "POP",
      "path": "5"
    },
    "720": {
      "fn": "Wingbird.buildFences",
      "offset": [
        6160,
        6223
      ],
      "op": "JUMP",
      "path": "5"
    },
    "721": {
      "offset": [
        1944,
        1993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "722": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F4"
    },
    "725": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DF"
    },
    "728": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "729": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "731": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x160C"
    },
    "734": {
      "fn": "Wingbird.buildFences",
      "jump": "i",
      "offset": [
        1944,
        1993
      ],
      "op": "JUMP",
      "path": "5"
    },
    "735": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "736": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "738": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "740": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "741": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "743": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "744": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "DUP2",
      "path": "5"
    },
    "745": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "746": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "748": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "749": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "750": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "751": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "753": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "AND",
      "path": "5"
    },
    "754": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "DUP2",
      "path": "5"
    },
    "755": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "JUMP",
      "path": "5"
    },
    "756": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "757": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "759": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "760": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17B"
    },
    "763": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "764": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "765": {
      "fn": "Wingbird.buildFences",
      "offset": [
        1944,
        1993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1625"
    },
    "768": {
      "fn": "Wingbird.buildFences",
      "jump": "i",
      "offset": [
        1944,
        1993
      ],
      "op": "JUMP",
      "path": "5"
    },
    "769": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        659,
        942
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "770": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        659,
        942
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "773": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        659,
        942
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB07"
    },
    "776": {
      "fn": "Wingbird.getRandomNumber",
      "jump": "i",
      "offset": [
        659,
        942
      ],
      "op": "JUMP",
      "path": "5"
    },
    "777": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "778": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "781": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x317"
    },
    "784": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "785": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "787": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x160C"
    },
    "790": {
      "fn": "Wingbird.giveHonors",
      "jump": "i",
      "offset": [
        5932,
        6108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "791": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "792": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC42"
    },
    "795": {
      "fn": "Wingbird.giveHonors",
      "jump": "i",
      "offset": [
        5932,
        6108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A5"
    },
    "809": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAE"
    },
    "814": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "815": {
      "offset": [
        1999,
        2043
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F2"
    },
    "819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33D"
    },
    "822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A5"
    },
    "828": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1999,
        2043
      ],
      "op": "JUMP",
      "path": "5"
    },
    "829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "DUP2",
      "path": "5"
    },
    "839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "DUP2",
      "path": "5"
    },
    "846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1999,
        2043
      ],
      "op": "JUMP",
      "path": "5"
    },
    "847": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "848": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6835,
        6852
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x381"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "853": {
      "op": "MLOAD"
    },
    "854": {
      "op": "DUP1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "860": {
      "op": "MSTORE"
    },
    "861": {
      "op": "DUP1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "864": {
      "op": "DUP2"
    },
    "865": {
      "op": "MSTORE"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "875": {
      "op": "ADD"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "878": {
      "op": "DUP2"
    },
    "879": {
      "op": "MSTORE"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "885": {
      "op": "DUP2"
    },
    "886": {
      "op": "MSTORE"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "892": {
      "op": "DUP2"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "POP"
    },
    "895": {
      "op": "SWAP1"
    },
    "896": {
      "op": "JUMP"
    },
    "897": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6835,
        6852
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "898": {
      "op": "POP"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "AND",
      "path": "5",
      "statement": 8
    },
    "908": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "910": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "911": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "912": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "913": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "915": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "917": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "918": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "919": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "920": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "922": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "923": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "924": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "925": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6875,
        6891
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "926": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "927": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "928": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "930": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "931": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "932": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "933": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "934": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "935": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "936": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "937": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "938": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "940": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "941": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "942": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "943": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "944": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "945": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "946": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "947": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "948": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "949": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "950": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "952": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "953": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "954": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "955": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "956": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "957": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "958": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "959": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "960": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "961": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "962": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "964": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "965": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "966": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "967": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "969": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "970": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "971": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "972": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "974": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "975": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "976": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "977": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "978": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "980": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "981": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "ADD",
      "path": "5"
    },
    "982": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "983": {
      "fn": "Wingbird.getFinalHonors",
      "offset": [
        6868,
        6891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "984": {
      "fn": "Wingbird.getFinalHonors",
      "jump": "o",
      "offset": [
        6751,
        6898
      ],
      "op": "JUMP",
      "path": "5"
    },
    "985": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "988": {
      "op": "DUP1"
    },
    "989": {
      "op": "MLOAD"
    },
    "990": {
      "op": "DUP1"
    },
    "991": {
      "op": "DUP3"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "op": "SWAP1"
    },
    "994": {
      "op": "SWAP2"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "998": {
      "op": "DUP1"
    },
    "999": {
      "op": "DUP3"
    },
    "1000": {
      "op": "MSTORE"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5431
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0xB"
    },
    "1008": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5432,
        5436
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1009": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1011": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1012": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FD"
    },
    "1015": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1016": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1017": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x164D"
    },
    "1020": {
      "fn": "Wingbird.getIpfsObject",
      "jump": "i",
      "offset": [
        5423,
        5437
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1021": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1022": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1023": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1024": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1025": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1027": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1028": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1030": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1031": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1032": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1033": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "SUB",
      "path": "5"
    },
    "1034": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1035": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5423,
        5437
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1036": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1038": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1039": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1040": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1042": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1043": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1045": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1046": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1047": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1048": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1050": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1051": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1052": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1053": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1054": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x426"
    },
    "1057": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1058": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1669"
    },
    "1061": {
      "fn": "Wingbird.getIpfsObject",
      "jump": "i",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1062": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1063": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1064": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1066": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1067": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1069": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1070": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1071": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DIV",
      "path": "5"
    },
    "1072": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MUL",
      "path": "5"
    },
    "1073": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1075": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1076": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1078": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1079": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1080": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1081": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1082": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1084": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1085": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1086": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1087": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1088": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1089": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1090": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1091": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1092": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1094": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1095": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1096": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1097": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1098": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x452"
    },
    "1101": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1102": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1669"
    },
    "1105": {
      "fn": "Wingbird.getIpfsObject",
      "jump": "i",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1106": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1107": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1108": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1109": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49F"
    },
    "1112": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1113": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1114": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1116": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "LT",
      "path": "5"
    },
    "1117": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x474"
    },
    "1120": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1121": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1124": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1125": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1126": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1127": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DIV",
      "path": "5"
    },
    "1128": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MUL",
      "path": "5"
    },
    "1129": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1130": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1131": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1132": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1134": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1135": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1136": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49F"
    },
    "1139": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1140": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1141": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1142": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1143": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1144": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1145": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1147": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1148": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1150": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1152": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1153": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1154": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1155": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1156": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1157": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1158": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1159": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1160": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1162": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1163": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1164": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1166": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1167": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1168": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1169": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "GT",
      "path": "5"
    },
    "1170": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x482"
    },
    "1173": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1174": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1175": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1176": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SUB",
      "path": "5"
    },
    "1177": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1179": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "AND",
      "path": "5"
    },
    "1180": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1181": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1182": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1183": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1184": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1185": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1186": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1187": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1188": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1189": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1190": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1191": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1193": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1194": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1196": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1197": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1198": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1199": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1200": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1201": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1203": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MUL",
      "path": "5"
    },
    "1204": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1206": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1207": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1209": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1210": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1211": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1212": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1213": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1215": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1216": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1217": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1218": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1219": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1220": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1221": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1222": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1223": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1225": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1226": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1227": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1228": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1229": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1230": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1231": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x501"
    },
    "1234": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1235": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1237": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MUL",
      "path": "5"
    },
    "1238": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1239": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1240": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1241": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1242": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1244": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1245": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1247": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1249": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1250": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1251": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1252": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1253": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "AND",
      "path": "5"
    },
    "1263": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1264": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1265": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1267": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1268": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1269": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1270": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1271": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1273": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "ADD",
      "path": "5"
    },
    "1274": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1275": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1276": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "GT",
      "path": "5"
    },
    "1277": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E3"
    },
    "1280": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1281": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1282": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1283": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1284": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1285": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1286": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1287": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1288": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1289": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1290": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1291": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1292": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5416,
        5437
      ],
      "op": "POP",
      "path": "5"
    },
    "1293": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1294": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1295": {
      "fn": "Wingbird.getIpfsObject",
      "offset": [
        5297,
        5444
      ],
      "op": "POP",
      "path": "5"
    },
    "1296": {
      "fn": "Wingbird.getIpfsObject",
      "jump": "o",
      "offset": [
        5297,
        5444
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1297": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1298": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2975,
        2985
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 10
    },
    "1299": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1301": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1302": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1303": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1304": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "1306": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1308": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1309": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1311": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1312": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1313": {
      "fn": "Wingbird.getUserBalance",
      "offset": [
        4027,
        4043
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1314": {
      "branch": 51,
      "fn": "Wingbird.createNewUser",
      "offset": [
        2960,
        2991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1315": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x56A"
    },
    "1318": {
      "branch": 51,
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1319": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1321": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1322": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1330": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1333": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1335": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1336": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "ADD",
      "path": "5"
    },
    "1337": {
      "op": "MSTORE"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1342": {
      "op": "DUP3"
    },
    "1343": {
      "op": "ADD"
    },
    "1344": {
      "op": "MSTORE"
    },
    "1345": {
      "op": "PUSH20",
      "value": "0x5573657220616C72656164792065786973747321"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1368": {
      "op": "SHL"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1371": {
      "op": "DUP3"
    },
    "1372": {
      "op": "ADD"
    },
    "1373": {
      "op": "MSTORE"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1378": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1380": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1381": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1382": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1383": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "SUB",
      "path": "5"
    },
    "1384": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1385": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "1386": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2952,
        3016
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1387": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3026,
        3043
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 11,
      "value": "0x572"
    },
    "1390": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3026,
        3041
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB07"
    },
    "1393": {
      "fn": "Wingbird.createNewUser",
      "jump": "i",
      "offset": [
        3026,
        3043
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1394": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3026,
        3043
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1395": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1397": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1398": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1399": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1401": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1402": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "ADD",
      "path": "5"
    },
    "1403": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1404": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1405": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1406": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1407": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1408": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1410": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1411": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1412": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "ADD",
      "path": "5"
    },
    "1413": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1414": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1415": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1416": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3097,
        3109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1418": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3097,
        3109
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1419": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1420": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1421": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "ADD",
      "path": "5"
    },
    "1422": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1423": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3139,
        3149
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 12
    },
    "1424": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3053,
        3069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1426": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1427": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1428": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1429": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "1431": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1432": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1433": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1434": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1435": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1436": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1437": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1438": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1439": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1440": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1441": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1442": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1443": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1444": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3072,
        3110
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1445": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B1"
    },
    "1448": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1449": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1450": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3150
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1451": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "ADD",
      "path": "5"
    },
    "1452": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1453": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109B"
    },
    "1456": {
      "fn": "Wingbird.createNewUser",
      "jump": "i",
      "offset": [
        3120,
        3157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1457": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1458": {
      "op": "POP"
    },
    "1459": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1461": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1462": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1463": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "ADD",
      "path": "5"
    },
    "1464": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1465": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1466": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1467": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5CA"
    },
    "1470": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1471": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1473": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1474": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "ADD",
      "path": "5"
    },
    "1475": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1476": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "ADD",
      "path": "5"
    },
    "1477": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1478": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109B"
    },
    "1481": {
      "fn": "Wingbird.createNewUser",
      "jump": "i",
      "offset": [
        3120,
        3157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1482": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1486": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1487": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1488": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "ADD",
      "path": "5"
    },
    "1489": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1490": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1492": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1493": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1494": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "ADD",
      "path": "5"
    },
    "1495": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3120,
        3157
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1496": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1497": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1498": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1500": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1501": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "ADD",
      "path": "5"
    },
    "1502": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1503": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1504": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3167,
        3195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1506": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1507": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1508": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1509": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1511": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1512": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1513": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "ADD",
      "path": "5"
    },
    "1514": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1515": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1516": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1517": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1518": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1519": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "ADD",
      "path": "5"
    },
    "1520": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1521": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1522": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1523": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1525": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1526": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "ADD",
      "path": "5"
    },
    "1527": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1528": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1529": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1530": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1532": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1533": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "ADD",
      "path": "5"
    },
    "1534": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1535": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1536": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1537": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3243,
        3253
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 13
    },
    "1538": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1539": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1540": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1541": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3242
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "1543": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1544": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1545": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1546": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1547": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1548": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3254
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1549": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1550": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1551": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1552": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1553": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1554": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1555": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1557": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1558": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1559": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "ADD",
      "path": "5"
    },
    "1560": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1561": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1562": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1563": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1564": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1565": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1566": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1567": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1568": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "ADD",
      "path": "5"
    },
    "1569": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1570": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1571": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1572": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1573": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1574": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1575": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1577": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1578": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "ADD",
      "path": "5"
    },
    "1579": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1580": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1581": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1582": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1584": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1585": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1586": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "ADD",
      "path": "5"
    },
    "1587": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1588": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1589": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1590": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3233,
        3267
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1591": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3297
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x6"
    },
    "1593": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1594": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1595": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1596": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1597": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "ADD",
      "path": "5"
    },
    "1598": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1599": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1600": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1601": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1602": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1635": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1636": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1637": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "ADD",
      "path": "5"
    },
    "1638": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1639": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "op": "NOT"
    },
    "1649": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "AND",
      "path": "5"
    },
    "1650": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1651": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "OR",
      "path": "5"
    },
    "1652": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1653": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3277,
        3314
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1654": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3198,
        3223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1655": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3324,
        3357
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x681"
    },
    "1658": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3324,
        3357
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1659": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3353,
        3356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "1661": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3324,
        3340
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD76"
    },
    "1664": {
      "fn": "Wingbird.createNewUser",
      "jump": "i",
      "offset": [
        3324,
        3357
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1665": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3324,
        3357
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1666": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x40"
    },
    "1668": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1669": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3407,
        3417
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1670": {
      "op": "DUP2"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA22187EC83AA1B90E4EFBAA4F24CE6B70A007F97923B5878C0FB8026C2FEBE79"
    },
    "1705": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1710": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1712": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1713": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1714": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1715": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "SUB",
      "path": "5"
    },
    "1716": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1717": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        3395,
        3418
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1718": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2885,
        3425
      ],
      "op": "POP",
      "path": "5"
    },
    "1719": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2885,
        3425
      ],
      "op": "POP",
      "path": "5"
    },
    "1720": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "POP",
      "path": "5"
    },
    "1721": {
      "fn": "Wingbird.createNewUser",
      "offset": [
        2795,
        3425
      ],
      "op": "POP",
      "path": "5"
    },
    "1722": {
      "fn": "Wingbird.createNewUser",
      "jump": "o",
      "offset": [
        2795,
        3425
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1723": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4707,
        5291
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1724": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4882,
        4914
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 17,
      "value": "0x6C5"
    },
    "1727": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4895,
        4905
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1728": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4907,
        4913
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1729": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4882,
        4894
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1F"
    },
    "1732": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        4882,
        4914
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1733": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4882,
        4914
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1734": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4882,
        4922
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1735": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4882,
        4922
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1736": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4918,
        4922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1738": {
      "branch": 52,
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4882,
        4922
      ],
      "op": "EQ",
      "path": "5"
    },
    "1739": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E6"
    },
    "1742": {
      "branch": 52,
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1743": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1745": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1746": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1754": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1755": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1757": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "ADD",
      "path": "5"
    },
    "1758": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x561"
    },
    "1761": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1762": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16A4"
    },
    "1765": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        4861,
        4981
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1766": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4861,
        4981
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1767": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5020,
        5024
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x1"
    },
    "1769": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4999,
        5024
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1770": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4999,
        5024
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1771": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4999,
        5024
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1772": {
      "branch": 53,
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4999,
        5024
      ],
      "op": "EQ",
      "path": "5"
    },
    "1773": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x730"
    },
    "1776": {
      "branch": 53,
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1777": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1779": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1788": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1791": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1793": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1794": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "ADD",
      "path": "5"
    },
    "1795": {
      "op": "MSTORE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "ADD"
    },
    "1802": {
      "op": "MSTORE"
    },
    "1803": {
      "op": "PUSH21",
      "value": "0x10DBDB9CD95B9CDD5CC81B9BDD081C995858DA1959"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1830": {
      "op": "DUP3"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "op": "MSTORE"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1835": {
      "op": "ADD"
    },
    "1836": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x561"
    },
    "1839": {
      "op": "JUMP"
    },
    "1840": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        4991,
        5050
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1841": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1843": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1844": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1845": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1846": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1847": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "ADD",
      "path": "5"
    },
    "1848": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1849": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1850": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1851": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1852": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1853": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1855": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1856": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "ADD",
      "path": "5"
    },
    "1857": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1858": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1859": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1860": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 19
    },
    "1861": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1862": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1863": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5085,
        5121
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1864": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "1866": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5139
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1867": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x755"
    },
    "1870": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1871": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5094,
        5112
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1872": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5094,
        5112
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1873": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x164D"
    },
    "1876": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        5131,
        5159
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1877": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1878": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1879": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1880": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1881": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1883": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "ADD",
      "path": "5"
    },
    "1884": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1886": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1887": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1888": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1889": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "SUB",
      "path": "5"
    },
    "1890": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1891": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5159
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1892": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1894": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1895": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "ADD",
      "path": "5"
    },
    "1896": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1897": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1898": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1900": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "ADD",
      "path": "5"
    },
    "1901": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1902": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1903": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1904": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1905": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1907": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "ADD",
      "path": "5"
    },
    "1908": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1909": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x77F"
    },
    "1912": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1913": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1914": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1915": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109B"
    },
    "1918": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        5131,
        5168
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1919": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1923": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1924": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1925": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "ADD",
      "path": "5"
    },
    "1926": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1927": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1928": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1929": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x798"
    },
    "1932": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1933": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1935": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1936": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "ADD",
      "path": "5"
    },
    "1937": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1938": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "ADD",
      "path": "5"
    },
    "1939": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1940": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x111F"
    },
    "1943": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        5131,
        5168
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1944": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1945": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "POP",
      "path": "5"
    },
    "1946": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1947": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "POP",
      "path": "5"
    },
    "1948": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5131,
        5168
      ],
      "op": "POP",
      "path": "5"
    },
    "1949": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 20,
      "value": "0x9C5C2780A8755DFA42A837FA1D2F3272CB07B4EFF3717C9F0BBC1618F9F30617"
    },
    "1982": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5225,
        5243
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1983": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5257,
        5274
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1984": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1986": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1987": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6AD"
    },
    "1990": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1991": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1992": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1993": {
      "fn": "Wingbird.reachConsensus",
      "offset": [
        5183,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16E5"
    },
    "1996": {
      "fn": "Wingbird.reachConsensus",
      "jump": "i",
      "offset": [
        5183,
        5284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1997": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1998": {
      "fn": "Wingbird.getUser",
      "offset": [
        3873,
        3884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2003": {
      "op": "MLOAD"
    },
    "2004": {
      "op": "DUP1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2007": {
      "op": "ADD"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "DUP1"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2014": {
      "op": "DUP2"
    },
    "2015": {
      "op": "MSTORE"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2021": {
      "op": "DUP2"
    },
    "2022": {
      "op": "MSTORE"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2025": {
      "op": "ADD"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2028": {
      "op": "DUP2"
    },
    "2029": {
      "op": "MSTORE"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "op": "SWAP1"
    },
    "2032": {
      "op": "JUMP"
    },
    "2033": {
      "fn": "Wingbird.getUser",
      "offset": [
        3873,
        3884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "SUB"
    },
    "2042": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 21
    },
    "2043": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "AND",
      "path": "5"
    },
    "2044": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2046": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2047": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2048": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2049": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3921
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "2051": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2053": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2054": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2056": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2057": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2058": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2059": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2060": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2061": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2062": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2064": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2065": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2066": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2067": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2068": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2069": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2070": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2071": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2072": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2073": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2074": {
      "fn": "Wingbird.getUser",
      "offset": [
        3903,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2075": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x823"
    },
    "2078": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2079": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1669"
    },
    "2082": {
      "fn": "Wingbird.getUser",
      "jump": "i",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2083": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2084": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2085": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2087": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2088": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2090": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2091": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2092": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DIV",
      "path": "5"
    },
    "2093": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MUL",
      "path": "5"
    },
    "2094": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2096": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2097": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2099": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2100": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2101": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2102": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2103": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2105": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2106": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2107": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2108": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2109": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2110": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2111": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2112": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2113": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2115": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2116": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2117": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2118": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2119": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x84F"
    },
    "2122": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2123": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1669"
    },
    "2126": {
      "fn": "Wingbird.getUser",
      "jump": "i",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2127": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2128": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2129": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2130": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89C"
    },
    "2133": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2134": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2135": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2137": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "LT",
      "path": "5"
    },
    "2138": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x871"
    },
    "2141": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2142": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2145": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2146": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2147": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2148": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DIV",
      "path": "5"
    },
    "2149": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MUL",
      "path": "5"
    },
    "2150": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2151": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2152": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2153": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2155": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2156": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2157": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89C"
    },
    "2160": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2161": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2162": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2163": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2164": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2165": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2166": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2168": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2169": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2171": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2173": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2174": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2175": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2176": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2177": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2178": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2179": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2180": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2181": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2183": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2184": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2185": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2187": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2188": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2189": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2190": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "GT",
      "path": "5"
    },
    "2191": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x87F"
    },
    "2194": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2195": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2196": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2197": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SUB",
      "path": "5"
    },
    "2198": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2200": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "AND",
      "path": "5"
    },
    "2201": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2202": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2203": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2204": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2205": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2206": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2207": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2208": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2209": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2210": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2211": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2212": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2214": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2215": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2217": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2218": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2219": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2220": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2221": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B5"
    },
    "2224": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2225": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1669"
    },
    "2228": {
      "fn": "Wingbird.getUser",
      "jump": "i",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2229": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2230": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2231": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2233": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2234": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2236": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2237": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2238": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DIV",
      "path": "5"
    },
    "2239": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MUL",
      "path": "5"
    },
    "2240": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2242": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2243": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2245": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2246": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2247": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2248": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2249": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2251": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2252": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2253": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2254": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2255": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2256": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2257": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2258": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2259": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2261": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2262": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2263": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2264": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2265": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E1"
    },
    "2268": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2269": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1669"
    },
    "2272": {
      "fn": "Wingbird.getUser",
      "jump": "i",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2273": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2274": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2275": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2276": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92E"
    },
    "2279": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2280": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2281": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2283": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "LT",
      "path": "5"
    },
    "2284": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x903"
    },
    "2287": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2288": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2291": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2292": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2293": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2294": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DIV",
      "path": "5"
    },
    "2295": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MUL",
      "path": "5"
    },
    "2296": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2297": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2298": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2299": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2301": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2302": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2303": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92E"
    },
    "2306": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2307": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2308": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2309": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2310": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2311": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2312": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2314": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2315": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2317": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2319": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2320": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2321": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2322": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2323": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2324": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2325": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2326": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2327": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2329": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2330": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2331": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2333": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2334": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2335": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2336": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "GT",
      "path": "5"
    },
    "2337": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x911"
    },
    "2340": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2341": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2342": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2343": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SUB",
      "path": "5"
    },
    "2344": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2346": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "AND",
      "path": "5"
    },
    "2347": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2348": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2349": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2350": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2351": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2352": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2353": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2354": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2355": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2356": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2357": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2358": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2360": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2361": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2363": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2364": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "ADD",
      "path": "5"
    },
    "2365": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2366": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2367": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2368": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2369": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2370": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2371": {
      "fn": "Wingbird.getUser",
      "offset": [
        3896,
        3928
      ],
      "op": "POP",
      "path": "5"
    },
    "2372": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2373": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2374": {
      "fn": "Wingbird.getUser",
      "offset": [
        3820,
        3935
      ],
      "op": "POP",
      "path": "5"
    },
    "2375": {
      "fn": "Wingbird.getUser",
      "jump": "o",
      "offset": [
        3820,
        3935
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2376": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2377": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2379": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "op": "SUB"
    },
    "2388": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2389": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 22
    },
    "2390": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2391": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A2"
    },
    "2394": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2395": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2397": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2406": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2411": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2412": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2413": {
      "op": "DUP2"
    },
    "2414": {
      "op": "SWAP1"
    },
    "2415": {
      "op": "MSTORE"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2418": {
      "op": "DUP3"
    },
    "2419": {
      "op": "ADD"
    },
    "2420": {
      "op": "MSTORE"
    },
    "2421": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2456": {
      "op": "DUP3"
    },
    "2457": {
      "op": "ADD"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2461": {
      "op": "ADD"
    },
    "2462": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "2465": {
      "op": "JUMP"
    },
    "2466": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2467": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0x9AC"
    },
    "2470": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7F"
    },
    "2475": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2477": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2478": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2479": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9667,
        9677
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 24
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2486": {
      "op": "SHL"
    },
    "2487": {
      "op": "SUB"
    },
    "2488": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9681,
        9695
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "2521": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9667,
        9695
      ],
      "op": "AND",
      "path": "2"
    },
    "2522": {
      "branch": 61,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9667,
        9695
      ],
      "op": "EQ",
      "path": "2"
    },
    "2523": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA26"
    },
    "2526": {
      "branch": 61,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2527": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2529": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2538": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2541": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2543": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2544": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "ADD",
      "path": "2"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2550": {
      "op": "DUP3"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2593": {
      "op": "ADD"
    },
    "2594": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x561"
    },
    "2597": {
      "op": "JUMP"
    },
    "2598": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9659,
        9731
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2599": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9737,
        9777
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 25,
      "value": "0xA30"
    },
    "2602": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9755,
        9764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2603": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9776
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2604": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9737,
        9754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xECF"
    },
    "2607": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9737,
        9777
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2608": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9737,
        9777
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2609": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "POP",
      "path": "2"
    },
    "2610": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9575,
        9782
      ],
      "op": "POP",
      "path": "2"
    },
    "2611": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9575,
        9782
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2612": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2613": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4423,
        4455
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 26,
      "value": "0xA3E"
    },
    "2616": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4436,
        4446
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2617": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4448,
        4454
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2618": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4423,
        4435
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1F"
    },
    "2621": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4423,
        4455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2622": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4423,
        4455
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2623": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4423,
        4463
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2624": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4423,
        4463
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2625": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4459,
        4463
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2627": {
      "branch": 54,
      "fn": "Wingbird.syncSenses",
      "offset": [
        4423,
        4463
      ],
      "op": "EQ",
      "path": "5"
    },
    "2628": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5F"
    },
    "2631": {
      "branch": 54,
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2632": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2634": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2643": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2644": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2646": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "ADD",
      "path": "5"
    },
    "2647": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x561"
    },
    "2650": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2651": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16A4"
    },
    "2654": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4402,
        4522
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2655": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4402,
        4522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2656": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2658": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2659": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2660": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2661": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2662": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "ADD",
      "path": "5"
    },
    "2663": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2664": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2665": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2666": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2667": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2668": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2670": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2671": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "ADD",
      "path": "5"
    },
    "2672": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2673": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2674": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2675": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 27
    },
    "2676": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2677": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2678": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4557,
        4593
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2679": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "2681": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2682": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA84"
    },
    "2685": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2686": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4566,
        4584
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2687": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4566,
        4584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2688": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x164D"
    },
    "2691": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4603,
        4631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2692": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2693": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2694": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2695": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2696": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2698": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "ADD",
      "path": "5"
    },
    "2699": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2701": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2702": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2703": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2704": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "SUB",
      "path": "5"
    },
    "2705": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2706": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4631
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2707": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2709": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2710": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2711": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2712": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2713": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2715": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2716": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2717": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2718": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2719": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2720": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2722": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2723": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2724": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAAE"
    },
    "2727": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2728": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2729": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2730": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109B"
    },
    "2733": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4603,
        4640
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2734": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2738": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2739": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2740": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2741": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2742": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2743": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2744": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC7"
    },
    "2747": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2748": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2750": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2751": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2752": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2753": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2754": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2755": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x111F"
    },
    "2758": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4603,
        4640
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2759": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2760": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "POP",
      "path": "5"
    },
    "2761": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2762": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "POP",
      "path": "5"
    },
    "2763": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4603,
        4640
      ],
      "op": "POP",
      "path": "5"
    },
    "2764": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 28,
      "value": "0x54B13326DCE0F4CDD781A4F93A66E725CBDB6247CD4E6C00064C18B39D07BB35"
    },
    "2797": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4675,
        4693
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2798": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2800": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2801": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAFA"
    },
    "2804": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2805": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2806": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1709"
    },
    "2809": {
      "fn": "Wingbird.syncSenses",
      "jump": "i",
      "offset": [
        4655,
        4694
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2810": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2811": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2813": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2814": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2815": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2816": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "SUB",
      "path": "5"
    },
    "2817": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2818": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4655,
        4694
      ],
      "op": "LOG1",
      "path": "5"
    },
    "2819": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4392,
        4701
      ],
      "op": "POP",
      "path": "5"
    },
    "2820": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "POP",
      "path": "5"
    },
    "2821": {
      "fn": "Wingbird.syncSenses",
      "offset": [
        4284,
        4701
      ],
      "op": "POP",
      "path": "5"
    },
    "2822": {
      "fn": "Wingbird.syncSenses",
      "jump": "o",
      "offset": [
        4284,
        4701
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2823": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        659,
        942
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2824": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        757,
        760
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 29,
      "value": "0x3"
    },
    "2826": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        757,
        760
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2827": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2829": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2830": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2839": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2840": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        747,
        751
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "2841": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2843": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2844": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "ADD",
      "path": "5"
    },
    "2845": {
      "op": "MSTORE"
    },
    "2846": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        728
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "op": "SUB"
    },
    "2887": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        738
      ],
      "op": "AND",
      "path": "5"
    },
    "2888": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        738
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2889": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        738
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "2894": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        738
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2900": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2902": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2903": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2904": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2905": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "SUB",
      "path": "5"
    },
    "2906": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2907": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2908": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "GAS",
      "path": "5"
    },
    "2909": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "2910": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2911": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2912": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2913": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB6E"
    },
    "2916": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2917": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2918": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2920": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2921": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2922": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2923": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2925": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2926": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2927": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "POP",
      "path": "5"
    },
    "2928": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "POP",
      "path": "5"
    },
    "2929": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "POP",
      "path": "5"
    },
    "2930": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "POP",
      "path": "5"
    },
    "2931": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2933": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2934": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2935": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2937": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "NOT",
      "path": "5"
    },
    "2938": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2940": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2941": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "ADD",
      "path": "5"
    },
    "2942": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "AND",
      "path": "5"
    },
    "2943": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2944": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "ADD",
      "path": "5"
    },
    "2945": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2946": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2948": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2949": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "POP",
      "path": "5"
    },
    "2950": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2951": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "ADD",
      "path": "5"
    },
    "2952": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2953": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB92"
    },
    "2956": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2957": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2958": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x171C"
    },
    "2961": {
      "fn": "Wingbird.getRandomNumber",
      "jump": "i",
      "offset": [
        724,
        753
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2962": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        753
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2963": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        760
      ],
      "op": "LT",
      "path": "5"
    },
    "2964": {
      "branch": 55,
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        724,
        760
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2965": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBF4"
    },
    "2968": {
      "branch": 55,
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2969": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2971": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2972": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2980": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2983": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2985": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2986": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "ADD",
      "path": "5"
    },
    "2987": {
      "op": "MSTORE"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2992": {
      "op": "DUP3"
    },
    "2993": {
      "op": "ADD"
    },
    "2994": {
      "op": "MSTORE"
    },
    "2995": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3030": {
      "op": "DUP3"
    },
    "3031": {
      "op": "ADD"
    },
    "3032": {
      "op": "MSTORE"
    },
    "3033": {
      "op": "PUSH11",
      "value": "0x1DDA5D1A0819985D58D95D"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "3047": {
      "op": "SHL"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3050": {
      "op": "DUP3"
    },
    "3051": {
      "op": "ADD"
    },
    "3052": {
      "op": "MSTORE"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3055": {
      "op": "ADD"
    },
    "3056": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x561"
    },
    "3059": {
      "op": "JUMP"
    },
    "3060": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        703,
        829
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3061": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        839,
        856
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3063": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        859,
        890
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC04"
    },
    "3066": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        877,
        884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3068": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        877,
        884
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3069": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        886,
        889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3071": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        886,
        889
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3072": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        859,
        876
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF18"
    },
    "3075": {
      "fn": "Wingbird.getRandomNumber",
      "jump": "i",
      "offset": [
        859,
        890
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3076": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        859,
        890
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3077": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        839,
        890
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3078": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        839,
        890
      ],
      "op": "POP",
      "path": "5"
    },
    "3079": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 30,
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "3112": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        925,
        934
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3113": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3115": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3116": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC37"
    },
    "3119": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3120": {
      "op": "DUP2"
    },
    "3121": {
      "op": "MSTORE"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3124": {
      "op": "ADD"
    },
    "3125": {
      "op": "SWAP1"
    },
    "3126": {
      "op": "JUMP"
    },
    "3127": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3128": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3130": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3131": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3132": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3133": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "SUB",
      "path": "5"
    },
    "3134": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3135": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        905,
        935
      ],
      "op": "LOG1",
      "path": "5"
    },
    "3136": {
      "fn": "Wingbird.getRandomNumber",
      "offset": [
        693,
        942
      ],
      "op": "POP",
      "path": "5"
    },
    "3137": {
      "fn": "Wingbird.getRandomNumber",
      "jump": "o",
      "offset": [
        659,
        942
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3138": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5932,
        6108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3139": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5994,
        6001
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 31
    },
    "3140": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6005,
        6007
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3142": {
      "branch": 56,
      "fn": "Wingbird.giveHonors",
      "offset": [
        5994,
        6007
      ],
      "op": "EQ",
      "path": "5"
    },
    "3143": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5986,
        6008
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4F"
    },
    "3146": {
      "branch": 56,
      "fn": "Wingbird.giveHonors",
      "offset": [
        5986,
        6008
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3147": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5986,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3149": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5986,
        6008
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3150": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5986,
        6008
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3151": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        5986,
        6008
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3152": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6052,
        6062
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 32
    },
    "3153": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3155": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3156": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3157": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3158": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6051
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "3160": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3162": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3163": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3165": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3166": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3167": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6063
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3168": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC6B"
    },
    "3171": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3172": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6066,
        6068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3174": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6066,
        6068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3175": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x174B"
    },
    "3178": {
      "fn": "Wingbird.giveHonors",
      "jump": "i",
      "offset": [
        6042,
        6068
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3179": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6042,
        6068
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3180": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6028,
        6038
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3181": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3183": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3184": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3185": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3186": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6027
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "3188": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3190": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3191": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3192": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3193": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3195": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3196": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3197": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3198": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6039
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3199": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6068
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3200": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3201": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6068
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3202": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6018,
        6068
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3203": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6083,
        6101
      ],
      "op": "MLOAD",
      "path": "5",
      "statement": 33
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "DUP2"
    },
    "3206": {
      "op": "MSTORE"
    },
    "3207": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6083,
        6101
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x89E69B6FA2D69C7EB45B6AF3918DBAA99E08CC13755F03EAD1BE356D699558D2"
    },
    "3240": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6083,
        6101
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "fn": "Wingbird.giveHonors",
      "offset": [
        6083,
        6101
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC37"
    },
    "3245": {
      "op": "JUMP"
    },
    "3246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3247": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3249": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "op": "SUB"
    },
    "3258": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3259": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3260": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3261": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD08"
    },
    "3264": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3274": {
      "op": "SHL"
    },
    "3275": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3276": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3279": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3281": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3282": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3283": {
      "op": "DUP2"
    },
    "3284": {
      "op": "SWAP1"
    },
    "3285": {
      "op": "MSTORE"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3288": {
      "op": "DUP3"
    },
    "3289": {
      "op": "ADD"
    },
    "3290": {
      "op": "MSTORE"
    },
    "3291": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3326": {
      "op": "DUP3"
    },
    "3327": {
      "op": "ADD"
    },
    "3328": {
      "op": "MSTORE"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3331": {
      "op": "ADD"
    },
    "3332": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "3335": {
      "op": "JUMP"
    },
    "3336": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "SUB"
    },
    "3345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 34
    },
    "3346": {
      "branch": 60,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "3347": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6D"
    },
    "3350": {
      "branch": 60,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3351": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3353": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3360": {
      "op": "SHL"
    },
    "3361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3365": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3367": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3374": {
      "op": "DUP3"
    },
    "3375": {
      "op": "ADD"
    },
    "3376": {
      "op": "MSTORE"
    },
    "3377": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3412": {
      "op": "DUP3"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "op": "MSTORE"
    },
    "3415": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3427": {
      "op": "DUP3"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "3436": {
      "op": "JUMP"
    },
    "3437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0x2CE"
    },
    "3441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7F"
    },
    "3445": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3446": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3594,
        3814
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3447": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3690,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 36,
      "value": "0x64"
    },
    "3449": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3679,
        3686
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3450": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3679,
        3693
      ],
      "op": "LT",
      "path": "5"
    },
    "3451": {
      "branch": 57,
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3679,
        3693
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3452": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC7"
    },
    "3455": {
      "branch": 57,
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3456": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3458": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3465": {
      "op": "SHL"
    },
    "3466": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3467": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3470": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3472": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3473": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "ADD",
      "path": "5"
    },
    "3474": {
      "op": "DUP2"
    },
    "3475": {
      "op": "SWAP1"
    },
    "3476": {
      "op": "MSTORE"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3479": {
      "op": "DUP3"
    },
    "3480": {
      "op": "ADD"
    },
    "3481": {
      "op": "MSTORE"
    },
    "3482": {
      "op": "PUSH32",
      "value": "0x546865204D696E696D756D20616D6F756E742073686F756C6420626520313030"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3517": {
      "op": "DUP3"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "MSTORE"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x561"
    },
    "3526": {
      "op": "JUMP"
    },
    "3527": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3671,
        3730
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3534": {
      "op": "SHL"
    },
    "3535": {
      "op": "SUB"
    },
    "3536": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 37
    },
    "3537": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "AND",
      "path": "5"
    },
    "3538": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3540": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3541": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3542": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3543": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3749
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "3545": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3547": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3548": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3549": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3550": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3552": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3553": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3554": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3555": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3756
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3556": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3766
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3557": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3766
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3558": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3740,
        3766
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3559": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 38
    },
    "3560": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3561": {
      "op": "SWAP3"
    },
    "3562": {
      "op": "DUP4"
    },
    "3563": {
      "op": "MSTORE"
    },
    "3564": {
      "op": "DUP3"
    },
    "3565": {
      "op": "ADD"
    },
    "3566": {
      "op": "DUP4"
    },
    "3567": {
      "op": "SWAP1"
    },
    "3568": {
      "op": "MSTORE"
    },
    "3569": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x2D570FBA1492852E40BFA341311A0467B1EBF0D0755E4E405F2F3BAC9C8A23E"
    },
    "3602": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3603": {
      "op": "ADD"
    },
    "3604": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3606": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3607": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3608": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3609": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "SUB",
      "path": "5"
    },
    "3610": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3611": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3781,
        3807
      ],
      "op": "LOG1",
      "path": "5"
    },
    "3612": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3594,
        3814
      ],
      "op": "POP",
      "path": "5"
    },
    "3613": {
      "fn": "Wingbird.giveInitialSeeds",
      "offset": [
        3594,
        3814
      ],
      "op": "POP",
      "path": "5"
    },
    "3614": {
      "fn": "Wingbird.giveInitialSeeds",
      "jump": "o",
      "offset": [
        3594,
        3814
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3615": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5495,
        5831
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3616": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5611,
        5615
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3618": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5611,
        5615
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3619": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5611,
        5615
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3620": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5659,
        5803
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3621": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5683,
        5689
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3622": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5683,
        5696
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3623": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5679,
        5680
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3624": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5679,
        5696
      ],
      "op": "LT",
      "path": "5"
    },
    "3625": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5659,
        5803
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3626": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5659,
        5803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE77"
    },
    "3629": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5659,
        5803
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3630": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5734,
        5746
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3637": {
      "op": "SHL"
    },
    "3638": {
      "op": "SUB"
    },
    "3639": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5746
      ],
      "op": "AND",
      "path": "5"
    },
    "3640": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5727
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3641": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5728,
        5729
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3642": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3643": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3644": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3645": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "LT",
      "path": "5"
    },
    "3646": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE49"
    },
    "3649": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3650": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE49"
    },
    "3653": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1762"
    },
    "3656": {
      "fn": "Wingbird.checkAddress",
      "jump": "i",
      "offset": [
        5721,
        5730
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3657": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3658": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3660": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "MUL",
      "path": "5"
    },
    "3661": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3663": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "ADD",
      "path": "5"
    },
    "3664": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "ADD",
      "path": "5"
    },
    "3665": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "op": "SUB"
    },
    "3674": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5746
      ],
      "op": "AND",
      "path": "5"
    },
    "3675": {
      "branch": 58,
      "fn": "Wingbird.checkAddress",
      "offset": [
        5721,
        5746
      ],
      "op": "EQ",
      "path": "5"
    },
    "3676": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5717,
        5793
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3677": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5717,
        5793
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE65"
    },
    "3680": {
      "branch": 58,
      "fn": "Wingbird.checkAddress",
      "offset": [
        5717,
        5793
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3681": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5774,
        5778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 39,
      "value": "0x1"
    },
    "3683": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5766,
        5778
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3684": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5766,
        5778
      ],
      "op": "POP",
      "path": "5"
    },
    "3685": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5717,
        5793
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3686": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 40
    },
    "3687": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE6F"
    },
    "3690": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3691": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1778"
    },
    "3694": {
      "fn": "Wingbird.checkAddress",
      "jump": "i",
      "offset": [
        5698,
        5701
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3695": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3696": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3697": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "POP",
      "path": "5"
    },
    "3698": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5698,
        5701
      ],
      "op": "POP",
      "path": "5"
    },
    "3699": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5659,
        5803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE24"
    },
    "3702": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5659,
        5803
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3703": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5659,
        5803
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5819,
        5824
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 41
    },
    "3706": {
      "fn": "Wingbird.checkAddress",
      "offset": [
        5495,
        5831
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "fn": "Wingbird.checkAddress",
      "jump": "o",
      "offset": [
        5495,
        5831
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3711": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3712": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3714": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3715": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3722": {
      "op": "SHL"
    },
    "3723": {
      "op": "SUB"
    },
    "3724": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 42
    },
    "3725": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3726": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3733": {
      "op": "SHL"
    },
    "3734": {
      "op": "SUB"
    },
    "3735": {
      "op": "NOT"
    },
    "3736": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3737": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3738": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3739": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3740": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3741": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3742": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x40"
    },
    "3744": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3745": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3746": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3747": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3748": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3749": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3750": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3751": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3752": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3785": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3786": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3787": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3788": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3789": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3790": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3791": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        948,
        1151
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3792": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1086,
        1087
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 44,
      "value": "0x0"
    },
    "3794": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1072,
        1083
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3795": {
      "branch": 59,
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1072,
        1087
      ],
      "op": "GT",
      "path": "5"
    },
    "3796": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF12"
    },
    "3799": {
      "branch": 59,
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3800": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3802": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3809": {
      "op": "SHL"
    },
    "3810": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3811": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3814": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3816": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3817": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "ADD",
      "path": "5"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3823": {
      "op": "DUP3"
    },
    "3824": {
      "op": "ADD"
    },
    "3825": {
      "op": "MSTORE"
    },
    "3826": {
      "op": "PUSH16",
      "value": "0x1C985B991BDB481B9BDD08199BDD5B99"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3845": {
      "op": "SHL"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3848": {
      "op": "DUP3"
    },
    "3849": {
      "op": "ADD"
    },
    "3850": {
      "op": "MSTORE"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x561"
    },
    "3857": {
      "op": "JUMP"
    },
    "3858": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1064,
        1108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3859": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1118,
        1130
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 45,
      "value": "0x4"
    },
    "3861": {
      "fn": "Wingbird.fulfillRandomness",
      "offset": [
        1118,
        1144
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3862": {
      "op": "POP"
    },
    "3863": {
      "fn": "Wingbird.fulfillRandomness",
      "jump": "o",
      "offset": [
        948,
        1151
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3864": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7731,
        8751
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3865": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7808,
        7825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3867": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7837
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 46,
      "value": "0x0"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3906": {
      "op": "SHL"
    },
    "3907": {
      "op": "SUB"
    },
    "3908": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7853
      ],
      "op": "AND",
      "path": "2"
    },
    "3909": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7853
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4000AEA0"
    },
    "3914": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7854,
        7868
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "3947": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7870,
        7874
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3948": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7887,
        7895
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3949": {
      "offset": [
        6588,
        6589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3951": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3953": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3954": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3956": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "ADD",
      "path": "2"
    },
    "3957": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF88"
    },
    "3960": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3961": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3962": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3963": {
      "op": "SWAP2"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "MSTORE"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3968": {
      "op": "DUP3"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "op": "MSTORE"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "SWAP1"
    },
    "3975": {
      "op": "JUMP"
    },
    "3976": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3977": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3979": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3980": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3982": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3983": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3984": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SUB",
      "path": "2"
    },
    "3985": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SUB",
      "path": "2"
    },
    "3986": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3987": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3988": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3989": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3991": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7876,
        7919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3992": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3994": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3995": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3996": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4001": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "AND",
      "path": "2"
    },
    "4002": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4004": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SHL",
      "path": "2"
    },
    "4005": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4006": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4007": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4009": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "2"
    },
    "4010": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB5"
    },
    "4013": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4014": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4015": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4016": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4017": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1793"
    },
    "4020": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4021": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4022": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4024": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4026": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4027": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4028": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4029": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SUB",
      "path": "2"
    },
    "4030": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4031": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4033": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4034": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "GAS",
      "path": "2"
    },
    "4035": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "CALL",
      "path": "2"
    },
    "4036": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4037": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4038": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4039": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFD4"
    },
    "4042": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4043": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4044": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4046": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4047": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4048": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4049": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4051": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4052": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "2"
    },
    "4054": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "2"
    },
    "4055": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "2"
    },
    "4056": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "2"
    },
    "4057": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4059": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4060": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4061": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4063": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "NOT",
      "path": "2"
    },
    "4064": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4066": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4067": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "2"
    },
    "4068": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "AND",
      "path": "2"
    },
    "4069": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4070": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "2"
    },
    "4071": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4072": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4074": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4075": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "POP",
      "path": "2"
    },
    "4076": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4077": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "ADD",
      "path": "2"
    },
    "4078": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4079": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF8"
    },
    "4082": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4083": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4084": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17C3"
    },
    "4087": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4088": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7833,
        7920
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8151,
        8166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4092": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4093": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4094": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4095": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4097": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4099": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4100": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4101": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4102": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4104": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4105": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4106": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4107": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8234,
        8250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4108": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 47
    },
    "4109": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4110": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4111": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4112": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "3"
    },
    "4113": {
      "op": "DUP10"
    },
    "4114": {
      "op": "SWAP1"
    },
    "4115": {
      "op": "MSTORE"
    },
    "4116": {
      "op": "DUP1"
    },
    "4117": {
      "op": "DUP4"
    },
    "4118": {
      "op": "ADD"
    },
    "4119": {
      "op": "DUP7"
    },
    "4120": {
      "op": "SWAP1"
    },
    "4121": {
      "op": "MSTORE"
    },
    "4122": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8227,
        8231
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4125": {
      "op": "DUP3"
    },
    "4126": {
      "op": "ADD"
    },
    "4127": {
      "op": "MSTORE"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4130": {
      "op": "DUP1"
    },
    "4131": {
      "op": "DUP3"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "op": "DUP4"
    },
    "4134": {
      "op": "SWAP1"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4137": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4138": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4139": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4140": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SUB",
      "path": "3"
    },
    "4141": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4142": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4143": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "3"
    },
    "4144": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4145": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4148": {
      "op": "SWAP1"
    },
    "4149": {
      "op": "SWAP2"
    },
    "4150": {
      "op": "ADD"
    },
    "4151": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4152": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4153": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4154": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4155": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4156": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4157": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4158": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "ADD",
      "path": "3"
    },
    "4159": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4160": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4161": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4162": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4163": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 48
    },
    "4164": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4166": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4167": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4170": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8697
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4171": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1053"
    },
    "4174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4175": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E0"
    },
    "4178": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8681,
        8701
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4179": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8681,
        8701
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4180": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4182": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4183": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4184": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4185": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8668
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4187": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4189": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4190": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4192": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4193": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8678
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4194": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8662,
        8701
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4195": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8714,
        8746
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 49,
      "value": "0x1093"
    },
    "4198": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8669,
        8677
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4199": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8745
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4200": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 50,
      "value": "0x40"
    },
    "4202": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4203": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4204": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4206": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4207": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4208": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "3"
    },
    "4209": {
      "op": "SWAP5"
    },
    "4210": {
      "op": "SWAP1"
    },
    "4211": {
      "op": "SWAP5"
    },
    "4212": {
      "op": "MSTORE"
    },
    "4213": {
      "op": "DUP1"
    },
    "4214": {
      "op": "DUP3"
    },
    "4215": {
      "op": "ADD"
    },
    "4216": {
      "op": "SWAP3"
    },
    "4217": {
      "op": "SWAP1"
    },
    "4218": {
      "op": "SWAP3"
    },
    "4219": {
      "op": "MSTORE"
    },
    "4220": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4221": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4222": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4223": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4224": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SUB",
      "path": "3"
    },
    "4225": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4226": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "3"
    },
    "4227": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4228": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4231": {
      "op": "SWAP1"
    },
    "4232": {
      "op": "SWAP3"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4235": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4236": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4237": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4238": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4239": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "ADD",
      "path": "3"
    },
    "4240": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4241": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4242": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1416,
        1582
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8714,
        8746
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8707,
        8746
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4245": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7731,
        8751
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4246": {
      "op": "POP"
    },
    "4247": {
      "op": "POP"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "op": "POP"
    },
    "4250": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7731,
        8751
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "DUP3"
    },
    "4253": {
      "op": "DUP1"
    },
    "4254": {
      "op": "SLOAD"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x10A7"
    },
    "4258": {
      "op": "SWAP1"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0x1669"
    },
    "4262": {
      "jump": "i",
      "op": "JUMP"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "SWAP1"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4272": {
      "op": "KECCAK256"
    },
    "4273": {
      "op": "SWAP1"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4276": {
      "op": "ADD"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4279": {
      "op": "SWAP1"
    },
    "4280": {
      "op": "DIV"
    },
    "4281": {
      "op": "DUP2"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "SWAP3"
    },
    "4284": {
      "op": "DUP3"
    },
    "4285": {
      "op": "PUSH2",
      "value": "0x10C9"
    },
    "4288": {
      "op": "JUMPI"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4291": {
      "op": "DUP6"
    },
    "4292": {
      "op": "SSTORE"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4296": {
      "op": "JUMP"
    },
    "4297": {
      "op": "JUMPDEST"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4301": {
      "op": "LT"
    },
    "4302": {
      "op": "PUSH2",
      "value": "0x10E2"
    },
    "4305": {
      "op": "JUMPI"
    },
    "4306": {
      "op": "DUP1"
    },
    "4307": {
      "op": "MLOAD"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4310": {
      "op": "NOT"
    },
    "4311": {
      "op": "AND"
    },
    "4312": {
      "op": "DUP4"
    },
    "4313": {
      "op": "DUP1"
    },
    "4314": {
      "op": "ADD"
    },
    "4315": {
      "op": "OR"
    },
    "4316": {
      "op": "DUP6"
    },
    "4317": {
      "op": "SSTORE"
    },
    "4318": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4321": {
      "op": "JUMP"
    },
    "4322": {
      "op": "JUMPDEST"
    },
    "4323": {
      "op": "DUP3"
    },
    "4324": {
      "op": "DUP1"
    },
    "4325": {
      "op": "ADD"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "op": "DUP6"
    },
    "4330": {
      "op": "SSTORE"
    },
    "4331": {
      "op": "DUP3"
    },
    "4332": {
      "op": "ISZERO"
    },
    "4333": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4336": {
      "op": "JUMPI"
    },
    "4337": {
      "op": "SWAP2"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "ADD"
    },
    "4340": {
      "op": "JUMPDEST"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "DUP2"
    },
    "4343": {
      "op": "GT"
    },
    "4344": {
      "op": "ISZERO"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4348": {
      "op": "JUMPI"
    },
    "4349": {
      "op": "DUP3"
    },
    "4350": {
      "op": "MLOAD"
    },
    "4351": {
      "op": "DUP3"
    },
    "4352": {
      "op": "SSTORE"
    },
    "4353": {
      "op": "SWAP2"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4356": {
      "op": "ADD"
    },
    "4357": {
      "op": "SWAP2"
    },
    "4358": {
      "op": "SWAP1"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4361": {
      "op": "ADD"
    },
    "4362": {
      "op": "SWAP1"
    },
    "4363": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4366": {
      "op": "JUMP"
    },
    "4367": {
      "op": "JUMPDEST"
    },
    "4368": {
      "op": "POP"
    },
    "4369": {
      "op": "PUSH2",
      "value": "0x111B"
    },
    "4372": {
      "op": "SWAP3"
    },
    "4373": {
      "op": "SWAP2"
    },
    "4374": {
      "op": "POP"
    },
    "4375": {
      "op": "PUSH2",
      "value": "0x1174"
    },
    "4378": {
      "jump": "i",
      "op": "JUMP"
    },
    "4379": {
      "op": "JUMPDEST"
    },
    "4380": {
      "op": "POP"
    },
    "4381": {
      "op": "SWAP1"
    },
    "4382": {
      "jump": "o",
      "op": "JUMP"
    },
    "4383": {
      "op": "JUMPDEST"
    },
    "4384": {
      "op": "DUP3"
    },
    "4385": {
      "op": "DUP1"
    },
    "4386": {
      "op": "SLOAD"
    },
    "4387": {
      "op": "DUP3"
    },
    "4388": {
      "op": "DUP3"
    },
    "4389": {
      "op": "SSTORE"
    },
    "4390": {
      "op": "SWAP1"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4398": {
      "op": "KECCAK256"
    },
    "4399": {
      "op": "SWAP1"
    },
    "4400": {
      "op": "DUP2"
    },
    "4401": {
      "op": "ADD"
    },
    "4402": {
      "op": "SWAP3"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "ISZERO"
    },
    "4405": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4408": {
      "op": "JUMPI"
    },
    "4409": {
      "op": "SWAP2"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4412": {
      "op": "MUL"
    },
    "4413": {
      "op": "DUP3"
    },
    "4414": {
      "op": "ADD"
    },
    "4415": {
      "op": "JUMPDEST"
    },
    "4416": {
      "op": "DUP3"
    },
    "4417": {
      "op": "DUP2"
    },
    "4418": {
      "op": "GT"
    },
    "4419": {
      "op": "ISZERO"
    },
    "4420": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4423": {
      "op": "JUMPI"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "MLOAD"
    },
    "4426": {
      "op": "DUP3"
    },
    "4427": {
      "op": "SLOAD"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4434": {
      "op": "SHL"
    },
    "4435": {
      "op": "SUB"
    },
    "4436": {
      "op": "NOT"
    },
    "4437": {
      "op": "AND"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4444": {
      "op": "SHL"
    },
    "4445": {
      "op": "SUB"
    },
    "4446": {
      "op": "SWAP1"
    },
    "4447": {
      "op": "SWAP2"
    },
    "4448": {
      "op": "AND"
    },
    "4449": {
      "op": "OR"
    },
    "4450": {
      "op": "DUP3"
    },
    "4451": {
      "op": "SSTORE"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4454": {
      "op": "SWAP1"
    },
    "4455": {
      "op": "SWAP3"
    },
    "4456": {
      "op": "ADD"
    },
    "4457": {
      "op": "SWAP2"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4460": {
      "op": "SWAP1"
    },
    "4461": {
      "op": "SWAP2"
    },
    "4462": {
      "op": "ADD"
    },
    "4463": {
      "op": "SWAP1"
    },
    "4464": {
      "op": "PUSH2",
      "value": "0x113F"
    },
    "4467": {
      "op": "JUMP"
    },
    "4468": {
      "op": "JUMPDEST"
    },
    "4469": {
      "op": "JUMPDEST"
    },
    "4470": {
      "op": "DUP1"
    },
    "4471": {
      "op": "DUP3"
    },
    "4472": {
      "op": "GT"
    },
    "4473": {
      "op": "ISZERO"
    },
    "4474": {
      "op": "PUSH2",
      "value": "0x111B"
    },
    "4477": {
      "op": "JUMPI"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4480": {
      "op": "DUP2"
    },
    "4481": {
      "op": "SSTORE"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4484": {
      "op": "ADD"
    },
    "4485": {
      "op": "PUSH2",
      "value": "0x1175"
    },
    "4488": {
      "op": "JUMP"
    },
    "4489": {
      "op": "JUMPDEST"
    },
    "4490": {
      "op": "DUP1"
    },
    "4491": {
      "op": "CALLDATALOAD"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4498": {
      "op": "SHL"
    },
    "4499": {
      "op": "SUB"
    },
    "4500": {
      "op": "DUP2"
    },
    "4501": {
      "op": "AND"
    },
    "4502": {
      "op": "DUP2"
    },
    "4503": {
      "op": "EQ"
    },
    "4504": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "4507": {
      "op": "JUMPI"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4510": {
      "op": "DUP1"
    },
    "4511": {
      "op": "REVERT"
    },
    "4512": {
      "op": "JUMPDEST"
    },
    "4513": {
      "op": "SWAP2"
    },
    "4514": {
      "op": "SWAP1"
    },
    "4515": {
      "op": "POP"
    },
    "4516": {
      "jump": "o",
      "op": "JUMP"
    },
    "4517": {
      "op": "JUMPDEST"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4522": {
      "op": "DUP3"
    },
    "4523": {
      "op": "DUP5"
    },
    "4524": {
      "op": "SUB"
    },
    "4525": {
      "op": "SLT"
    },
    "4526": {
      "op": "ISZERO"
    },
    "4527": {
      "op": "PUSH2",
      "value": "0x11B7"
    },
    "4530": {
      "op": "JUMPI"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4533": {
      "op": "DUP1"
    },
    "4534": {
      "op": "REVERT"
    },
    "4535": {
      "op": "JUMPDEST"
    },
    "4536": {
      "op": "PUSH2",
      "value": "0x11C0"
    },
    "4539": {
      "op": "DUP3"
    },
    "4540": {
      "op": "PUSH2",
      "value": "0x1189"
    },
    "4543": {
      "jump": "i",
      "op": "JUMP"
    },
    "4544": {
      "op": "JUMPDEST"
    },
    "4545": {
      "op": "SWAP4"
    },
    "4546": {
      "op": "SWAP3"
    },
    "4547": {
      "op": "POP"
    },
    "4548": {
      "op": "POP"
    },
    "4549": {
      "op": "POP"
    },
    "4550": {
      "jump": "o",
      "op": "JUMP"
    },
    "4551": {
      "op": "JUMPDEST"
    },
    "4552": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4559": {
      "op": "SHL"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4562": {
      "op": "MSTORE"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4572": {
      "op": "REVERT"
    },
    "4573": {
      "op": "JUMPDEST"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4576": {
      "op": "MLOAD"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4579": {
      "op": "DUP3"
    },
    "4580": {
      "op": "ADD"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4583": {
      "op": "NOT"
    },
    "4584": {
      "op": "AND"
    },
    "4585": {
      "op": "DUP2"
    },
    "4586": {
      "op": "ADD"
    },
    "4587": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4596": {
      "op": "DUP2"
    },
    "4597": {
      "op": "GT"
    },
    "4598": {
      "op": "DUP3"
    },
    "4599": {
      "op": "DUP3"
    },
    "4600": {
      "op": "LT"
    },
    "4601": {
      "op": "OR"
    },
    "4602": {
      "op": "ISZERO"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4606": {
      "op": "JUMPI"
    },
    "4607": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4610": {
      "op": "PUSH2",
      "value": "0x11C7"
    },
    "4613": {
      "jump": "i",
      "op": "JUMP"
    },
    "4614": {
      "op": "JUMPDEST"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4617": {
      "op": "MSTORE"
    },
    "4618": {
      "op": "SWAP2"
    },
    "4619": {
      "op": "SWAP1"
    },
    "4620": {
      "op": "POP"
    },
    "4621": {
      "jump": "o",
      "op": "JUMP"
    },
    "4622": {
      "op": "JUMPDEST"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4625": {
      "op": "DUP3"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4628": {
      "op": "DUP4"
    },
    "4629": {
      "op": "ADD"
    },
    "4630": {
      "op": "SLT"
    },
    "4631": {
      "op": "PUSH2",
      "value": "0x121F"
    },
    "4634": {
      "op": "JUMPI"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4637": {
      "op": "DUP1"
    },
    "4638": {
      "op": "REVERT"
    },
    "4639": {
      "op": "JUMPDEST"
    },
    "4640": {
      "op": "DUP2"
    },
    "4641": {
      "op": "CALLDATALOAD"
    },
    "4642": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4651": {
      "op": "DUP2"
    },
    "4652": {
      "op": "GT"
    },
    "4653": {
      "op": "ISZERO"
    },
    "4654": {
      "op": "PUSH2",
      "value": "0x1239"
    },
    "4657": {
      "op": "JUMPI"
    },
    "4658": {
      "op": "PUSH2",
      "value": "0x1239"
    },
    "4661": {
      "op": "PUSH2",
      "value": "0x11C7"
    },
    "4664": {
      "jump": "i",
      "op": "JUMP"
    },
    "4665": {
      "op": "JUMPDEST"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x124C"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4671": {
      "op": "DUP3"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4675": {
      "op": "NOT"
    },
    "4676": {
      "op": "AND"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "op": "PUSH2",
      "value": "0x11DD"
    },
    "4683": {
      "jump": "i",
      "op": "JUMP"
    },
    "4684": {
      "op": "JUMPDEST"
    },
    "4685": {
      "op": "DUP2"
    },
    "4686": {
      "op": "DUP2"
    },
    "4687": {
      "op": "MSTORE"
    },
    "4688": {
      "op": "DUP5"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4691": {
      "op": "DUP4"
    },
    "4692": {
      "op": "DUP7"
    },
    "4693": {
      "op": "ADD"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "GT"
    },
    "4696": {
      "op": "ISZERO"
    },
    "4697": {
      "op": "PUSH2",
      "value": "0x1261"
    },
    "4700": {
      "op": "JUMPI"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4703": {
      "op": "DUP1"
    },
    "4704": {
      "op": "REVERT"
    },
    "4705": {
      "op": "JUMPDEST"
    },
    "4706": {
      "op": "DUP2"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4709": {
      "op": "DUP6"
    },
    "4710": {
      "op": "ADD"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4713": {
      "op": "DUP4"
    },
    "4714": {
      "op": "ADD"
    },
    "4715": {
      "op": "CALLDATACOPY"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4718": {
      "op": "SWAP2"
    },
    "4719": {
      "op": "DUP2"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4723": {
      "op": "ADD"
    },
    "4724": {
      "op": "SWAP2"
    },
    "4725": {
      "op": "SWAP1"
    },
    "4726": {
      "op": "SWAP2"
    },
    "4727": {
      "op": "MSTORE"
    },
    "4728": {
      "op": "SWAP4"
    },
    "4729": {
      "op": "SWAP3"
    },
    "4730": {
      "op": "POP"
    },
    "4731": {
      "op": "POP"
    },
    "4732": {
      "op": "POP"
    },
    "4733": {
      "jump": "o",
      "op": "JUMP"
    },
    "4734": {
      "op": "JUMPDEST"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4739": {
      "op": "DUP3"
    },
    "4740": {
      "op": "DUP5"
    },
    "4741": {
      "op": "SUB"
    },
    "4742": {
      "op": "SLT"
    },
    "4743": {
      "op": "ISZERO"
    },
    "4744": {
      "op": "PUSH2",
      "value": "0x1290"
    },
    "4747": {
      "op": "JUMPI"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4750": {
      "op": "DUP1"
    },
    "4751": {
      "op": "REVERT"
    },
    "4752": {
      "op": "JUMPDEST"
    },
    "4753": {
      "op": "DUP2"
    },
    "4754": {
      "op": "CALLDATALOAD"
    },
    "4755": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4764": {
      "op": "DUP2"
    },
    "4765": {
      "op": "GT"
    },
    "4766": {
      "op": "ISZERO"
    },
    "4767": {
      "op": "PUSH2",
      "value": "0x12A7"
    },
    "4770": {
      "op": "JUMPI"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4773": {
      "op": "DUP1"
    },
    "4774": {
      "op": "REVERT"
    },
    "4775": {
      "op": "JUMPDEST"
    },
    "4776": {
      "op": "PUSH2",
      "value": "0x1093"
    },
    "4779": {
      "op": "DUP5"
    },
    "4780": {
      "op": "DUP3"
    },
    "4781": {
      "op": "DUP6"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "4786": {
      "jump": "i",
      "op": "JUMP"
    },
    "4787": {
      "op": "JUMPDEST"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4790": {
      "op": "JUMPDEST"
    },
    "4791": {
      "op": "DUP4"
    },
    "4792": {
      "op": "DUP2"
    },
    "4793": {
      "op": "LT"
    },
    "4794": {
      "op": "ISZERO"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x12CE"
    },
    "4798": {
      "op": "JUMPI"
    },
    "4799": {
      "op": "DUP2"
    },
    "4800": {
      "op": "DUP2"
    },
    "4801": {
      "op": "ADD"
    },
    "4802": {
      "op": "MLOAD"
    },
    "4803": {
      "op": "DUP4"
    },
    "4804": {
      "op": "DUP3"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "op": "MSTORE"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4809": {
      "op": "ADD"
    },
    "4810": {
      "op": "PUSH2",
      "value": "0x12B6"
    },
    "4813": {
      "op": "JUMP"
    },
    "4814": {
      "op": "JUMPDEST"
    },
    "4815": {
      "op": "DUP4"
    },
    "4816": {
      "op": "DUP2"
    },
    "4817": {
      "op": "GT"
    },
    "4818": {
      "op": "ISZERO"
    },
    "4819": {
      "op": "PUSH2",
      "value": "0x12DD"
    },
    "4822": {
      "op": "JUMPI"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4825": {
      "op": "DUP5"
    },
    "4826": {
      "op": "DUP5"
    },
    "4827": {
      "op": "ADD"
    },
    "4828": {
      "op": "MSTORE"
    },
    "4829": {
      "op": "JUMPDEST"
    },
    "4830": {
      "op": "POP"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "POP"
    },
    "4834": {
      "jump": "o",
      "op": "JUMP"
    },
    "4835": {
      "op": "JUMPDEST"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4838": {
      "op": "DUP2"
    },
    "4839": {
      "op": "MLOAD"
    },
    "4840": {
      "op": "DUP1"
    },
    "4841": {
      "op": "DUP5"
    },
    "4842": {
      "op": "MSTORE"
    },
    "4843": {
      "op": "PUSH2",
      "value": "0x12FB"
    },
    "4846": {
      "op": "DUP2"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4849": {
      "op": "DUP7"
    },
    "4850": {
      "op": "ADD"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4853": {
      "op": "DUP7"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "op": "PUSH2",
      "value": "0x12B3"
    },
    "4858": {
      "jump": "i",
      "op": "JUMP"
    },
    "4859": {
      "op": "JUMPDEST"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4862": {
      "op": "ADD"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4865": {
      "op": "NOT"
    },
    "4866": {
      "op": "AND"
    },
    "4867": {
      "op": "SWAP3"
    },
    "4868": {
      "op": "SWAP1"
    },
    "4869": {
      "op": "SWAP3"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4873": {
      "op": "ADD"
    },
    "4874": {
      "op": "SWAP3"
    },
    "4875": {
      "op": "SWAP2"
    },
    "4876": {
      "op": "POP"
    },
    "4877": {
      "op": "POP"
    },
    "4878": {
      "jump": "o",
      "op": "JUMP"
    },
    "4879": {
      "op": "JUMPDEST"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4884": {
      "op": "DUP1"
    },
    "4885": {
      "op": "DUP4"
    },
    "4886": {
      "op": "MSTORE"
    },
    "4887": {
      "op": "DUP4"
    },
    "4888": {
      "op": "MLOAD"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4891": {
      "op": "DUP3"
    },
    "4892": {
      "op": "DUP6"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "MSTORE"
    },
    "4895": {
      "op": "PUSH2",
      "value": "0x132B"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4900": {
      "op": "DUP6"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "DUP3"
    },
    "4903": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "4906": {
      "jump": "i",
      "op": "JUMP"
    },
    "4907": {
      "op": "JUMPDEST"
    },
    "4908": {
      "op": "DUP6"
    },
    "4909": {
      "op": "DUP4"
    },
    "4910": {
      "op": "ADD"
    },
    "4911": {
      "op": "MLOAD"
    },
    "4912": {
      "op": "DUP6"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "SUB"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4917": {
      "op": "NOT"
    },
    "4918": {
      "op": "ADD"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4921": {
      "op": "DUP8"
    },
    "4922": {
      "op": "ADD"
    },
    "4923": {
      "op": "MSTORE"
    },
    "4924": {
      "op": "DUP1"
    },
    "4925": {
      "op": "MLOAD"
    },
    "4926": {
      "op": "DUP1"
    },
    "4927": {
      "op": "DUP4"
    },
    "4928": {
      "op": "MSTORE"
    },
    "4929": {
      "op": "SWAP1"
    },
    "4930": {
      "op": "DUP5"
    },
    "4931": {
      "op": "ADD"
    },
    "4932": {
      "op": "SWAP3"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4936": {
      "op": "SWAP2"
    },
    "4937": {
      "op": "DUP5"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "SWAP1"
    },
    "4940": {
      "op": "JUMPDEST"
    },
    "4941": {
      "op": "DUP1"
    },
    "4942": {
      "op": "DUP4"
    },
    "4943": {
      "op": "LT"
    },
    "4944": {
      "op": "ISZERO"
    },
    "4945": {
      "op": "PUSH2",
      "value": "0x1375"
    },
    "4948": {
      "op": "JUMPI"
    },
    "4949": {
      "op": "DUP4"
    },
    "4950": {
      "op": "MLOAD"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4957": {
      "op": "SHL"
    },
    "4958": {
      "op": "SUB"
    },
    "4959": {
      "op": "AND"
    },
    "4960": {
      "op": "DUP3"
    },
    "4961": {
      "op": "MSTORE"
    },
    "4962": {
      "op": "SWAP3"
    },
    "4963": {
      "op": "DUP5"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "SWAP3"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "SWAP3"
    },
    "4969": {
      "op": "SWAP1"
    },
    "4970": {
      "op": "SWAP3"
    },
    "4971": {
      "op": "ADD"
    },
    "4972": {
      "op": "SWAP2"
    },
    "4973": {
      "op": "SWAP1"
    },
    "4974": {
      "op": "DUP5"
    },
    "4975": {
      "op": "ADD"
    },
    "4976": {
      "op": "SWAP1"
    },
    "4977": {
      "op": "PUSH2",
      "value": "0x134C"
    },
    "4980": {
      "op": "JUMP"
    },
    "4981": {
      "op": "JUMPDEST"
    },
    "4982": {
      "op": "POP"
    },
    "4983": {
      "op": "SWAP7"
    },
    "4984": {
      "op": "SWAP6"
    },
    "4985": {
      "op": "POP"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "op": "POP"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "POP"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "jump": "o",
      "op": "JUMP"
    },
    "4992": {
      "op": "JUMPDEST"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4995": {
      "op": "DUP1"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4998": {
      "op": "DUP1"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5001": {
      "op": "DUP1"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5004": {
      "op": "DUP8"
    },
    "5005": {
      "op": "DUP10"
    },
    "5006": {
      "op": "SUB"
    },
    "5007": {
      "op": "SLT"
    },
    "5008": {
      "op": "ISZERO"
    },
    "5009": {
      "op": "PUSH2",
      "value": "0x1399"
    },
    "5012": {
      "op": "JUMPI"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5015": {
      "op": "DUP1"
    },
    "5016": {
      "op": "REVERT"
    },
    "5017": {
      "op": "JUMPDEST"
    },
    "5018": {
      "op": "DUP7"
    },
    "5019": {
      "op": "CALLDATALOAD"
    },
    "5020": {
      "op": "SWAP6"
    },
    "5021": {
      "op": "POP"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5024": {
      "op": "DUP8"
    },
    "5025": {
      "op": "ADD"
    },
    "5026": {
      "op": "CALLDATALOAD"
    },
    "5027": {
      "op": "SWAP5"
    },
    "5028": {
      "op": "POP"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5031": {
      "op": "DUP8"
    },
    "5032": {
      "op": "ADD"
    },
    "5033": {
      "op": "CALLDATALOAD"
    },
    "5034": {
      "op": "SWAP4"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5038": {
      "op": "DUP8"
    },
    "5039": {
      "op": "ADD"
    },
    "5040": {
      "op": "CALLDATALOAD"
    },
    "5041": {
      "op": "SWAP3"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5045": {
      "op": "DUP8"
    },
    "5046": {
      "op": "ADD"
    },
    "5047": {
      "op": "CALLDATALOAD"
    },
    "5048": {
      "op": "SWAP2"
    },
    "5049": {
      "op": "POP"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x13C5"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5055": {
      "op": "DUP9"
    },
    "5056": {
      "op": "ADD"
    },
    "5057": {
      "op": "PUSH2",
      "value": "0x1189"
    },
    "5060": {
      "jump": "i",
      "op": "JUMP"
    },
    "5061": {
      "op": "JUMPDEST"
    },
    "5062": {
      "op": "SWAP1"
    },
    "5063": {
      "op": "POP"
    },
    "5064": {
      "op": "SWAP3"
    },
    "5065": {
      "op": "SWAP6"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "SWAP3"
    },
    "5068": {
      "op": "SWAP6"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "op": "SWAP3"
    },
    "5071": {
      "op": "SWAP6"
    },
    "5072": {
      "jump": "o",
      "op": "JUMP"
    },
    "5073": {
      "op": "JUMPDEST"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5076": {
      "op": "DUP1"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5079": {
      "op": "DUP4"
    },
    "5080": {
      "op": "DUP6"
    },
    "5081": {
      "op": "SUB"
    },
    "5082": {
      "op": "SLT"
    },
    "5083": {
      "op": "ISZERO"
    },
    "5084": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5087": {
      "op": "JUMPI"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5090": {
      "op": "DUP1"
    },
    "5091": {
      "op": "REVERT"
    },
    "5092": {
      "op": "JUMPDEST"
    },
    "5093": {
      "op": "DUP3"
    },
    "5094": {
      "op": "CALLDATALOAD"
    },
    "5095": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5104": {
      "op": "DUP1"
    },
    "5105": {
      "op": "DUP3"
    },
    "5106": {
      "op": "GT"
    },
    "5107": {
      "op": "ISZERO"
    },
    "5108": {
      "op": "PUSH2",
      "value": "0x13FC"
    },
    "5111": {
      "op": "JUMPI"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5114": {
      "op": "DUP1"
    },
    "5115": {
      "op": "REVERT"
    },
    "5116": {
      "op": "JUMPDEST"
    },
    "5117": {
      "op": "PUSH2",
      "value": "0x1408"
    },
    "5120": {
      "op": "DUP7"
    },
    "5121": {
      "op": "DUP4"
    },
    "5122": {
      "op": "DUP8"
    },
    "5123": {
      "op": "ADD"
    },
    "5124": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "5127": {
      "jump": "i",
      "op": "JUMP"
    },
    "5128": {
      "op": "JUMPDEST"
    },
    "5129": {
      "op": "SWAP4"
    },
    "5130": {
      "op": "POP"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5133": {
      "op": "DUP6"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "CALLDATALOAD"
    },
    "5136": {
      "op": "SWAP2"
    },
    "5137": {
      "op": "POP"
    },
    "5138": {
      "op": "DUP1"
    },
    "5139": {
      "op": "DUP3"
    },
    "5140": {
      "op": "GT"
    },
    "5141": {
      "op": "ISZERO"
    },
    "5142": {
      "op": "PUSH2",
      "value": "0x141E"
    },
    "5145": {
      "op": "JUMPI"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5148": {
      "op": "DUP1"
    },
    "5149": {
      "op": "REVERT"
    },
    "5150": {
      "op": "JUMPDEST"
    },
    "5151": {
      "op": "POP"
    },
    "5152": {
      "op": "PUSH2",
      "value": "0x142B"
    },
    "5155": {
      "op": "DUP6"
    },
    "5156": {
      "op": "DUP3"
    },
    "5157": {
      "op": "DUP7"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "5162": {
      "jump": "i",
      "op": "JUMP"
    },
    "5163": {
      "op": "JUMPDEST"
    },
    "5164": {
      "op": "SWAP2"
    },
    "5165": {
      "op": "POP"
    },
    "5166": {
      "op": "POP"
    },
    "5167": {
      "op": "SWAP3"
    },
    "5168": {
      "op": "POP"
    },
    "5169": {
      "op": "SWAP3"
    },
    "5170": {
      "op": "SWAP1"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "jump": "o",
      "op": "JUMP"
    },
    "5173": {
      "op": "JUMPDEST"
    },
    "5174": {
      "op": "DUP1"
    },
    "5175": {
      "op": "ISZERO"
    },
    "5176": {
      "op": "ISZERO"
    },
    "5177": {
      "op": "DUP2"
    },
    "5178": {
      "op": "EQ"
    },
    "5179": {
      "op": "PUSH2",
      "value": "0x2CE"
    },
    "5182": {
      "op": "JUMPI"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5185": {
      "op": "DUP1"
    },
    "5186": {
      "op": "REVERT"
    },
    "5187": {
      "op": "JUMPDEST"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5190": {
      "op": "DUP3"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5193": {
      "op": "DUP4"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "op": "SLT"
    },
    "5196": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "5199": {
      "op": "JUMPI"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5202": {
      "op": "DUP1"
    },
    "5203": {
      "op": "REVERT"
    },
    "5204": {
      "op": "JUMPDEST"
    },
    "5205": {
      "op": "DUP2"
    },
    "5206": {
      "op": "CALLDATALOAD"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5209": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5218": {
      "op": "DUP3"
    },
    "5219": {
      "op": "GT"
    },
    "5220": {
      "op": "ISZERO"
    },
    "5221": {
      "op": "PUSH2",
      "value": "0x1470"
    },
    "5224": {
      "op": "JUMPI"
    },
    "5225": {
      "op": "PUSH2",
      "value": "0x1470"
    },
    "5228": {
      "op": "PUSH2",
      "value": "0x11C7"
    },
    "5231": {
      "jump": "i",
      "op": "JUMP"
    },
    "5232": {
      "op": "JUMPDEST"
    },
    "5233": {
      "op": "DUP2"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5236": {
      "op": "SHL"
    },
    "5237": {
      "op": "PUSH2",
      "value": "0x147F"
    },
    "5240": {
      "op": "DUP3"
    },
    "5241": {
      "op": "DUP3"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "PUSH2",
      "value": "0x11DD"
    },
    "5246": {
      "jump": "i",
      "op": "JUMP"
    },
    "5247": {
      "op": "JUMPDEST"
    },
    "5248": {
      "op": "SWAP3"
    },
    "5249": {
      "op": "DUP4"
    },
    "5250": {
      "op": "MSTORE"
    },
    "5251": {
      "op": "DUP5"
    },
    "5252": {
      "op": "DUP2"
    },
    "5253": {
      "op": "ADD"
    },
    "5254": {
      "op": "DUP3"
    },
    "5255": {
      "op": "ADD"
    },
    "5256": {
      "op": "SWAP3"
    },
    "5257": {
      "op": "DUP3"
    },
    "5258": {
      "op": "DUP2"
    },
    "5259": {
      "op": "ADD"
    },
    "5260": {
      "op": "SWAP1"
    },
    "5261": {
      "op": "DUP8"
    },
    "5262": {
      "op": "DUP6"
    },
    "5263": {
      "op": "GT"
    },
    "5264": {
      "op": "ISZERO"
    },
    "5265": {
      "op": "PUSH2",
      "value": "0x1499"
    },
    "5268": {
      "op": "JUMPI"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5271": {
      "op": "DUP1"
    },
    "5272": {
      "op": "REVERT"
    },
    "5273": {
      "op": "JUMPDEST"
    },
    "5274": {
      "op": "DUP4"
    },
    "5275": {
      "op": "DUP8"
    },
    "5276": {
      "op": "ADD"
    },
    "5277": {
      "op": "SWAP3"
    },
    "5278": {
      "op": "POP"
    },
    "5279": {
      "op": "JUMPDEST"
    },
    "5280": {
      "op": "DUP5"
    },
    "5281": {
      "op": "DUP4"
    },
    "5282": {
      "op": "LT"
    },
    "5283": {
      "op": "ISZERO"
    },
    "5284": {
      "op": "PUSH2",
      "value": "0x14BF"
    },
    "5287": {
      "op": "JUMPI"
    },
    "5288": {
      "op": "PUSH2",
      "value": "0x14B0"
    },
    "5291": {
      "op": "DUP4"
    },
    "5292": {
      "op": "PUSH2",
      "value": "0x1189"
    },
    "5295": {
      "jump": "i",
      "op": "JUMP"
    },
    "5296": {
      "op": "JUMPDEST"
    },
    "5297": {
      "op": "DUP3"
    },
    "5298": {
      "op": "MSTORE"
    },
    "5299": {
      "op": "SWAP2"
    },
    "5300": {
      "op": "DUP4"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "SWAP2"
    },
    "5303": {
      "op": "SWAP1"
    },
    "5304": {
      "op": "DUP4"
    },
    "5305": {
      "op": "ADD"
    },
    "5306": {
      "op": "SWAP1"
    },
    "5307": {
      "op": "PUSH2",
      "value": "0x149F"
    },
    "5310": {
      "op": "JUMP"
    },
    "5311": {
      "op": "JUMPDEST"
    },
    "5312": {
      "op": "SWAP8"
    },
    "5313": {
      "op": "SWAP7"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "POP"
    },
    "5316": {
      "op": "POP"
    },
    "5317": {
      "op": "POP"
    },
    "5318": {
      "op": "POP"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "op": "POP"
    },
    "5321": {
      "jump": "o",
      "op": "JUMP"
    },
    "5322": {
      "op": "JUMPDEST"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5325": {
      "op": "DUP1"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5330": {
      "op": "DUP5"
    },
    "5331": {
      "op": "DUP7"
    },
    "5332": {
      "op": "SUB"
    },
    "5333": {
      "op": "SLT"
    },
    "5334": {
      "op": "ISZERO"
    },
    "5335": {
      "op": "PUSH2",
      "value": "0x14DF"
    },
    "5338": {
      "op": "JUMPI"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5341": {
      "op": "DUP1"
    },
    "5342": {
      "op": "REVERT"
    },
    "5343": {
      "op": "JUMPDEST"
    },
    "5344": {
      "op": "DUP4"
    },
    "5345": {
      "op": "CALLDATALOAD"
    },
    "5346": {
      "op": "PUSH2",
      "value": "0x14EA"
    },
    "5349": {
      "op": "DUP2"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x1435"
    },
    "5353": {
      "jump": "i",
      "op": "JUMP"
    },
    "5354": {
      "op": "JUMPDEST"
    },
    "5355": {
      "op": "SWAP3"
    },
    "5356": {
      "op": "POP"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5359": {
      "op": "DUP5"
    },
    "5360": {
      "op": "ADD"
    },
    "5361": {
      "op": "CALLDATALOAD"
    },
    "5362": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5371": {
      "op": "DUP1"
    },
    "5372": {
      "op": "DUP3"
    },
    "5373": {
      "op": "GT"
    },
    "5374": {
      "op": "ISZERO"
    },
    "5375": {
      "op": "PUSH2",
      "value": "0x1507"
    },
    "5378": {
      "op": "JUMPI"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5381": {
      "op": "DUP1"
    },
    "5382": {
      "op": "REVERT"
    },
    "5383": {
      "op": "JUMPDEST"
    },
    "5384": {
      "op": "PUSH2",
      "value": "0x1513"
    },
    "5387": {
      "op": "DUP8"
    },
    "5388": {
      "op": "DUP4"
    },
    "5389": {
      "op": "DUP9"
    },
    "5390": {
      "op": "ADD"
    },
    "5391": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "5394": {
      "jump": "i",
      "op": "JUMP"
    },
    "5395": {
      "op": "JUMPDEST"
    },
    "5396": {
      "op": "SWAP4"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5400": {
      "op": "DUP7"
    },
    "5401": {
      "op": "ADD"
    },
    "5402": {
      "op": "CALLDATALOAD"
    },
    "5403": {
      "op": "SWAP2"
    },
    "5404": {
      "op": "POP"
    },
    "5405": {
      "op": "DUP1"
    },
    "5406": {
      "op": "DUP3"
    },
    "5407": {
      "op": "GT"
    },
    "5408": {
      "op": "ISZERO"
    },
    "5409": {
      "op": "PUSH2",
      "value": "0x1529"
    },
    "5412": {
      "op": "JUMPI"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5415": {
      "op": "DUP1"
    },
    "5416": {
      "op": "REVERT"
    },
    "5417": {
      "op": "JUMPDEST"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "PUSH2",
      "value": "0x1536"
    },
    "5422": {
      "op": "DUP7"
    },
    "5423": {
      "op": "DUP3"
    },
    "5424": {
      "op": "DUP8"
    },
    "5425": {
      "op": "ADD"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x1443"
    },
    "5429": {
      "jump": "i",
      "op": "JUMP"
    },
    "5430": {
      "op": "JUMPDEST"
    },
    "5431": {
      "op": "SWAP2"
    },
    "5432": {
      "op": "POP"
    },
    "5433": {
      "op": "POP"
    },
    "5434": {
      "op": "SWAP3"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "op": "SWAP3"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "op": "SWAP3"
    },
    "5439": {
      "jump": "o",
      "op": "JUMP"
    },
    "5440": {
      "op": "JUMPDEST"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5443": {
      "op": "DUP2"
    },
    "5444": {
      "op": "MSTORE"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5447": {
      "op": "DUP3"
    },
    "5448": {
      "op": "MLOAD"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5453": {
      "op": "DUP5"
    },
    "5454": {
      "op": "ADD"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5461": {
      "op": "DUP5"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "DUP3"
    },
    "5464": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "5467": {
      "jump": "i",
      "op": "JUMP"
    },
    "5468": {
      "op": "JUMPDEST"
    },
    "5469": {
      "op": "SWAP1"
    },
    "5470": {
      "op": "POP"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5473": {
      "op": "DUP5"
    },
    "5474": {
      "op": "ADD"
    },
    "5475": {
      "op": "MLOAD"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5478": {
      "op": "NOT"
    },
    "5479": {
      "op": "DUP5"
    },
    "5480": {
      "op": "DUP4"
    },
    "5481": {
      "op": "SUB"
    },
    "5482": {
      "op": "ADD"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5485": {
      "op": "DUP6"
    },
    "5486": {
      "op": "ADD"
    },
    "5487": {
      "op": "MSTORE"
    },
    "5488": {
      "op": "PUSH2",
      "value": "0x1579"
    },
    "5491": {
      "op": "DUP3"
    },
    "5492": {
      "op": "DUP3"
    },
    "5493": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "5496": {
      "jump": "i",
      "op": "JUMP"
    },
    "5497": {
      "op": "JUMPDEST"
    },
    "5498": {
      "op": "SWAP2"
    },
    "5499": {
      "op": "POP"
    },
    "5500": {
      "op": "POP"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5503": {
      "op": "DUP5"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "MLOAD"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5508": {
      "op": "DUP5"
    },
    "5509": {
      "op": "ADD"
    },
    "5510": {
      "op": "MSTORE"
    },
    "5511": {
      "op": "DUP1"
    },
    "5512": {
      "op": "SWAP2"
    },
    "5513": {
      "op": "POP"
    },
    "5514": {
      "op": "POP"
    },
    "5515": {
      "op": "SWAP3"
    },
    "5516": {
      "op": "SWAP2"
    },
    "5517": {
      "op": "POP"
    },
    "5518": {
      "op": "POP"
    },
    "5519": {
      "jump": "o",
      "op": "JUMP"
    },
    "5520": {
      "op": "JUMPDEST"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5523": {
      "op": "DUP1"
    },
    "5524": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5526": {
      "op": "DUP4"
    },
    "5527": {
      "op": "DUP6"
    },
    "5528": {
      "op": "SUB"
    },
    "5529": {
      "op": "SLT"
    },
    "5530": {
      "op": "ISZERO"
    },
    "5531": {
      "op": "PUSH2",
      "value": "0x15A3"
    },
    "5534": {
      "op": "JUMPI"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5537": {
      "op": "DUP1"
    },
    "5538": {
      "op": "REVERT"
    },
    "5539": {
      "op": "JUMPDEST"
    },
    "5540": {
      "op": "POP"
    },
    "5541": {
      "op": "POP"
    },
    "5542": {
      "op": "DUP1"
    },
    "5543": {
      "op": "CALLDATALOAD"
    },
    "5544": {
      "op": "SWAP3"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5547": {
      "op": "SWAP1"
    },
    "5548": {
      "op": "SWAP2"
    },
    "5549": {
      "op": "ADD"
    },
    "5550": {
      "op": "CALLDATALOAD"
    },
    "5551": {
      "op": "SWAP2"
    },
    "5552": {
      "op": "POP"
    },
    "5553": {
      "jump": "o",
      "op": "JUMP"
    },
    "5554": {
      "op": "JUMPDEST"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5557": {
      "op": "DUP1"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5560": {
      "op": "DUP4"
    },
    "5561": {
      "op": "DUP6"
    },
    "5562": {
      "op": "SUB"
    },
    "5563": {
      "op": "SLT"
    },
    "5564": {
      "op": "ISZERO"
    },
    "5565": {
      "op": "PUSH2",
      "value": "0x15C5"
    },
    "5568": {
      "op": "JUMPI"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5571": {
      "op": "DUP1"
    },
    "5572": {
      "op": "REVERT"
    },
    "5573": {
      "op": "JUMPDEST"
    },
    "5574": {
      "op": "DUP3"
    },
    "5575": {
      "op": "CALLDATALOAD"
    },
    "5576": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5585": {
      "op": "DUP1"
    },
    "5586": {
      "op": "DUP3"
    },
    "5587": {
      "op": "GT"
    },
    "5588": {
      "op": "ISZERO"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x15DD"
    },
    "5592": {
      "op": "JUMPI"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5595": {
      "op": "DUP1"
    },
    "5596": {
      "op": "REVERT"
    },
    "5597": {
      "op": "JUMPDEST"
    },
    "5598": {
      "op": "PUSH2",
      "value": "0x15E9"
    },
    "5601": {
      "op": "DUP7"
    },
    "5602": {
      "op": "DUP4"
    },
    "5603": {
      "op": "DUP8"
    },
    "5604": {
      "op": "ADD"
    },
    "5605": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "5608": {
      "jump": "i",
      "op": "JUMP"
    },
    "5609": {
      "op": "JUMPDEST"
    },
    "5610": {
      "op": "SWAP4"
    },
    "5611": {
      "op": "POP"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5614": {
      "op": "DUP6"
    },
    "5615": {
      "op": "ADD"
    },
    "5616": {
      "op": "CALLDATALOAD"
    },
    "5617": {
      "op": "SWAP2"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "op": "DUP1"
    },
    "5620": {
      "op": "DUP3"
    },
    "5621": {
      "op": "GT"
    },
    "5622": {
      "op": "ISZERO"
    },
    "5623": {
      "op": "PUSH2",
      "value": "0x15FF"
    },
    "5626": {
      "op": "JUMPI"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5629": {
      "op": "DUP1"
    },
    "5630": {
      "op": "REVERT"
    },
    "5631": {
      "op": "JUMPDEST"
    },
    "5632": {
      "op": "POP"
    },
    "5633": {
      "op": "PUSH2",
      "value": "0x142B"
    },
    "5636": {
      "op": "DUP6"
    },
    "5637": {
      "op": "DUP3"
    },
    "5638": {
      "op": "DUP7"
    },
    "5639": {
      "op": "ADD"
    },
    "5640": {
      "op": "PUSH2",
      "value": "0x1443"
    },
    "5643": {
      "jump": "i",
      "op": "JUMP"
    },
    "5644": {
      "op": "JUMPDEST"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5649": {
      "op": "DUP3"
    },
    "5650": {
      "op": "DUP5"
    },
    "5651": {
      "op": "SUB"
    },
    "5652": {
      "op": "SLT"
    },
    "5653": {
      "op": "ISZERO"
    },
    "5654": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "5657": {
      "op": "JUMPI"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5660": {
      "op": "DUP1"
    },
    "5661": {
      "op": "REVERT"
    },
    "5662": {
      "op": "JUMPDEST"
    },
    "5663": {
      "op": "POP"
    },
    "5664": {
      "op": "CALLDATALOAD"
    },
    "5665": {
      "op": "SWAP2"
    },
    "5666": {
      "op": "SWAP1"
    },
    "5667": {
      "op": "POP"
    },
    "5668": {
      "jump": "o",
      "op": "JUMP"
    },
    "5669": {
      "op": "JUMPDEST"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5672": {
      "op": "DUP2"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5676": {
      "op": "DUP4"
    },
    "5677": {
      "op": "LT"
    },
    "5678": {
      "op": "PUSH2",
      "value": "0x1647"
    },
    "5681": {
      "op": "JUMPI"
    },
    "5682": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5689": {
      "op": "SHL"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5692": {
      "op": "MSTORE"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5697": {
      "op": "MSTORE"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5702": {
      "op": "REVERT"
    },
    "5703": {
      "op": "JUMPDEST"
    },
    "5704": {
      "op": "SWAP2"
    },
    "5705": {
      "op": "SWAP1"
    },
    "5706": {
      "op": "MSTORE"
    },
    "5707": {
      "op": "SWAP1"
    },
    "5708": {
      "jump": "o",
      "op": "JUMP"
    },
    "5709": {
      "op": "JUMPDEST"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5712": {
      "op": "DUP3"
    },
    "5713": {
      "op": "MLOAD"
    },
    "5714": {
      "op": "PUSH2",
      "value": "0x165F"
    },
    "5717": {
      "op": "DUP2"
    },
    "5718": {
      "op": "DUP5"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5721": {
      "op": "DUP8"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "op": "PUSH2",
      "value": "0x12B3"
    },
    "5726": {
      "jump": "i",
      "op": "JUMP"
    },
    "5727": {
      "op": "JUMPDEST"
    },
    "5728": {
      "op": "SWAP2"
    },
    "5729": {
      "op": "SWAP1"
    },
    "5730": {
      "op": "SWAP2"
    },
    "5731": {
      "op": "ADD"
    },
    "5732": {
      "op": "SWAP3"
    },
    "5733": {
      "op": "SWAP2"
    },
    "5734": {
      "op": "POP"
    },
    "5735": {
      "op": "POP"
    },
    "5736": {
      "jump": "o",
      "op": "JUMP"
    },
    "5737": {
      "op": "JUMPDEST"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5740": {
      "op": "DUP2"
    },
    "5741": {
      "op": "DUP2"
    },
    "5742": {
      "op": "SHR"
    },
    "5743": {
      "op": "SWAP1"
    },
    "5744": {
      "op": "DUP3"
    },
    "5745": {
      "op": "AND"
    },
    "5746": {
      "op": "DUP1"
    },
    "5747": {
      "op": "PUSH2",
      "value": "0x167D"
    },
    "5750": {
      "op": "JUMPI"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5753": {
      "op": "DUP3"
    },
    "5754": {
      "op": "AND"
    },
    "5755": {
      "op": "SWAP2"
    },
    "5756": {
      "op": "POP"
    },
    "5757": {
      "op": "JUMPDEST"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "LT"
    },
    "5762": {
      "op": "DUP2"
    },
    "5763": {
      "op": "EQ"
    },
    "5764": {
      "op": "ISZERO"
    },
    "5765": {
      "op": "PUSH2",
      "value": "0x169E"
    },
    "5768": {
      "op": "JUMPI"
    },
    "5769": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5776": {
      "op": "SHL"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5779": {
      "op": "MSTORE"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5784": {
      "op": "MSTORE"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5789": {
      "op": "REVERT"
    },
    "5790": {
      "op": "JUMPDEST"
    },
    "5791": {
      "op": "POP"
    },
    "5792": {
      "op": "SWAP2"
    },
    "5793": {
      "op": "SWAP1"
    },
    "5794": {
      "op": "POP"
    },
    "5795": {
      "jump": "o",
      "op": "JUMP"
    },
    "5796": {
      "op": "JUMPDEST"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5799": {
      "op": "DUP1"
    },
    "5800": {
      "op": "DUP3"
    },
    "5801": {
      "op": "MSTORE"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5804": {
      "op": "SWAP1"
    },
    "5805": {
      "op": "DUP3"
    },
    "5806": {
      "op": "ADD"
    },
    "5807": {
      "op": "MSTORE"
    },
    "5808": {
      "op": "PUSH32",
      "value": "0x5573657220646F6573206E6F7420657869737473206F6E207468652067726F75"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5843": {
      "op": "DUP3"
    },
    "5844": {
      "op": "ADD"
    },
    "5845": {
      "op": "MSTORE"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "5850": {
      "op": "SHL"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5853": {
      "op": "DUP3"
    },
    "5854": {
      "op": "ADD"
    },
    "5855": {
      "op": "MSTORE"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5858": {
      "op": "ADD"
    },
    "5859": {
      "op": "SWAP1"
    },
    "5860": {
      "jump": "o",
      "op": "JUMP"
    },
    "5861": {
      "op": "JUMPDEST"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5864": {
      "op": "DUP2"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5868": {
      "op": "PUSH2",
      "value": "0x16F8"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5873": {
      "op": "DUP4"
    },
    "5874": {
      "op": "ADD"
    },
    "5875": {
      "op": "DUP6"
    },
    "5876": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "5879": {
      "jump": "i",
      "op": "JUMP"
    },
    "5880": {
      "op": "JUMPDEST"
    },
    "5881": {
      "op": "SWAP1"
    },
    "5882": {
      "op": "POP"
    },
    "5883": {
      "op": "DUP3"
    },
    "5884": {
      "op": "ISZERO"
    },
    "5885": {
      "op": "ISZERO"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5888": {
      "op": "DUP4"
    },
    "5889": {
      "op": "ADD"
    },
    "5890": {
      "op": "MSTORE"
    },
    "5891": {
      "op": "SWAP4"
    },
    "5892": {
      "op": "SWAP3"
    },
    "5893": {
      "op": "POP"
    },
    "5894": {
      "op": "POP"
    },
    "5895": {
      "op": "POP"
    },
    "5896": {
      "jump": "o",
      "op": "JUMP"
    },
    "5897": {
      "op": "JUMPDEST"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5900": {
      "op": "DUP2"
    },
    "5901": {
      "op": "MSTORE"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5904": {
      "op": "PUSH2",
      "value": "0x11C0"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5909": {
      "op": "DUP4"
    },
    "5910": {
      "op": "ADD"
    },
    "5911": {
      "op": "DUP5"
    },
    "5912": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "5915": {
      "jump": "i",
      "op": "JUMP"
    },
    "5916": {
      "op": "JUMPDEST"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5921": {
      "op": "DUP3"
    },
    "5922": {
      "op": "DUP5"
    },
    "5923": {
      "op": "SUB"
    },
    "5924": {
      "op": "SLT"
    },
    "5925": {
      "op": "ISZERO"
    },
    "5926": {
      "op": "PUSH2",
      "value": "0x172E"
    },
    "5929": {
      "op": "JUMPI"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5932": {
      "op": "DUP1"
    },
    "5933": {
      "op": "REVERT"
    },
    "5934": {
      "op": "JUMPDEST"
    },
    "5935": {
      "op": "POP"
    },
    "5936": {
      "op": "MLOAD"
    },
    "5937": {
      "op": "SWAP2"
    },
    "5938": {
      "op": "SWAP1"
    },
    "5939": {
      "op": "POP"
    },
    "5940": {
      "jump": "o",
      "op": "JUMP"
    },
    "5941": {
      "op": "JUMPDEST"
    },
    "5942": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5949": {
      "op": "SHL"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5952": {
      "op": "MSTORE"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5957": {
      "op": "MSTORE"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5962": {
      "op": "REVERT"
    },
    "5963": {
      "op": "JUMPDEST"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5966": {
      "op": "DUP3"
    },
    "5967": {
      "op": "DUP3"
    },
    "5968": {
      "op": "LT"
    },
    "5969": {
      "op": "ISZERO"
    },
    "5970": {
      "op": "PUSH2",
      "value": "0x175D"
    },
    "5973": {
      "op": "JUMPI"
    },
    "5974": {
      "op": "PUSH2",
      "value": "0x175D"
    },
    "5977": {
      "op": "PUSH2",
      "value": "0x1735"
    },
    "5980": {
      "jump": "i",
      "op": "JUMP"
    },
    "5981": {
      "op": "JUMPDEST"
    },
    "5982": {
      "op": "POP"
    },
    "5983": {
      "op": "SUB"
    },
    "5984": {
      "op": "SWAP1"
    },
    "5985": {
      "jump": "o",
      "op": "JUMP"
    },
    "5986": {
      "op": "JUMPDEST"
    },
    "5987": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5994": {
      "op": "SHL"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "MSTORE"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6002": {
      "op": "MSTORE"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6007": {
      "op": "REVERT"
    },
    "6008": {
      "op": "JUMPDEST"
    },
    "6009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6013": {
      "op": "NOT"
    },
    "6014": {
      "op": "DUP3"
    },
    "6015": {
      "op": "EQ"
    },
    "6016": {
      "op": "ISZERO"
    },
    "6017": {
      "op": "PUSH2",
      "value": "0x178C"
    },
    "6020": {
      "op": "JUMPI"
    },
    "6021": {
      "op": "PUSH2",
      "value": "0x178C"
    },
    "6024": {
      "op": "PUSH2",
      "value": "0x1735"
    },
    "6027": {
      "jump": "i",
      "op": "JUMP"
    },
    "6028": {
      "op": "JUMPDEST"
    },
    "6029": {
      "op": "POP"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6032": {
      "op": "ADD"
    },
    "6033": {
      "op": "SWAP1"
    },
    "6034": {
      "jump": "o",
      "op": "JUMP"
    },
    "6035": {
      "op": "JUMPDEST"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6038": {
      "op": "DUP1"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6041": {
      "op": "SHL"
    },
    "6042": {
      "op": "SUB"
    },
    "6043": {
      "op": "DUP5"
    },
    "6044": {
      "op": "AND"
    },
    "6045": {
      "op": "DUP2"
    },
    "6046": {
      "op": "MSTORE"
    },
    "6047": {
      "op": "DUP3"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6050": {
      "op": "DUP3"
    },
    "6051": {
      "op": "ADD"
    },
    "6052": {
      "op": "MSTORE"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6057": {
      "op": "DUP3"
    },
    "6058": {
      "op": "ADD"
    },
    "6059": {
      "op": "MSTORE"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6062": {
      "op": "PUSH2",
      "value": "0x17BA"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6067": {
      "op": "DUP4"
    },
    "6068": {
      "op": "ADD"
    },
    "6069": {
      "op": "DUP5"
    },
    "6070": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "6073": {
      "jump": "i",
      "op": "JUMP"
    },
    "6074": {
      "op": "JUMPDEST"
    },
    "6075": {
      "op": "SWAP6"
    },
    "6076": {
      "op": "SWAP5"
    },
    "6077": {
      "op": "POP"
    },
    "6078": {
      "op": "POP"
    },
    "6079": {
      "op": "POP"
    },
    "6080": {
      "op": "POP"
    },
    "6081": {
      "op": "POP"
    },
    "6082": {
      "jump": "o",
      "op": "JUMP"
    },
    "6083": {
      "op": "JUMPDEST"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6088": {
      "op": "DUP3"
    },
    "6089": {
      "op": "DUP5"
    },
    "6090": {
      "op": "SUB"
    },
    "6091": {
      "op": "SLT"
    },
    "6092": {
      "op": "ISZERO"
    },
    "6093": {
      "op": "PUSH2",
      "value": "0x17D5"
    },
    "6096": {
      "op": "JUMPI"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6099": {
      "op": "DUP1"
    },
    "6100": {
      "op": "REVERT"
    },
    "6101": {
      "op": "JUMPDEST"
    },
    "6102": {
      "op": "DUP2"
    },
    "6103": {
      "op": "MLOAD"
    },
    "6104": {
      "op": "PUSH2",
      "value": "0x11C0"
    },
    "6107": {
      "op": "DUP2"
    },
    "6108": {
      "op": "PUSH2",
      "value": "0x1435"
    },
    "6111": {
      "jump": "i",
      "op": "JUMP"
    },
    "6112": {
      "op": "JUMPDEST"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6115": {
      "op": "DUP3"
    },
    "6116": {
      "op": "NOT"
    },
    "6117": {
      "op": "DUP3"
    },
    "6118": {
      "op": "GT"
    },
    "6119": {
      "op": "ISZERO"
    },
    "6120": {
      "op": "PUSH2",
      "value": "0x17F3"
    },
    "6123": {
      "op": "JUMPI"
    },
    "6124": {
      "op": "PUSH2",
      "value": "0x17F3"
    },
    "6127": {
      "op": "PUSH2",
      "value": "0x1735"
    },
    "6130": {
      "jump": "i",
      "op": "JUMP"
    },
    "6131": {
      "op": "JUMPDEST"
    },
    "6132": {
      "op": "POP"
    },
    "6133": {
      "op": "ADD"
    },
    "6134": {
      "op": "SWAP1"
    },
    "6135": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "53271e4bd9ae9f49625eba95a3430f00eb6ea94d",
  "source": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\n\n// User Struct for interaction with the Platform\ncontract Wingbird is Ownable, VRFConsumerBase {\n    // CHainlink random number generation\n    bytes32 internal keyHash;\n    uint256 internal fee;\n    uint256 public randomResult;\n\n    constructor(\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyhash\n    ) VRFConsumerBase(_vrfCoordinator, _link) {\n        keyHash = _keyhash;\n        fee = _fee; // 0.1 LINK (Varies by network)\n    }\n\n    function getRandomNumber() public {\n        require(\n            LINK.balanceOf(address(this)) >= fee,\n            \"Not enough LINK - fill contract with faucet\"\n        );\n        bytes32 requestId = requestRandomness(keyHash, fee);\n        emit RequestedRandomness(requestId);\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(_randomness > 0, \"random not found\");\n        randomResult = _randomness;\n    }\n\n    // PHASE0 TUTORIAL, USER CREATION, AND FIRST SEEDS\n\n    // Each bird Represents a user.\n    struct User {\n        string nickName;\n        string imgURL;\n        uint256 randomNumber;\n    }\n\n    enum EggColors {\n        RED,\n        GREE,\n        PURPLE\n    }\n\n    struct BirdHonors {\n        uint256 OwlPoints;\n        uint256 EaglePoints;\n        uint256 PeacockPoints;\n        uint256 HummingbirdPoints;\n        uint256 PenguinPoints;\n    }\n\n    enum BirdRoles {\n        EAGLE,\n        OWL,\n        PEACOCK,\n        PENGUIN,\n        HUMMINGBIRD\n    }\n\n    struct IpfsInfo {\n        string ipfs_cid;\n        address[] _birds;\n    }\n\n    BirdRoles birds;\n\n    address[] totalBirdsOnPlatform;\n\n    // Mappings for different dataTypes\n    mapping(address => User) birdsOnThePlatform;\n    mapping(uint256 => EggColors) public colorIdToEgg;\n    mapping(address => uint256) public birdSeeds;\n    mapping(address => BirdHonors) birdHonor;\n    mapping(string => IpfsInfo) ipfsCids;\n\n    //events\n    //chainlink suff\n    event RequestedRandomness(bytes32 requestId);\n    //contract\n    event userCreated(address _userAddress);\n    event userFunded(address _userAddress, uint256 _amount);\n    event honorSent(uint256 _amount);\n\n    // phase1\n    // NOTE: Which other parameters the emet should emit?\n    event missionOneCompleted(string _ipfs_cid);\n    event missionTwoConsensusCompleted(string _ipfs_cid, bool _consensus);\n\n    //events for storage phase1\n\n    // Creates user passing the chosen nickname, the address, the color of the egg.\n    // The IMG should be URL stored on IPFS\n    // This is the first function to call from the RPG\n    function createNewUser(string memory _nickname, string memory _imgURL)\n        public\n    {\n        // Replace this when using a current ERC20 TOKEN\n        require(getUserBalance(msg.sender) == 0, \"User already exists!\");\n        getRandomNumber();\n        User memory user = User(_nickname, _imgURL, randomResult);\n        birdsOnThePlatform[msg.sender] = user;\n        BirdHonors memory birdHonors = BirdHonors(0, 0, 0, 0, 0);\n        birdHonor[msg.sender] = birdHonors;\n        totalBirdsOnPlatform.push(msg.sender);\n        giveInitialSeeds(msg.sender, 100); // Hardcoded 100 seeds\n        emit userCreated(msg.sender);\n    }\n\n    // Give Seeds to user\n    // NOTE: should we change this to an actual ERC20?\n    // THe amoun should be decided by hackathon organizers, for MVP is Hardcoded.\n    function giveInitialSeeds(address _bird, uint256 _amount) internal {\n        require(_amount >= 100, \"The Minimum amount should be 100\");\n        birdSeeds[_bird] = _amount;\n        emit userFunded(_bird, _amount);\n    }\n\n    function getUser(address _bird) public view returns (User memory) {\n        return birdsOnThePlatform[_bird];\n    }\n\n    function getUserBalance(address _bird) public view returns (uint256) {\n        return birdSeeds[_bird];\n    }\n\n    function getTotalBirds() public view returns (uint256) {\n        return totalBirdsOnPlatform.length;\n    }\n\n    // PHASE 1 PVP AND HONOR SYSTEM, and Honor Getting\n\n    // syncSenses Is the first function of the pvp function\n    function syncSenses(\n        string memory _ipfs_cid_mission1,\n        address[] memory _birds\n    ) public {\n        require(\n            checkAddress(msg.sender, _birds) == true,\n            \"User does not exists on the group\"\n        );\n        IpfsInfo memory newCid = IpfsInfo(_ipfs_cid_mission1, _birds);\n        ipfsCids[_ipfs_cid_mission1] = newCid;\n        emit missionOneCompleted(_ipfs_cid_mission1);\n    }\n\n    function reachConsensus(\n        bool _consensusReached,\n        string memory _ipfs_cid_mission2,\n        address[] memory _birds\n    ) public {\n        require(\n            checkAddress(msg.sender, _birds) == true,\n            \"User does not exists on the group\"\n        );\n        require(_consensusReached == true, \"Consensus not reached\");\n        IpfsInfo memory newCid = IpfsInfo(_ipfs_cid_mission2, _birds);\n        ipfsCids[_ipfs_cid_mission2] = newCid;\n        emit missionTwoConsensusCompleted(\n            _ipfs_cid_mission2,\n            _consensusReached\n        );\n    }\n\n    function getIpfsObject(string memory _cid)\n        public\n        view\n        returns (IpfsInfo memory)\n    {\n        return ipfsCids[_cid];\n    }\n\n    // check if the address on a given array\n    function checkAddress(address _userAddress, address[] memory _users)\n        internal\n        pure\n        returns (bool)\n    {\n        bool exist = false;\n        for (uint256 i = 0; i < _users.length; i++) {\n            if (_users[i] == _userAddress) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    // Spend token for honor system.\n    // NOTE: should also replace with actual ERC20 token.\n    function giveHonors(uint256 _amount) public {\n        require(_amount == 10);\n        birdSeeds[msg.sender] = birdSeeds[msg.sender] - 10;\n        emit honorSent(_amount);\n    }\n\n    // Interaction storage functions for IPFS\n    function buildFences(string memory _ipfs_cid_mission) public {}\n\n    // set the final puntuation for the bird, based on the honorSent\n\n    function setFinalHonors(\n        uint256 _owl,\n        uint256 _eagle,\n        uint256 _peacock,\n        uint256 _penguin,\n        uint256 _hummingbird,\n        address _bird\n    ) public {\n        birdHonor[_bird].EaglePoints = _eagle;\n        birdHonor[_bird].OwlPoints = _owl;\n        birdHonor[_bird].PenguinPoints = _penguin;\n        birdHonor[_bird].HummingbirdPoints = _hummingbird;\n        birdHonor[_bird].PeacockPoints = _peacock;\n    }\n\n    function getFinalHonors(address _bird)\n        public\n        view\n        returns (BirdHonors memory)\n    {\n        return birdHonor[_bird];\n    }\n}\n",
  "sourceMap": "220:6680:5:-:0;;;404:249;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;542:15;559:5;921:32:0;719:10:1;921:18:0;:32::i;:::-;-1:-1:-1;;;;;9305:32:2;;;;;9343;;;576:7:5::1;:18:::0;604:3:::1;:10:::0;-1:-1:-1;220:6680:5;;-1:-1:-1;220:6680:5;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:7;-1:-1:-1;;;196:416:7:o;:::-;220:6680:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Wingbird.sol",
  "type": "contract"
}